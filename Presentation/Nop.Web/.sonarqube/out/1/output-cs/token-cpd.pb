—

sC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\EfDataProviderManager.cs
	namespace 	
Nop
 
. 
Data 
{ 
public		 

partial		 
class		 !
EfDataProviderManager		 .
:		/ 0 
IDataProviderManager		1 E
{

 
public 
IDataProvider 
DataProvider )
{ 	
get 
{ 
var 
providerName  
=! "
DataSettingsManager# 6
.6 7
LoadSettings7 C
(C D
)D E
?E F
.F G
DataProviderG S
;S T
switch 
( 
providerName $
)$ %
{ 
case 
DataProviderType )
.) *
	SqlServer* 3
:3 4
return 
new "!
SqlServerDataProvider# 8
(8 9
)9 :
;: ;
default   
:   
throw!! 
new!! !
NopException!!" .
(!!. /
$"!!/ 1
$str!!1 T
{!!T U
providerName!!U a
}!!a b
$str!!b c
"!!c d
)!!d e
;!!e f
}"" 
}## 
}$$ 	
}'' 
}(( Õe
jC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\EfRepository.cs
	namespace		 	
Nop		
 
.		 
Data		 
{

 
public 

partial 
class 
EfRepository %
<% &
TEntity& -
>- .
:/ 0
IRepository1 <
<< =
TEntity= D
>D E
whereF K
TEntityL S
:T U

BaseEntityV `
{ 
private 
readonly 

IDbContext #
_context$ ,
;, -
private 
DbSet 
< 
TEntity 
> 
	_entities (
;( )
public 
EfRepository 
( 

IDbContext &
context' .
). /
{ 	
_context 
= 
context 
; 
} 	
	protected)) 
string)) 4
(GetFullErrorTextAndRollbackEntityChanges)) A
())A B
DbUpdateException))B S
	exception))T ]
)))] ^
{** 	
if,, 
(,, 
_context,, 
is,, 
	DbContext,, %
	dbContext,,& /
),,/ 0
{-- 
var.. 
entries.. 
=.. 
	dbContext.. '
...' (
ChangeTracker..( 5
...5 6
Entries..6 =
(..= >
)..> ?
.// 
Where// 
(// 
e// 
=>// 
e//  !
.//! "
State//" '
==//( *
EntityState//+ 6
.//6 7
Added//7 <
||//= ?
e//@ A
.//A B
State//B G
==//H J
EntityState//K V
.//V W
Modified//W _
)//_ `
.//` a
ToList//a g
(//g h
)//h i
;//i j
entries11 
.11 
ForEach11 
(11  
entry11  %
=>11& (
{22 
try33 
{44 
entry55 
.55 
State55 #
=55$ %
EntityState55& 1
.551 2
	Unchanged552 ;
;55; <
}66 
catch77 
(77 %
InvalidOperationException77 4
)774 5
{88 
}:: 
};; 
);; 
;;; 
}<< 
try>> 
{?? 
_context@@ 
.@@ 
SaveChanges@@ $
(@@$ %
)@@% &
;@@& '
returnAA 
	exceptionAA  
.AA  !
ToStringAA! )
(AA) *
)AA* +
;AA+ ,
}BB 
catchCC 
(CC 
	ExceptionCC 
exCC 
)CC  
{DD 
returnGG 
exGG 
.GG 
ToStringGG "
(GG" #
)GG# $
;GG$ %
}HH 
}II 	
publicTT 
virtualTT 
TEntityTT 
GetByIdTT &
(TT& '
objectTT' -
idTT. 0
)TT0 1
{UU 	
returnVV 
EntitiesVV 
.VV 
FindVV  
(VV  !
idVV! #
)VV# $
;VV$ %
}WW 	
public]] 
virtual]] 
void]] 
Insert]] "
(]]" #
TEntity]]# *
entity]]+ 1
)]]1 2
{^^ 	
if__ 
(__ 
entity__ 
==__ 
null__ 
)__ 
throw`` 
new`` !
ArgumentNullException`` /
(``/ 0
nameof``0 6
(``6 7
entity``7 =
)``= >
)``> ?
;``? @
trybb 
{cc 
Entitiesdd 
.dd 
Adddd 
(dd 
entitydd #
)dd# $
;dd$ %
_contextee 
.ee 
SaveChangesee $
(ee$ %
)ee% &
;ee& '
}ff 
catchgg 
(gg 
DbUpdateExceptiongg $
	exceptiongg% .
)gg. /
{hh 
throwjj 
newjj 
	Exceptionjj #
(jj# $4
(GetFullErrorTextAndRollbackEntityChangesjj$ L
(jjL M
	exceptionjjM V
)jjV W
,jjW X
	exceptionjjY b
)jjb c
;jjc d
}kk 
}ll 	
publicrr 
virtualrr 
voidrr 
Insertrr "
(rr" #
IEnumerablerr# .
<rr. /
TEntityrr/ 6
>rr6 7
entitiesrr8 @
)rr@ A
{ss 	
iftt 
(tt 
entitiestt 
==tt 
nulltt  
)tt  !
throwuu 
newuu !
ArgumentNullExceptionuu /
(uu/ 0
nameofuu0 6
(uu6 7
entitiesuu7 ?
)uu? @
)uu@ A
;uuA B
tryww 
{xx 
Entitiesyy 
.yy 
AddRangeyy !
(yy! "
entitiesyy" *
)yy* +
;yy+ ,
_contextzz 
.zz 
SaveChangeszz $
(zz$ %
)zz% &
;zz& '
}{{ 
catch|| 
(|| 
DbUpdateException|| $
	exception||% .
)||. /
{}} 
throw 
new 
	Exception #
(# $4
(GetFullErrorTextAndRollbackEntityChanges$ L
(L M
	exceptionM V
)V W
,W X
	exceptionY b
)b c
;c d
}
ÄÄ 
}
ÅÅ 	
public
áá 
virtual
áá 
void
áá 
Update
áá "
(
áá" #
TEntity
áá# *
entity
áá+ 1
)
áá1 2
{
àà 	
if
ââ 
(
ââ 
entity
ââ 
==
ââ 
null
ââ 
)
ââ 
throw
ää 
new
ää #
ArgumentNullException
ää /
(
ää/ 0
nameof
ää0 6
(
ää6 7
entity
ää7 =
)
ää= >
)
ää> ?
;
ää? @
try
åå 
{
çç 
Entities
éé 
.
éé 
Update
éé 
(
éé  
entity
éé  &
)
éé& '
;
éé' (
_context
èè 
.
èè 
SaveChanges
èè $
(
èè$ %
)
èè% &
;
èè& '
}
êê 
catch
ëë 
(
ëë 
DbUpdateException
ëë $
	exception
ëë% .
)
ëë. /
{
íí 
throw
îî 
new
îî 
	Exception
îî #
(
îî# $6
(GetFullErrorTextAndRollbackEntityChanges
îî$ L
(
îîL M
	exception
îîM V
)
îîV W
,
îîW X
	exception
îîY b
)
îîb c
;
îîc d
}
ïï 
}
ññ 	
public
úú 
virtual
úú 
void
úú 
Update
úú "
(
úú" #
IEnumerable
úú# .
<
úú. /
TEntity
úú/ 6
>
úú6 7
entities
úú8 @
)
úú@ A
{
ùù 	
if
ûû 
(
ûû 
entities
ûû 
==
ûû 
null
ûû  
)
ûû  !
throw
üü 
new
üü #
ArgumentNullException
üü /
(
üü/ 0
nameof
üü0 6
(
üü6 7
entities
üü7 ?
)
üü? @
)
üü@ A
;
üüA B
try
°° 
{
¢¢ 
Entities
££ 
.
££ 
UpdateRange
££ $
(
££$ %
entities
££% -
)
££- .
;
££. /
_context
§§ 
.
§§ 
SaveChanges
§§ $
(
§§$ %
)
§§% &
;
§§& '
}
•• 
catch
¶¶ 
(
¶¶ 
DbUpdateException
¶¶ $
	exception
¶¶% .
)
¶¶. /
{
ßß 
throw
©© 
new
©© 
	Exception
©© #
(
©©# $6
(GetFullErrorTextAndRollbackEntityChanges
©©$ L
(
©©L M
	exception
©©M V
)
©©V W
,
©©W X
	exception
©©Y b
)
©©b c
;
©©c d
}
™™ 
}
´´ 	
public
±± 
virtual
±± 
void
±± 
Delete
±± "
(
±±" #
TEntity
±±# *
entity
±±+ 1
)
±±1 2
{
≤≤ 	
if
≥≥ 
(
≥≥ 
entity
≥≥ 
==
≥≥ 
null
≥≥ 
)
≥≥ 
throw
¥¥ 
new
¥¥ #
ArgumentNullException
¥¥ /
(
¥¥/ 0
nameof
¥¥0 6
(
¥¥6 7
entity
¥¥7 =
)
¥¥= >
)
¥¥> ?
;
¥¥? @
try
∂∂ 
{
∑∑ 
Entities
∏∏ 
.
∏∏ 
Remove
∏∏ 
(
∏∏  
entity
∏∏  &
)
∏∏& '
;
∏∏' (
_context
ππ 
.
ππ 
SaveChanges
ππ $
(
ππ$ %
)
ππ% &
;
ππ& '
}
∫∫ 
catch
ªª 
(
ªª 
DbUpdateException
ªª $
	exception
ªª% .
)
ªª. /
{
ºº 
throw
ææ 
new
ææ 
	Exception
ææ #
(
ææ# $6
(GetFullErrorTextAndRollbackEntityChanges
ææ$ L
(
ææL M
	exception
ææM V
)
ææV W
,
ææW X
	exception
ææY b
)
ææb c
;
ææc d
}
øø 
}
¿¿ 	
public
∆∆ 
virtual
∆∆ 
void
∆∆ 
Delete
∆∆ "
(
∆∆" #
IEnumerable
∆∆# .
<
∆∆. /
TEntity
∆∆/ 6
>
∆∆6 7
entities
∆∆8 @
)
∆∆@ A
{
«« 	
if
»» 
(
»» 
entities
»» 
==
»» 
null
»»  
)
»»  !
throw
…… 
new
…… #
ArgumentNullException
…… /
(
……/ 0
nameof
……0 6
(
……6 7
entities
……7 ?
)
……? @
)
……@ A
;
……A B
try
ÀÀ 
{
ÃÃ 
Entities
ÕÕ 
.
ÕÕ 
RemoveRange
ÕÕ $
(
ÕÕ$ %
entities
ÕÕ% -
)
ÕÕ- .
;
ÕÕ. /
_context
ŒŒ 
.
ŒŒ 
SaveChanges
ŒŒ $
(
ŒŒ$ %
)
ŒŒ% &
;
ŒŒ& '
}
œœ 
catch
–– 
(
–– 
DbUpdateException
–– $
	exception
––% .
)
––. /
{
—— 
throw
”” 
new
”” 
	Exception
”” #
(
””# $6
(GetFullErrorTextAndRollbackEntityChanges
””$ L
(
””L M
	exception
””M V
)
””V W
,
””W X
	exception
””Y b
)
””b c
;
””c d
}
‘‘ 
}
’’ 	
public
◊◊ 
TEntity
◊◊ 

GetByWhere
◊◊ !
(
◊◊! "

Expression
◊◊" ,
<
◊◊, -
Func
◊◊- 1
<
◊◊1 2
TEntity
◊◊2 9
,
◊◊9 :
bool
◊◊; ?
>
◊◊? @
>
◊◊@ A
where
◊◊B G
)
◊◊G H
{
ÿÿ 	
return
ŸŸ 
Entities
ŸŸ 
.
ŸŸ 
FirstOrDefault
ŸŸ *
(
ŸŸ* +
where
ŸŸ+ 0
)
ŸŸ0 1
;
ŸŸ1 2
}
⁄⁄ 	
public
‹‹ 
List
‹‹ 
<
‹‹ 
TEntity
‹‹ 
>
‹‹ 
GetListByWhere
‹‹ ,
(
‹‹, -

Expression
‹‹- 7
<
‹‹7 8
Func
‹‹8 <
<
‹‹< =
TEntity
‹‹= D
,
‹‹D E
bool
‹‹F J
>
‹‹J K
>
‹‹K L
where
‹‹M R
)
‹‹R S
{
›› 	
return
ﬁﬁ 
Entities
ﬁﬁ 
.
ﬁﬁ 
Where
ﬁﬁ !
(
ﬁﬁ! "
where
ﬁﬁ" '
)
ﬁﬁ' (
.
ﬁﬁ( )
ToList
ﬁﬁ) /
(
ﬁﬁ/ 0
)
ﬁﬁ0 1
;
ﬁﬁ1 2
}
ﬂﬂ 	
public
ËË 
virtual
ËË 

IQueryable
ËË !
<
ËË! "
TEntity
ËË" )
>
ËË) *
Table
ËË+ 0
=>
ËË1 3
Entities
ËË4 <
;
ËË< =
public
ÌÌ 
virtual
ÌÌ 

IQueryable
ÌÌ !
<
ÌÌ! "
TEntity
ÌÌ" )
>
ÌÌ) *
TableNoTracking
ÌÌ+ :
=>
ÌÌ; =
Entities
ÌÌ> F
.
ÌÌF G
AsNoTracking
ÌÌG S
(
ÌÌS T
)
ÌÌT U
;
ÌÌU V
	protected
ÚÚ 
virtual
ÚÚ 
DbSet
ÚÚ 
<
ÚÚ  
TEntity
ÚÚ  '
>
ÚÚ' (
Entities
ÚÚ) 1
{
ÛÛ 	
get
ÙÙ 
{
ıı 
if
ˆˆ 
(
ˆˆ 
	_entities
ˆˆ 
==
ˆˆ  
null
ˆˆ! %
)
ˆˆ% &
	_entities
˜˜ 
=
˜˜ 
_context
˜˜  (
.
˜˜( )
Set
˜˜) ,
<
˜˜, -
TEntity
˜˜- 4
>
˜˜4 5
(
˜˜5 6
)
˜˜6 7
;
˜˜7 8
return
˘˘ 
	_entities
˘˘  
;
˘˘  !
}
˙˙ 
}
˚˚ 	
}
˛˛ 
}ˇˇ ë√
|C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Extensions\DbContextExtensions.cs
	namespace 	
Nop
 
. 
Data 
. 

Extensions 
{ 
public 

static 
class 
DbContextExtensions +
{ 
private 
static 
string 
databaseName *
;* +
private 
static 
readonly  
ConcurrentDictionary  4
<4 5
string5 ;
,; <
string= C
>C D

tableNamesE O
=P Q
newR U 
ConcurrentDictionaryV j
<j k
stringk q
,q r
strings y
>y z
(z {
){ |
;| }
private 
static 
readonly  
ConcurrentDictionary  4
<4 5
string5 ;
,; <
IEnumerable= H
<H I
(I J
stringJ P
,P Q
intR U
?U V
)V W
>W X
>X Y
columnsMaxLengthZ j
=k l
newm p!
ConcurrentDictionary	q Ö
<
Ö Ü
string
Ü å
,
å ç
IEnumerable
é ô
<
ô ö
(
ö õ
string
õ °
,
° ¢
int
£ ¶
?
¶ ß
)
ß ®
>
® ©
>
© ™
(
™ ´
)
´ ¨
;
¨ ≠
private 
static 
readonly  
ConcurrentDictionary  4
<4 5
string5 ;
,; <
IEnumerable= H
<H I
(I J
stringJ P
,P Q
decimalR Y
?Y Z
)Z [
>[ \
>\ ]"
decimalColumnsMaxValue^ t
=u v
neww z!
ConcurrentDictionary	{ è
<
è ê
string
ê ñ
,
ñ ó
IEnumerable
ò £
<
£ §
(
§ •
string
• ´
,
´ ¨
decimal
≠ ¥
?
¥ µ
)
µ ∂
>
∂ ∑
>
∑ ∏
(
∏ π
)
π ∫
;
∫ ª
private'' 
static'' 
TEntity'' 
LoadEntityCopy'' -
<''- .
TEntity''. 5
>''5 6
(''6 7

IDbContext''7 A
context''B I
,''I J
TEntity''K R
entity''S Y
,''Y Z
Func''[ _
<''_ `
EntityEntry''` k
<''k l
TEntity''l s
>''s t
,''t u
PropertyValues	''v Ñ
>
''Ñ Ö
getValuesFunction
''Ü ó
)
''ó ò
where(( 
TEntity(( 
:(( 

BaseEntity(( &
{)) 	
if** 
(** 
context** 
==** 
null** 
)**  
throw++ 
new++ !
ArgumentNullException++ /
(++/ 0
nameof++0 6
(++6 7
context++7 >
)++> ?
)++? @
;++@ A
if.. 
(.. 
!.. 
(.. 
context.. 
is.. 
	DbContext.. &
	dbContext..' 0
)..0 1
)..1 2
throw// 
new// %
InvalidOperationException// 3
(//3 4
$str//4 X
)//X Y
;//Y Z
var22 
entityEntry22 
=22 
	dbContext22 '
.22' (
ChangeTracker22( 5
.225 6
Entries226 =
<22= >
TEntity22> E
>22E F
(22F G
)22G H
.22H I
FirstOrDefault22I W
(22W X
entry22X ]
=>22^ `
entry22a f
.22f g
Entity22g m
==22n p
entity22q w
)22w x
;22x y
if33 
(33 
entityEntry33 
==33 
null33 #
)33# $
return44 
null44 
;44 
var77 

entityCopy77 
=77 
getValuesFunction77 .
(77. /
entityEntry77/ :
)77: ;
?77; <
.77< =
ToObject77= E
(77E F
)77F G
as77H J
TEntity77K R
;77R S
return99 

entityCopy99 
;99 
}:: 	
privateAA 
staticAA 
IListAA 
<AA 
stringAA #
>AA# $!
GetCommandsFromScriptAA% :
(AA: ;
stringAA; A
sqlAAB E
)AAE F
{BB 	
varCC 
commandsCC 
=CC 
newCC 
ListCC #
<CC# $
stringCC$ *
>CC* +
(CC+ ,
)CC, -
;CC- .
sqlFF 
=FF 
RegexFF 
.FF 
ReplaceFF 
(FF  
sqlFF  #
,FF# $
$strFF% /
,FF/ 0
stringFF1 7
.FF7 8
EmptyFF8 =
)FF= >
;FF> ?
varGG 
batchesGG 
=GG 
RegexGG 
.GG  
SplitGG  %
(GG% &
sqlGG& )
,GG) *
$strGG+ N
,GGN O
RegexOptionsGGP \
.GG\ ]

IgnoreCaseGG] g
|GGh i
RegexOptionsGGj v
.GGv w
	Multiline	GGw Ä
)
GGÄ Å
;
GGÅ Ç
forII 
(II 
varII 
iII 
=II 
$numII 
;II 
iII 
<II 
batchesII  '
.II' (
LengthII( .
;II. /
iII0 1
++II1 3
)II3 4
{JJ 
ifKK 
(KK 
stringKK 
.KK 
IsNullOrWhiteSpaceKK -
(KK- .
batchesKK. 5
[KK5 6
iKK6 7
]KK7 8
)KK8 9
||KK: <
batchesKK= D
[KKD E
iKKE F
]KKF G
.KKG H

StartsWithKKH R
(KKR S
$strKKS W
,KKW X
StringComparisonKKY i
.KKi j
OrdinalIgnoreCaseKKj {
)KK{ |
)KK| }
continueLL 
;LL 
varNN 
countNN 
=NN 
$numNN 
;NN 
ifOO 
(OO 
iOO 
!=OO 
batchesOO  
.OO  !
LengthOO! '
-OO( )
$numOO* +
&&OO, .
batchesOO/ 6
[OO6 7
iOO7 8
+OO9 :
$numOO; <
]OO< =
.OO= >

StartsWithOO> H
(OOH I
$strOOI M
,OOM N
StringComparisonOOO _
.OO_ `
OrdinalIgnoreCaseOO` q
)OOq r
)OOr s
{PP 
varQQ 
matchQQ 
=QQ 
RegexQQ  %
.QQ% &
MatchQQ& +
(QQ+ ,
batchesQQ, 3
[QQ3 4
iQQ4 5
+QQ6 7
$numQQ8 9
]QQ9 :
,QQ: ;
$strQQ< F
)QQF G
;QQG H
ifRR 
(RR 
matchRR 
.RR 
SuccessRR %
)RR% &
countSS 
=SS 
intSS  #
.SS# $
ParseSS$ )
(SS) *
matchSS* /
.SS/ 0
ValueSS0 5
)SS5 6
;SS6 7
}TT 
varVV 
builderVV 
=VV 
newVV !
StringBuilderVV" /
(VV/ 0
)VV0 1
;VV1 2
forWW 
(WW 
varWW 
jWW 
=WW 
$numWW 
;WW 
jWW  !
<WW" #
countWW$ )
;WW) *
jWW+ ,
++WW, .
)WW. /
{XX 
builderYY 
.YY 
AppendYY "
(YY" #
batchesYY# *
[YY* +
iYY+ ,
]YY, -
)YY- .
;YY. /
ifZZ 
(ZZ 
iZZ 
==ZZ 
batchesZZ $
.ZZ$ %
LengthZZ% +
-ZZ, -
$numZZ. /
)ZZ/ 0
builder[[ 
.[[  

AppendLine[[  *
([[* +
)[[+ ,
;[[, -
}\\ 
commands^^ 
.^^ 
Add^^ 
(^^ 
builder^^ $
.^^$ %
ToString^^% -
(^^- .
)^^. /
)^^/ 0
;^^0 1
}__ 
returnaa 
commandsaa 
;aa 
}bb 	
publicoo 
staticoo 
TEntityoo 
LoadOriginalCopyoo .
<oo. /
TEntityoo/ 6
>oo6 7
(oo7 8
thisoo8 <

IDbContextoo= G
contextooH O
,ooO P
TEntityooQ X
entityooY _
)oo_ `
whereooa f
TEntityoog n
:ooo p

BaseEntityooq {
{pp 	
returnqq 
LoadEntityCopyqq !
(qq! "
contextqq" )
,qq) *
entityqq+ 1
,qq1 2
entityEntryqq3 >
=>qq? A
entityEntryqqB M
.qqM N
OriginalValuesqqN \
)qq\ ]
;qq] ^
}rr 	
public{{ 
static{{ 
TEntity{{ 
LoadDatabaseCopy{{ .
<{{. /
TEntity{{/ 6
>{{6 7
({{7 8
this{{8 <

IDbContext{{= G
context{{H O
,{{O P
TEntity{{Q X
entity{{Y _
){{_ `
where{{a f
TEntity{{g n
:{{o p

BaseEntity{{q {
{|| 	
return}} 
LoadEntityCopy}} !
(}}! "
context}}" )
,}}) *
entity}}+ 1
,}}1 2
entityEntry}}3 >
=>}}? A
entityEntry}}B M
.}}M N
GetDatabaseValues}}N _
(}}_ `
)}}` a
)}}a b
;}}b c
}~~ 	
public
ÖÖ 
static
ÖÖ 
void
ÖÖ 
DropPluginTable
ÖÖ *
(
ÖÖ* +
this
ÖÖ+ /

IDbContext
ÖÖ0 :
context
ÖÖ; B
,
ÖÖB C
string
ÖÖD J
	tableName
ÖÖK T
)
ÖÖT U
{
ÜÜ 	
if
áá 
(
áá 
context
áá 
==
áá 
null
áá 
)
áá  
throw
àà 
new
àà #
ArgumentNullException
àà /
(
àà/ 0
nameof
àà0 6
(
àà6 7
context
àà7 >
)
àà> ?
)
àà? @
;
àà@ A
if
ää 
(
ää 
string
ää 
.
ää 
IsNullOrEmpty
ää $
(
ää$ %
	tableName
ää% .
)
ää. /
)
ää/ 0
throw
ãã 
new
ãã #
ArgumentNullException
ãã /
(
ãã/ 0
nameof
ãã0 6
(
ãã6 7
	tableName
ãã7 @
)
ãã@ A
)
ããA B
;
ããB C
var
éé 
dbScript
éé 
=
éé 
$"
éé 
$str
éé +
{
éé+ ,
	tableName
éé, 5
}
éé5 6
$str
éé6 V
{
ééV W
	tableName
ééW `
}
éé` a
$str
ééa b
"
ééb c
;
ééc d
context
èè 
.
èè 
ExecuteSqlCommand
èè %
(
èè% &
dbScript
èè& .
)
èè. /
;
èè/ 0
context
êê 
.
êê 
SaveChanges
êê 
(
êê  
)
êê  !
;
êê! "
}
ëë 	
public
ôô 
static
ôô 
string
ôô 
GetTableName
ôô )
<
ôô) *
TEntity
ôô* 1
>
ôô1 2
(
ôô2 3
this
ôô3 7

IDbContext
ôô8 B
context
ôôC J
)
ôôJ K
where
ôôL Q
TEntity
ôôR Y
:
ôôZ [

BaseEntity
ôô\ f
{
öö 	
if
õõ 
(
õõ 
context
õõ 
==
õõ 
null
õõ 
)
õõ  
throw
úú 
new
úú #
ArgumentNullException
úú /
(
úú/ 0
nameof
úú0 6
(
úú6 7
context
úú7 >
)
úú> ?
)
úú? @
;
úú@ A
if
üü 
(
üü 
!
üü 
(
üü 
context
üü 
is
üü 
	DbContext
üü &
	dbContext
üü' 0
)
üü0 1
)
üü1 2
throw
†† 
new
†† '
InvalidOperationException
†† 3
(
††3 4
$str
††4 X
)
††X Y
;
††Y Z
var
¢¢  
entityTypeFullName
¢¢ "
=
¢¢# $
typeof
¢¢% +
(
¢¢+ ,
TEntity
¢¢, 3
)
¢¢3 4
.
¢¢4 5
FullName
¢¢5 =
;
¢¢= >
if
££ 
(
££ 
!
££ 

tableNames
££ 
.
££ 
ContainsKey
££ '
(
££' ( 
entityTypeFullName
££( :
)
££: ;
)
££; <
{
§§ 
var
¶¶ 

entityType
¶¶ 
=
¶¶  
	dbContext
¶¶! *
.
¶¶* +
Model
¶¶+ 0
.
¶¶0 1#
FindRuntimeEntityType
¶¶1 F
(
¶¶F G
typeof
¶¶G M
(
¶¶M N
TEntity
¶¶N U
)
¶¶U V
)
¶¶V W
;
¶¶W X

tableNames
©© 
.
©© 
TryAdd
©© !
(
©©! " 
entityTypeFullName
©©" 4
,
©©4 5

entityType
©©6 @
.
©©@ A

Relational
©©A K
(
©©K L
)
©©L M
.
©©M N
	TableName
©©N W
)
©©W X
;
©©X Y
}
™™ 

tableNames
¨¨ 
.
¨¨ 
TryGetValue
¨¨ "
(
¨¨" # 
entityTypeFullName
¨¨# 5
,
¨¨5 6
out
¨¨7 :
var
¨¨; >
	tableName
¨¨? H
)
¨¨H I
;
¨¨I J
return
ÆÆ 
	tableName
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
∑∑ 
static
∑∑ 
IEnumerable
∑∑ !
<
∑∑! "
(
∑∑" #
string
∑∑# )
Name
∑∑* .
,
∑∑. /
int
∑∑0 3
?
∑∑3 4
	MaxLength
∑∑5 >
)
∑∑> ?
>
∑∑? @!
GetColumnsMaxLength
∑∑A T
<
∑∑T U
TEntity
∑∑U \
>
∑∑\ ]
(
∑∑] ^
this
∑∑^ b

IDbContext
∑∑c m
context
∑∑n u
)
∑∑u v
where
∑∑w |
TEntity∑∑} Ñ
:∑∑Ö Ü

BaseEntity∑∑á ë
{
∏∏ 	
if
ππ 
(
ππ 
context
ππ 
==
ππ 
null
ππ 
)
ππ  
throw
∫∫ 
new
∫∫ #
ArgumentNullException
∫∫ /
(
∫∫/ 0
nameof
∫∫0 6
(
∫∫6 7
context
∫∫7 >
)
∫∫> ?
)
∫∫? @
;
∫∫@ A
if
ΩΩ 
(
ΩΩ 
!
ΩΩ 
(
ΩΩ 
context
ΩΩ 
is
ΩΩ 
	DbContext
ΩΩ &
	dbContext
ΩΩ' 0
)
ΩΩ0 1
)
ΩΩ1 2
throw
ææ 
new
ææ '
InvalidOperationException
ææ 3
(
ææ3 4
$str
ææ4 X
)
ææX Y
;
ææY Z
var
¿¿  
entityTypeFullName
¿¿ "
=
¿¿# $
typeof
¿¿% +
(
¿¿+ ,
TEntity
¿¿, 3
)
¿¿3 4
.
¿¿4 5
FullName
¿¿5 =
;
¿¿= >
if
¡¡ 
(
¡¡ 
!
¡¡ 
columnsMaxLength
¡¡ !
.
¡¡! "
ContainsKey
¡¡" -
(
¡¡- . 
entityTypeFullName
¡¡. @
)
¡¡@ A
)
¡¡A B
{
¬¬ 
var
ƒƒ 

entityType
ƒƒ 
=
ƒƒ  
	dbContext
ƒƒ! *
.
ƒƒ* +
Model
ƒƒ+ 0
.
ƒƒ0 1
FindEntityType
ƒƒ1 ?
(
ƒƒ? @
typeof
ƒƒ@ F
(
ƒƒF G
TEntity
ƒƒG N
)
ƒƒN O
)
ƒƒO P
;
ƒƒP Q
columnsMaxLength
««  
.
««  !
TryAdd
««! '
(
««' ( 
entityTypeFullName
««( :
,
««: ;

entityType
»» 
.
»» 
GetProperties
»» ,
(
»», -
)
»»- .
.
»». /
Select
»»/ 5
(
»»5 6
property
»»6 >
=>
»»? A
(
»»B C
property
»»C K
.
»»K L
Name
»»L P
,
»»P Q
property
»»R Z
.
»»Z [
GetMaxLength
»»[ g
(
»»g h
)
»»h i
)
»»i j
)
»»j k
)
»»k l
;
»»l m
}
…… 
columnsMaxLength
ÀÀ 
.
ÀÀ 
TryGetValue
ÀÀ (
(
ÀÀ( ) 
entityTypeFullName
ÀÀ) ;
,
ÀÀ; <
out
ÀÀ= @
var
ÀÀA D
result
ÀÀE K
)
ÀÀK L
;
ÀÀL M
return
ÕÕ 
result
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
public
÷÷ 
static
÷÷ 
IEnumerable
÷÷ !
<
÷÷! "
(
÷÷" #
string
÷÷# )
Name
÷÷* .
,
÷÷. /
decimal
÷÷0 7
?
÷÷7 8
MaxValue
÷÷9 A
)
÷÷A B
>
÷÷B C'
GetDecimalColumnsMaxValue
÷÷D ]
<
÷÷] ^
TEntity
÷÷^ e
>
÷÷e f
(
÷÷f g
this
÷÷g k

IDbContext
÷÷l v
context
÷÷w ~
)
÷÷~ 
where
◊◊ 
TEntity
◊◊ 
:
◊◊ 

BaseEntity
◊◊ &
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ 
context
ŸŸ 
==
ŸŸ 
null
ŸŸ 
)
ŸŸ  
throw
⁄⁄ 
new
⁄⁄ #
ArgumentNullException
⁄⁄ /
(
⁄⁄/ 0
nameof
⁄⁄0 6
(
⁄⁄6 7
context
⁄⁄7 >
)
⁄⁄> ?
)
⁄⁄? @
;
⁄⁄@ A
if
›› 
(
›› 
!
›› 
(
›› 
context
›› 
is
›› 
	DbContext
›› &
	dbContext
››' 0
)
››0 1
)
››1 2
throw
ﬁﬁ 
new
ﬁﬁ '
InvalidOperationException
ﬁﬁ 3
(
ﬁﬁ3 4
$str
ﬁﬁ4 X
)
ﬁﬁX Y
;
ﬁﬁY Z
var
‡‡  
entityTypeFullName
‡‡ "
=
‡‡# $
typeof
‡‡% +
(
‡‡+ ,
TEntity
‡‡, 3
)
‡‡3 4
.
‡‡4 5
FullName
‡‡5 =
;
‡‡= >
if
·· 
(
·· 
!
·· $
decimalColumnsMaxValue
·· '
.
··' (
ContainsKey
··( 3
(
··3 4 
entityTypeFullName
··4 F
)
··F G
)
··G H
{
‚‚ 
var
‰‰ 

entityType
‰‰ 
=
‰‰  
	dbContext
‰‰! *
.
‰‰* +
Model
‰‰+ 0
.
‰‰0 1
FindEntityType
‰‰1 ?
(
‰‰? @
typeof
‰‰@ F
(
‰‰F G
TEntity
‰‰G N
)
‰‰N O
)
‰‰O P
;
‰‰P Q
var
ÁÁ 

properties
ÁÁ 
=
ÁÁ  

entityType
ÁÁ! +
.
ÁÁ+ ,
GetProperties
ÁÁ, 9
(
ÁÁ9 :
)
ÁÁ: ;
.
ÁÁ; <
Where
ÁÁ< A
(
ÁÁA B
property
ÁÁB J
=>
ÁÁK M
property
ÁÁN V
.
ÁÁV W
ClrType
ÁÁW ^
==
ÁÁ_ a
typeof
ÁÁb h
(
ÁÁh i
decimal
ÁÁi p
)
ÁÁp q
)
ÁÁq r
;
ÁÁr s$
decimalColumnsMaxValue
ÍÍ &
.
ÍÍ& '
TryAdd
ÍÍ' -
(
ÍÍ- . 
entityTypeFullName
ÍÍ. @
,
ÍÍ@ A

properties
ÍÍB L
.
ÍÍL M
Select
ÍÍM S
(
ÍÍS T
property
ÍÍT \
=>
ÍÍ] _
{
ÎÎ 
var
ÏÏ 
mapping
ÏÏ 
=
ÏÏ  !
new
ÏÏ" %'
RelationalTypeMappingInfo
ÏÏ& ?
(
ÏÏ? @
property
ÏÏ@ H
)
ÏÏH I
;
ÏÏI J
if
ÌÌ 
(
ÌÌ 
!
ÌÌ 
mapping
ÌÌ  
.
ÌÌ  !
	Precision
ÌÌ! *
.
ÌÌ* +
HasValue
ÌÌ+ 3
||
ÌÌ4 6
!
ÌÌ7 8
mapping
ÌÌ8 ?
.
ÌÌ? @
Scale
ÌÌ@ E
.
ÌÌE F
HasValue
ÌÌF N
)
ÌÌN O
return
ÓÓ 
(
ÓÓ  
property
ÓÓ  (
.
ÓÓ( )
Name
ÓÓ) -
,
ÓÓ- .
null
ÓÓ/ 3
)
ÓÓ3 4
;
ÓÓ4 5
return
 
(
 
property
 $
.
$ %
Name
% )
,
) *
new
+ .
decimal
/ 6
?
6 7
(
7 8
(
8 9
decimal
9 @
)
@ A
Math
B F
.
F G
Pow
G J
(
J K
$num
K M
,
M N
mapping
O V
.
V W
	Precision
W `
.
` a
Value
a f
-
g h
mapping
i p
.
p q
Scale
q v
.
v w
Value
w |
)
| }
)
} ~
)
~ 
; Ä
}
ÒÒ 
)
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÚÚ $
decimalColumnsMaxValue
ÙÙ "
.
ÙÙ" #
TryGetValue
ÙÙ# .
(
ÙÙ. / 
entityTypeFullName
ÙÙ/ A
,
ÙÙA B
out
ÙÙC F
var
ÙÙG J
result
ÙÙK Q
)
ÙÙQ R
;
ÙÙR S
return
ˆˆ 
result
ˆˆ 
;
ˆˆ 
}
˜˜ 	
public
˛˛ 
static
˛˛ 
string
˛˛ 
DbName
˛˛ #
(
˛˛# $
this
˛˛$ (

IDbContext
˛˛) 3
context
˛˛4 ;
)
˛˛; <
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ 
context
ÄÄ 
==
ÄÄ 
null
ÄÄ 
)
ÄÄ  
throw
ÅÅ 
new
ÅÅ #
ArgumentNullException
ÅÅ /
(
ÅÅ/ 0
nameof
ÅÅ0 6
(
ÅÅ6 7
context
ÅÅ7 >
)
ÅÅ> ?
)
ÅÅ? @
;
ÅÅ@ A
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
(
ÑÑ 
context
ÑÑ 
is
ÑÑ 
	DbContext
ÑÑ &
	dbContext
ÑÑ' 0
)
ÑÑ0 1
)
ÑÑ1 2
throw
ÖÖ 
new
ÖÖ '
InvalidOperationException
ÖÖ 3
(
ÖÖ3 4
$str
ÖÖ4 X
)
ÖÖX Y
;
ÖÖY Z
if
áá 
(
áá 
!
áá 
string
áá 
.
áá 
IsNullOrEmpty
áá %
(
áá% &
databaseName
áá& 2
)
áá2 3
)
áá3 4
return
àà 
databaseName
àà #
;
àà# $
var
ãã 
dbConnection
ãã 
=
ãã 
	dbContext
ãã (
.
ãã( )
Database
ãã) 1
.
ãã1 2
GetDbConnection
ãã2 A
(
ããA B
)
ããB C
;
ããC D
databaseName
éé 
=
éé 
dbConnection
éé '
.
éé' (
Database
éé( 0
;
éé0 1
return
êê 
databaseName
êê 
;
êê  
}
ëë 	
public
òò 
static
òò 
void
òò 
ExecuteSqlScript
òò +
(
òò+ ,
this
òò, 0

IDbContext
òò1 ;
context
òò< C
,
òòC D
string
òòE K
sql
òòL O
)
òòO P
{
ôô 	
if
öö 
(
öö 
context
öö 
==
öö 
null
öö 
)
öö  
throw
õõ 
new
õõ #
ArgumentNullException
õõ /
(
õõ/ 0
nameof
õõ0 6
(
õõ6 7
context
õõ7 >
)
õõ> ?
)
õõ? @
;
õõ@ A
var
ùù 
sqlCommands
ùù 
=
ùù #
GetCommandsFromScript
ùù 3
(
ùù3 4
sql
ùù4 7
)
ùù7 8
;
ùù8 9
foreach
ûû 
(
ûû 
var
ûû 
command
ûû  
in
ûû! #
sqlCommands
ûû$ /
)
ûû/ 0
context
üü 
.
üü 
ExecuteSqlCommand
üü )
(
üü) *
command
üü* 1
)
üü1 2
;
üü2 3
}
†† 	
public
ßß 
static
ßß 
void
ßß &
ExecuteSqlScriptFromFile
ßß 3
(
ßß3 4
this
ßß4 8

IDbContext
ßß9 C
context
ßßD K
,
ßßK L
string
ßßM S
filePath
ßßT \
)
ßß\ ]
{
®® 	
if
©© 
(
©© 
context
©© 
==
©© 
null
©© 
)
©©  
throw
™™ 
new
™™ #
ArgumentNullException
™™ /
(
™™/ 0
nameof
™™0 6
(
™™6 7
context
™™7 >
)
™™> ?
)
™™? @
;
™™@ A
if
¨¨ 
(
¨¨ 
!
¨¨ 
File
¨¨ 
.
¨¨ 
Exists
¨¨ 
(
¨¨ 
filePath
¨¨ %
)
¨¨% &
)
¨¨& '
return
≠≠ 
;
≠≠ 
context
ØØ 
.
ØØ 
ExecuteSqlScript
ØØ $
(
ØØ$ %
File
ØØ% )
.
ØØ) *
ReadAllText
ØØ* 5
(
ØØ5 6
filePath
ØØ6 >
)
ØØ> ?
)
ØØ? @
;
ØØ@ A
}
∞∞ 	
}
≥≥ 
}¥¥ Ù
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Extensions\EntityExtensions.cs
	namespace 	
Nop
 
. 
Data 
. 

Extensions 
{ 
public

 

static

 
class

 
EntityExtensions

 (
{ 
private 
static 
bool 
IsProxy #
(# $
this$ (

BaseEntity) 3
entity4 :
): ;
{ 	
if 
( 
entity 
== 
null 
) 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
entity7 =
)= >
)> ?
;? @
var 
type 
= 
entity 
. 
GetType %
(% &
)& '
;' (
return 
type 
. 
BaseType  
!=! #
null$ (
&&) +
type, 0
.0 1
BaseType1 9
.9 :
BaseType: B
!=C E
nullF J
&&K M
typeN R
.R S
BaseTypeS [
.[ \
BaseType\ d
==e g
typeofh n
(n o

BaseEntityo y
)y z
;z {
} 	
public(( 
static(( 
Type(( "
GetUnproxiedEntityType(( 1
(((1 2
this((2 6

BaseEntity((7 A
entity((B H
)((H I
{)) 	
if** 
(** 
entity** 
==** 
null** 
)** 
throw++ 
new++ !
ArgumentNullException++ /
(++/ 0
nameof++0 6
(++6 7
entity++7 =
)++= >
)++> ?
;++? @
Type-- 
type-- 
=-- 
null-- 
;-- 
if// 
(// 
entity// 
is// 
IEntityForCaching// +
)//+ ,
type00 
=00 
(00 
(00 
IEntityForCaching00 *
)00* +
entity00+ 1
)001 2
.002 3
GetType003 :
(00: ;
)00; <
.00< =
BaseType00= E
;00E F
else22 
if22 
(22 
entity22 
.22 
IsProxy22 #
(22# $
)22$ %
)22% &
type33 
=33 
entity33 
.33 
GetType33 %
(33% &
)33& '
.33' (
BaseType33( 0
;330 1
else55 
type66 
=66 
entity66 
.66 
GetType66 %
(66% &
)66& '
;66' (
if88 
(88 
type88 
==88 
null88 
)88 
throw99 
new99 
	Exception99 #
(99# $
$str99$ K
)99K L
;99L M
return;; 
type;; 
;;; 
}<< 	
}== 
}>> ä
hC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\IDbContext.cs
	namespace 	
Nop
 
. 
Data 
{ 
public

 

partial

 
	interface

 

IDbContext

 '
{ 
DbSet 
< 
TEntity 
> 
Set 
< 
TEntity "
>" #
(# $
)$ %
where& +
TEntity, 3
:4 5

BaseEntity6 @
;@ A
int 
SaveChanges 
( 
) 
; 
string  
GenerateCreateScript #
(# $
)$ %
;% &

IQueryable(( 
<(( 
TQuery(( 
>(( 
QueryFromSql(( '
<((' (
TQuery((( .
>((. /
(((/ 0
string((0 6
sql((7 :
,((: ;
params((< B
object((C I
[((I J
]((J K

parameters((L V
)((V W
where((X ]
TQuery((^ d
:((e f
class((g l
;((l m

IQueryable11 
<11 
TEntity11 
>11 
EntityFromSql11 )
<11) *
TEntity11* 1
>111 2
(112 3
string113 9
sql11: =
,11= >
params11? E
object11F L
[11L M
]11M N

parameters11O Y
)11Y Z
where11[ `
TEntity11a h
:11i j

BaseEntity11k u
;11u v
int;; 
ExecuteSqlCommand;; 
(;; 
RawSqlString;; *
sql;;+ .
,;;. /
bool;;0 4"
doNotEnsureTransaction;;5 K
=;;L M
false;;N S
,;;S T
int;;U X
?;;X Y
timeout;;Z a
=;;b c
null;;d h
,;;h i
params;;j p
object;;q w
[;;w x
];;x y

parameters	;;z Ñ
)
;;Ñ Ö
;
;;Ö Ü
voidBB 
DetachBB 
<BB 
TEntityBB 
>BB 
(BB 
TEntityBB $
entityBB% +
)BB+ ,
whereBB- 2
TEntityBB3 :
:BB; <

BaseEntityBB= G
;BBG H
}EE 
}FF Ì
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Affiliates\AffiliateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 

Affiliates %
{ 
public

 

partial

 
class

 
AffiliateMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	Affiliate

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	Affiliate9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	Affiliate# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
	affiliate $
=>% '
	affiliate( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
HasOne 
( 
	affiliate $
=>% '
	affiliate( 1
.1 2
Address2 9
)9 :
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
	affiliate (
=>) +
	affiliate, 5
.5 6
	AddressId6 ?
)? @
. 

IsRequired 
( 
) 
. 
OnDelete 
( 
DeleteBehavior (
.( )
Restrict) 1
)1 2
;2 3
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}"" †
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Blogs\BlogCommentMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Blogs  
{ 
public

 

partial

 
class

 
BlogCommentMap

 '
:

( )&
NopEntityTypeConfiguration

* D
<

D E
BlogComment

E P
>

P Q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
BlogComment9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
BlogComment# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
comment "
=># %
comment& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
HasOne 
( 
comment "
=># %
comment& -
.- .
BlogPost. 6
)6 7
. 
WithMany 
( 
blog 
=> !
blog" &
.& '
BlogComments' 3
)3 4
. 
HasForeignKey 
( 
comment &
=>' )
comment* 1
.1 2

BlogPostId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
comment "
=># %
comment& -
.- .
Customer. 6
)6 7
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
comment &
=>' )
comment* 1
.1 2

CustomerId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder!! 
.!! 
HasOne!! 
(!! 
comment!! "
=>!!# %
comment!!& -
.!!- .
Store!!. 3
)!!3 4
."" 
WithMany"" 
("" 
)"" 
.## 
HasForeignKey## 
(## 
comment## &
=>##' )
comment##* 1
.##1 2
StoreId##2 9
)##9 :
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ∞
wC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Blogs\BlogPostMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Blogs  
{ 
public

 

partial

 
class

 
BlogPostMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
BlogPost

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
BlogPost9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
BlogPost# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
blogPost #
=>$ &
blogPost' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
blogPost %
=>& (
blogPost) 1
.1 2
Title2 7
)7 8
.8 9

IsRequired9 C
(C D
)D E
;E F
builder 
. 
Property 
( 
blogPost %
=>& (
blogPost) 1
.1 2
Body2 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
builder 
. 
Property 
( 
blogPost %
=>& (
blogPost) 1
.1 2
MetaKeywords2 >
)> ?
.? @
HasMaxLength@ L
(L M
$numM P
)P Q
;Q R
builder 
. 
Property 
( 
blogPost %
=>& (
blogPost) 1
.1 2
	MetaTitle2 ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
builder 
. 
HasOne 
( 
blogPost #
=>$ &
blogPost' /
./ 0
Language0 8
)8 9
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
blogPost '
=>( *
blogPost+ 3
.3 4

LanguageId4 >
)> ?
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ≈
àC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\BackInStockSubscriptionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 &
BackInStockSubscriptionMap

 3
:

4 5&
NopEntityTypeConfiguration

6 P
<

P Q#
BackInStockSubscription

Q h
>

h i
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9#
BackInStockSubscription9 P
>P Q
builderR Y
)Y Z
{ 	
builder 
. 
ToTable 
( 
nameof "
(" ##
BackInStockSubscription# :
): ;
); <
;< =
builder 
. 
HasKey 
( 
subscription '
=>( *
subscription+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
HasOne 
( 
subscription '
=>( *
subscription+ 7
.7 8
Product8 ?
)? @
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
subscription +
=>, .
subscription/ ;
.; <
	ProductId< E
)E F
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
subscription '
=>( *
subscription+ 7
.7 8
Customer8 @
)@ A
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
subscription +
=>, .
subscription/ ;
.; <

CustomerId< F
)F G
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& §
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\CategoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
CategoryMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Category

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Category9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Category# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
category #
=>$ &
category' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
MetaKeywords2 >
)> ?
.? @
HasMaxLength@ L
(L M
$numM P
)P Q
;Q R
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
	MetaTitle2 ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
PriceRanges2 =
)= >
.> ?
HasMaxLength? K
(K L
$numL O
)O P
;P Q
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
PageSizeOptions2 A
)A B
.B C
HasMaxLengthC O
(O P
$numP S
)S T
;T U
builder 
. 
Ignore 
( 
category #
=>$ &
category' /
./ 0
AppliedDiscounts0 @
)@ A
;A B
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ “
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\CategoryTemplateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
CategoryTemplateMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
CategoryTemplate

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
CategoryTemplate9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
CategoryTemplate# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
template #
=>$ &
template' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
ViewPath2 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} à

ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\CrossSellProductMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
CrossSellProductMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
CrossSellProduct

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
CrossSellProduct9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
CrossSellProduct# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
product "
=># %
product& -
.- .
Id. 0
)0 1
;1 2
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} «
|C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ItemPricingMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{		 
public

 

class

 
ItemPricingMap

 
:

  !&
NopEntityTypeConfiguration

" <
<

< =
ItemPricing

= H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ItemPricing9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ItemPricing# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
itemPricing &
=>' )
itemPricing* 5
.5 6
Id6 8
)8 9
;9 :
builder 
. 
HasOne 
( 
itemPricing &
=>' )
itemPricing* 5
.5 6
Company6 =
)= >
. 
WithMany 
( 
company !
=>" $
company% ,
., -
ItemsPricing- 9
)9 :
. 
HasForeignKey 
( 
itemPricing *
=>+ -
itemPricing. 9
.9 :
	CompanyId: C
)C D
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! °

ÖC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ItemCollectionProducMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{		 
public

 

class

 #
ItemCollectionProducMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F 
ItemCollectionProduc

F Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
ItemCollectionProduc9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
ItemCollectionProduc# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
(  
itemCollectionProduc /
=>0 2 
itemCollectionProduc3 G
.G H
IdH J
)J K
;K L
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} 
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ManufacturerMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ManufacturerMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
Manufacturer

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Manufacturer9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Manufacturer# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
manufacturer '
=>( *
manufacturer+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
Property 
( 
manufacturer )
=>* ,
manufacturer- 9
.9 :
Name: >
)> ?
.? @
HasMaxLength@ L
(L M
$numM P
)P Q
.Q R

IsRequiredR \
(\ ]
)] ^
;^ _
builder 
. 
Property 
( 
manufacturer )
=>* ,
manufacturer- 9
.9 :
MetaKeywords: F
)F G
.G H
HasMaxLengthH T
(T U
$numU X
)X Y
;Y Z
builder 
. 
Property 
( 
manufacturer )
=>* ,
manufacturer- 9
.9 :
	MetaTitle: C
)C D
.D E
HasMaxLengthE Q
(Q R
$numR U
)U V
;V W
builder 
. 
Property 
( 
manufacturer )
=>* ,
manufacturer- 9
.9 :
PriceRanges: E
)E F
.F G
HasMaxLengthG S
(S T
$numT W
)W X
;X Y
builder 
. 
Property 
( 
manufacturer )
=>* ,
manufacturer- 9
.9 :
PageSizeOptions: I
)I J
.J K
HasMaxLengthK W
(W X
$numX [
)[ \
;\ ]
builder 
. 
Ignore 
( 
manufacturer '
=>( *
manufacturer+ 7
.7 8
AppliedDiscounts8 H
)H I
;I J
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ Ê
ÖC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ManufacturerTemplateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 #
ManufacturerTemplateMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N 
ManufacturerTemplate

N b
>

b c
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
ManufacturerTemplate9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
ManufacturerTemplate# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
template #
=>$ &
template' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
ViewPath2 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} á
êC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\PredefinedProductAttributeValueMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 .
"PredefinedProductAttributeValueMap

 ;
:

< =&
NopEntityTypeConfiguration

> X
<

X Y+
PredefinedProductAttributeValue

Y x
>

x y
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9+
PredefinedProductAttributeValue9 X
>X Y
builderZ a
)a b
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #+
PredefinedProductAttributeValue# B
)B C
)C D
;D E
builder 
. 
HasKey 
( 
value  
=>! #
value$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
PriceAdjustment, ;
); <
.< =
HasColumnType= J
(J K
$strK [
)[ \
;\ ]
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
WeightAdjustment, <
)< =
.= >
HasColumnType> K
(K L
$strL \
)\ ]
;] ^
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Cost, 0
)0 1
.1 2
HasColumnType2 ?
(? @
$str@ P
)P Q
;Q R
builder 
. 
HasOne 
( 
value  
=>! #
value$ )
.) *
ProductAttribute* :
): ;
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
value $
=>% '
value( -
.- .
ProductAttributeId. @
)@ A
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ∏
ÇC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\PriceByQtyProductMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

  
PriceByQtyProductMap

 -
:

. /&
NopEntityTypeConfiguration

0 J
<

J K
PriceByQtyProduct

K \
>

\ ]
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
PriceByQtyProduct9 J
>J K
builderL S
)S T
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
PriceByQtyProduct# 4
)4 5
)5 6
;6 7
builder 
. 
HasOne 
( 
priceByProduct )
=>* ,
priceByProduct- ;
.; <
Product< C
)C D
. 
WithMany 
( 
product 
=> !
product" )
.) *
PriceByQtyProduct* ;
); <
. 
HasForeignKey 
( 
product #
=>$ &
product' .
.. /
	ProductId/ 8
)8 9
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! Ê
åC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductAttributeCombinationMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 *
ProductAttributeCombinationMap

 7
:

8 9&
NopEntityTypeConfiguration

: T
<

T U'
ProductAttributeCombination

U p
>

p q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9'
ProductAttributeCombination9 T
>T U
builderV ]
)] ^
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #'
ProductAttributeCombination# >
)> ?
)? @
;@ A
builder 
. 
HasKey 
( 
combination &
=>' )
combination* 5
.5 6
Id6 8
)8 9
;9 :
builder 
. 
Property 
( 
combination (
=>) +
combination, 7
.7 8
Sku8 ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
builder 
. 
Property 
( 
combination (
=>) +
combination, 7
.7 8"
ManufacturerPartNumber8 N
)N O
.O P
HasMaxLengthP \
(\ ]
$num] `
)` a
;a b
builder 
. 
Property 
( 
combination (
=>) +
combination, 7
.7 8
Gtin8 <
)< =
.= >
HasMaxLength> J
(J K
$numK N
)N O
;O P
builder 
. 
Property 
( 
combination (
=>) +
combination, 7
.7 8
OverriddenPrice8 G
)G H
.H I
HasColumnTypeI V
(V W
$strW g
)g h
;h i
builder 
. 
HasOne 
( 
combination &
=>' )
combination* 5
.5 6
Product6 =
)= >
. 
WithMany 
( 
product !
=>" $
product% ,
., -(
ProductAttributeCombinations- I
)I J
. 
HasForeignKey 
( 
combination *
=>+ -
combination. 9
.9 :
	ProductId: C
)C D
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ó
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ProductAttributeMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
ProductAttribute

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ProductAttribute9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ProductAttribute# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Name4 8
)8 9
.9 :

IsRequired: D
(D E
)E F
;F G
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ¸
àC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductAttributeMappingMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 &
ProductAttributeMappingMap

 3
:

4 5&
NopEntityTypeConfiguration

6 P
<

P Q#
ProductAttributeMapping

Q h
>

h i
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9#
ProductAttributeMapping9 P
>P Q
builderR Y
)Y Z
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /(
ProductProductAttributeTable/ K
)K L
;L M
builder 
. 
HasKey 
( #
productAttributeMapping 2
=>3 5#
productAttributeMapping6 M
.M N
IdN P
)P Q
;Q R
builder 
. 
HasOne 
( #
productAttributeMapping 2
=>3 5#
productAttributeMapping6 M
.M N
ProductN U
)U V
. 
WithMany 
( 
product !
=>" $
product% ,
., -$
ProductAttributeMappings- E
)E F
. 
HasForeignKey 
( #
productAttributeMapping 6
=>7 9#
productAttributeMapping: Q
.Q R
	ProductIdR [
)[ \
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( #
productAttributeMapping 2
=>3 5#
productAttributeMapping6 M
.M N
ProductAttributeN ^
)^ _
. 
WithMany 
( 
) 
. 
HasForeignKey 
( #
productAttributeMapping 6
=>7 9#
productAttributeMapping: Q
.Q R
ProductAttributeIdR d
)d e
. 

IsRequired 
( 
) 
; 
builder!! 
.!! 
Ignore!! 
(!! 
pam!! 
=>!! !
pam!!" %
.!!% & 
AttributeControlType!!& :
)!!: ;
;!!; <
base## 
.## 
	Configure## 
(## 
builder## "
)##" #
;### $
}$$ 	
}'' 
}(( ‹
ÜC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductAttributeValueMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 $
ProductAttributeValueMap

 1
:

2 3&
NopEntityTypeConfiguration

4 N
<

N O!
ProductAttributeValue

O d
>

d e
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9!
ProductAttributeValue9 N
>N O
builderP W
)W X
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #!
ProductAttributeValue# 8
)8 9
)9 :
;: ;
builder 
. 
HasKey 
( 
value  
=>! #
value$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
ColorSquaresRgb, ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
PriceAdjustment, ;
); <
.< =
HasColumnType= J
(J K
$strK [
)[ \
;\ ]
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
WeightAdjustment, <
)< =
.= >
HasColumnType> K
(K L
$strL \
)\ ]
;] ^
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Cost, 0
)0 1
.1 2
HasColumnType2 ?
(? @
$str@ P
)P Q
;Q R
builder 
. 
HasOne 
( 
value  
=>! #
value$ )
.) *#
ProductAttributeMapping* A
)A B
. 
WithMany 
( #
productAttributeMapping 1
=>2 4#
productAttributeMapping5 L
.L M"
ProductAttributeValuesM c
)c d
. 
HasForeignKey 
( 
value $
=>% '
value( -
.- .%
ProductAttributeMappingId. G
)G H
.   

IsRequired   
(   
)   
;   
builder"" 
."" 
Ignore"" 
("" 
value""  
=>""! #
value""$ )
."") *
AttributeValueType""* <
)""< =
;""= >
base$$ 
.$$ 
	Configure$$ 
($$ 
builder$$ "
)$$" #
;$$# $
}%% 	
}(( 
})) •
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductCategoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ProductCategoryMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I
ProductCategory

I X
>

X Y
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ProductCategory9 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. / 
ProductCategoryTable/ C
)C D
;D E
builder 
. 
HasKey 
( 
productCategory *
=>+ -
productCategory. =
.= >
Id> @
)@ A
;A B
builder 
. 
HasOne 
( 
productCategory *
=>+ -
productCategory. =
.= >
Category> F
)F G
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
productCategory .
=>/ 1
productCategory2 A
.A B

CategoryIdB L
)L M
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
productCategory *
=>+ -
productCategory. =
.= >
Product> E
)E F
. 
WithMany 
( 
product !
=>" $
product% ,
., -
ProductCategories- >
)> ?
. 
HasForeignKey 
( 
productCategory .
=>/ 1
productCategory2 A
.A B
	ProductIdB K
)K L
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& Ï
ÑC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductManufacturerMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 "
ProductManufacturerMap

 /
:

0 1&
NopEntityTypeConfiguration

2 L
<

L M
ProductManufacturer

M `
>

` a
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ProductManufacturer9 L
>L M
builderN U
)U V
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /$
ProductManufacturerTable/ G
)G H
;H I
builder 
. 
HasKey 
( 
productManufacturer .
=>/ 1
productManufacturer2 E
.E F
IdF H
)H I
;I J
builder 
. 
HasOne 
( 
productManufacturer .
=>/ 1
productManufacturer2 E
.E F
ManufacturerF R
)R S
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
productManufacturer 2
=>3 5
productManufacturer6 I
.I J
ManufacturerIdJ X
)X Y
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
productManufacturer .
=>/ 1
productManufacturer2 E
.E F
ProductF M
)M N
. 
WithMany 
( 
product !
=>" $
product% ,
., - 
ProductManufacturers- A
)A B
. 
HasForeignKey 
( 
productManufacturer 2
=>3 5
productManufacturer6 I
.I J
	ProductIdJ S
)S T
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& Ô	
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\PriceLevelMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
PriceLevelMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

PriceLevel

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

PriceLevel9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

PriceLevel# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 

priceLevel %
=>& (

priceLevel) 3
.3 4
Id4 6
)6 7
;7 8
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} œH
xC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 

ProductMap

 #
:

$ %&
NopEntityTypeConfiguration

& @
<

@ A
Product

A H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Product9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Product# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
product "
=># %
product& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
Name0 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
.G H

IsRequiredH R
(R S
)S T
;T U
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
MetaKeywords0 <
)< =
.= >
HasMaxLength> J
(J K
$numK N
)N O
;O P
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
	MetaTitle0 9
)9 :
.: ;
HasMaxLength; G
(G H
$numH K
)K L
;L M
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
Sku0 3
)3 4
.4 5
HasMaxLength5 A
(A B
$numB E
)E F
;F G
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0"
ManufacturerPartNumber0 F
)F G
.G H
HasMaxLengthH T
(T U
$numU X
)X Y
;Y Z
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
Gtin0 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
;G H
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0$
AdditionalShippingCharge0 H
)H I
.I J
HasColumnTypeJ W
(W X
$strX h
)h i
;i j
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
Price0 5
)5 6
.6 7
HasColumnType7 D
(D E
$strE U
)U V
;V W
builder 
. 
Property 
( 
product $
=>% '
product( /
./ 0
OldPrice0 8
)8 9
.9 :
HasColumnType: G
(G H
$strH X
)X Y
;Y Z
builder   
.   
Property   
(   
product   $
=>  % '
product  ( /
.  / 0
ProductCost  0 ;
)  ; <
.  < =
HasColumnType  = J
(  J K
$str  K [
)  [ \
;  \ ]
builder!! 
.!! 
Property!! 
(!! 
product!! $
=>!!% '
product!!( /
.!!/ 0'
MinimumCustomerEnteredPrice!!0 K
)!!K L
.!!L M
HasColumnType!!M Z
(!!Z [
$str!![ k
)!!k l
;!!l m
builder"" 
."" 
Property"" 
("" 
product"" $
=>""% '
product""( /
.""/ 0'
MaximumCustomerEnteredPrice""0 K
)""K L
.""L M
HasColumnType""M Z
(""Z [
$str""[ k
)""k l
;""l m
builder## 
.## 
Property## 
(## 
product## $
=>##% '
product##( /
.##/ 0
Weight##0 6
)##6 7
.##7 8
HasColumnType##8 E
(##E F
$str##F V
)##V W
;##W X
builder$$ 
.$$ 
Property$$ 
($$ 
product$$ $
=>$$% '
product$$( /
.$$/ 0
Length$$0 6
)$$6 7
.$$7 8
HasColumnType$$8 E
($$E F
$str$$F V
)$$V W
;$$W X
builder%% 
.%% 
Property%% 
(%% 
product%% $
=>%%% '
product%%( /
.%%/ 0
Width%%0 5
)%%5 6
.%%6 7
HasColumnType%%7 D
(%%D E
$str%%E U
)%%U V
;%%V W
builder&& 
.&& 
Property&& 
(&& 
product&& $
=>&&% '
product&&( /
.&&/ 0
Height&&0 6
)&&6 7
.&&7 8
HasColumnType&&8 E
(&&E F
$str&&F V
)&&V W
;&&W X
builder'' 
.'' 
Property'' 
('' 
product'' $
=>''% '
product''( /
.''/ 0
RequiredProductIds''0 B
)''B C
.''C D
HasMaxLength''D P
(''P Q
$num''Q U
)''U V
;''V W
builder(( 
.(( 
Property(( 
((( 
product(( $
=>((% '
product((( /
.((/ 0
AllowedQuantities((0 A
)((A B
.((B C
HasMaxLength((C O
(((O P
$num((P T
)((T U
;((U V
builder)) 
.)) 
Property)) 
()) 
product)) $
=>))% '
product))( /
.))/ 0
BasepriceAmount))0 ?
)))? @
.))@ A
HasColumnType))A N
())N O
$str))O _
)))_ `
;))` a
builder** 
.** 
Property** 
(** 
product** $
=>**% '
product**( /
.**/ 0
BasepriceBaseAmount**0 C
)**C D
.**D E
HasColumnType**E R
(**R S
$str**S c
)**c d
;**d e
builder++ 
.++ 
Property++ 
(++ 
product++ $
=>++% '
product++( /
.++/ 0$
OverriddenGiftCardAmount++0 H
)++H I
.++I J
HasColumnType++J W
(++W X
$str++X h
)++h i
;++i j
builder-- 
.-- 
Ignore-- 
(-- 
product-- "
=>--# %
product--& -
.--- .
ProductType--. 9
)--9 :
;--: ;
builder.. 
... 
Ignore.. 
(.. 
product.. "
=>..# %
product..& -
...- .
BackorderMode... ;
)..; <
;..< =
builder// 
.// 
Ignore// 
(// 
product// "
=>//# %
product//& -
.//- ."
DownloadActivationType//. D
)//D E
;//E F
builder00 
.00 
Ignore00 
(00 
product00 "
=>00# %
product00& -
.00- .
GiftCardType00. :
)00: ;
;00; <
builder11 
.11 
Ignore11 
(11 
product11 "
=>11# %
product11& -
.11- .
LowStockActivity11. >
)11> ?
;11? @
builder22 
.22 
Ignore22 
(22 
product22 "
=>22# %
product22& -
.22- .!
ManageInventoryMethod22. C
)22C D
;22D E
builder33 
.33 
Ignore33 
(33 
product33 "
=>33# %
product33& -
.33- . 
RecurringCyclePeriod33. B
)33B C
;33C D
builder44 
.44 
Ignore44 
(44 
product44 "
=>44# %
product44& -
.44- .
RentalPricePeriod44. ?
)44? @
;44@ A
builder55 
.55 
Ignore55 
(55 
product55 "
=>55# %
product55& -
.55- .
AppliedDiscounts55. >
)55> ?
;55? @
base77 
.77 
	Configure77 
(77 
builder77 "
)77" #
;77# $
}88 	
};; 
}<< ë
C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductPictureMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ProductPictureMap

 *
:

+ ,&
NopEntityTypeConfiguration

- G
<

G H
ProductPicture

H V
>

V W
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ProductPicture9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
ProductPictureTable/ B
)B C
;C D
builder 
. 
HasKey 
( 
productPicture )
=>* ,
productPicture- ;
.; <
Id< >
)> ?
;? @
builder 
. 
HasOne 
( 
productPicture )
=>* ,
productPicture- ;
.; <
Picture< C
)C D
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
productPicture -
=>. 0
productPicture1 ?
.? @
	PictureId@ I
)I J
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
productPicture )
=>* ,
productPicture- ;
.; <
Product< C
)C D
. 
WithMany 
( 
product !
=>" $
product% ,
., -
ProductPictures- <
)< =
. 
HasForeignKey 
( 
productPicture -
=>. 0
productPicture1 ?
.? @
	ProductId@ I
)I J
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ı
ÇC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductProductTagMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

  
ProductProductTagMap

 -
:

. /&
NopEntityTypeConfiguration

0 J
<

J K$
ProductProductTagMapping

K c
>

c d
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9$
ProductProductTagMapping9 Q
>Q R
builderS Z
)Z [
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /"
ProductProductTagTable/ E
)E F
;F G
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4
	ProductId4 =
,= >
mapping? F
.F G
ProductTagIdG S
}S T
)T U
;U V
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	ProductId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
ProductTagId0 <
)< =
.= >
HasColumnName> K
(K L
$strL [
)[ \
;\ ]
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Product. 5
)5 6
. 
WithMany 
( 
product !
=>" $
product% ,
., -%
ProductProductTagMappings- F
)F G
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2
	ProductId2 ;
); <
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .

ProductTag. 8
)8 9
.   
WithMany   
(   

productTag   $
=>  % '

productTag  ( 2
.  2 3%
ProductProductTagMappings  3 L
)  L M
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
ProductTagId!!2 >
)!!> ?
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ó
âC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductReviewHelpfulnessMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 '
ProductReviewHelpfulnessMap

 4
:

5 6&
NopEntityTypeConfiguration

7 Q
<

Q R$
ProductReviewHelpfulness

R j
>

j k
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9$
ProductReviewHelpfulness9 Q
>Q R
builderS Z
)Z [
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #$
ProductReviewHelpfulness# ;
); <
)< =
;= >
builder 
. 
HasKey 
( $
productReviewHelpfulness 3
=>4 6$
productReviewHelpfulness7 O
.O P
IdP R
)R S
;S T
builder 
. 
HasOne 
( $
productReviewHelpfulness 3
=>4 6$
productReviewHelpfulness7 O
.O P
ProductReviewP ]
)] ^
. 
WithMany 
( 
productReview '
=>( *
productReview+ 8
.8 9+
ProductReviewHelpfulnessEntries9 X
)X Y
. 
HasForeignKey 
( $
productReviewHelpfulness 7
=>8 :$
productReviewHelpfulness; S
.S T
ProductReviewIdT c
)c d
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! à
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductReviewMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ProductReviewMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
ProductReview

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ProductReview9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ProductReview# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
productReview (
=>) +
productReview, 9
.9 :
Id: <
)< =
;= >
builder 
. 
HasOne 
( 
productReview (
=>) +
productReview, 9
.9 :
Product: A
)A B
. 
WithMany 
( 
product !
=>" $
product% ,
., -
ProductReviews- ;
); <
. 
HasForeignKey 
( 
productReview ,
=>- /
productReview0 =
.= >
	ProductId> G
)G H
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
productReview (
=>) +
productReview, 9
.9 :
Customer: B
)B C
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
productReview ,
=>- /
productReview0 =
.= >

CustomerId> H
)H I
. 

IsRequired 
( 
) 
; 
builder!! 
.!! 
HasOne!! 
(!! 
productReview!! (
=>!!) +
productReview!!, 9
.!!9 :
Store!!: ?
)!!? @
."" 
WithMany"" 
("" 
)"" 
.## 
HasForeignKey## 
(## 
productReview## ,
=>##- /
productReview##0 =
.##= >
StoreId##> E
)##E F
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ é
èC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductReviewReviewTypeMappingMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 -
!ProductReviewReviewTypeMappingMap

 :
:

; <&
NopEntityTypeConfiguration

= W
<

W X*
ProductReviewReviewTypeMapping

X v
>

v w
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9*
ProductReviewReviewTypeMapping9 W
>W X
builderY `
)` a
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /)
ProductReview_ReviewTypeTable/ L
)L M
;M N
builder 
. 
HasKey 
( 
prrt 
=>  "
prrt# '
.' (
Id( *
)* +
;+ ,
builder 
. 
HasOne 
( 
prrt 
=>  "
prrt# '
.' (
ProductReview( 5
)5 6
. 
WithMany 
( 
r 
=> 
r  
.  !1
%ProductReviewReviewTypeMappingEntries! F
)F G
. 
HasForeignKey 
( 
prrt #
=>$ &
prrt' +
.+ ,
ProductReviewId, ;
); <
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
;1 2
builder 
. 
HasOne 
( 
pam 
=> !
pam" %
.% &

ReviewType& 0
)0 1
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
prrt #
=>$ &
prrt' +
.+ ,
ReviewTypeId, 8
)8 9
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
;1 2
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& Ô
éC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductSpecificationAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 ,
 ProductSpecificationAttributeMap

 9
:

: ;&
NopEntityTypeConfiguration

< V
<

V W)
ProductSpecificationAttribute

W t
>

t u
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9)
ProductSpecificationAttribute9 V
>V W
builderX _
)_ `
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /.
"ProductSpecificationAttributeTable/ Q
)Q R
;R S
builder 
. 
HasKey 
( )
productSpecificationAttribute 8
=>9 ;)
productSpecificationAttribute< Y
.Y Z
IdZ \
)\ ]
;] ^
builder 
. 
Property 
( )
productSpecificationAttribute :
=>; =)
productSpecificationAttribute> [
.[ \
CustomValue\ g
)g h
.h i
HasMaxLengthi u
(u v
$numv z
)z {
;{ |
builder 
. 
HasOne 
( )
productSpecificationAttribute 8
=>9 ;)
productSpecificationAttribute< Y
.Y Z(
SpecificationAttributeOptionZ v
)v w
. 
WithMany 
( 
) 
. 
HasForeignKey 
( )
productSpecificationAttribute <
=>= ?)
productSpecificationAttribute@ ]
.] ^*
SpecificationAttributeOptionId^ |
)| }
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( )
productSpecificationAttribute 8
=>9 ;)
productSpecificationAttribute< Y
.Y Z
ProductZ a
)a b
. 
WithMany 
( 
product !
=>" $
product% ,
., -*
ProductSpecificationAttributes- K
)K L
.   
HasForeignKey   
(   )
productSpecificationAttribute   <
=>  = ?)
productSpecificationAttribute  @ ]
.  ] ^
	ProductId  ^ g
)  g h
.!! 

IsRequired!! 
(!! 
)!! 
;!! 
builder## 
.## 
Ignore## 
(## )
productSpecificationAttribute## 8
=>##9 ;)
productSpecificationAttribute##< Y
.##Y Z
AttributeType##Z g
)##g h
;##h i
base%% 
.%% 
	Configure%% 
(%% 
builder%% "
)%%" #
;%%# $
}&& 	
})) 
}** ’
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductTagMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ProductTagMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

ProductTag

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

ProductTag9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

ProductTag# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 

productTag %
=>& (

productTag) 3
.3 4
Id4 6
)6 7
;7 8
builder 
. 
Property 
( 

productTag '
=>( *

productTag+ 5
.5 6
Name6 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} £
ÑC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductTagWithCountMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public		 

partial		 
class		 "
ProductTagWithCountMap		 /
:		0 1%
NopQueryTypeConfiguration		2 K
<		K L
ProductTagWithCount		L _
>		_ `
{

 
} 
} Õ
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductTemplateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
ProductTemplateMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I
ProductTemplate

I X
>

X Y
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ProductTemplate9 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ProductTemplate# 2
)2 3
)3 4
;4 5
builder 
. 
HasKey 
( 
template #
=>$ &
template' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
ViewPath2 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} √
äC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ProductWarehouseInventoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 (
ProductWarehouseInventoryMap

 5
:

6 7&
NopEntityTypeConfiguration

8 R
<

R S%
ProductWarehouseInventory

S l
>

l m
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9%
ProductWarehouseInventory9 R
>R S
builderT [
)[ \
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #%
ProductWarehouseInventory# <
)< =
)= >
;> ?
builder 
. 
HasKey 
( %
productWarehouseInventory 4
=>5 7%
productWarehouseInventory8 Q
.Q R
IdR T
)T U
;U V
builder 
. 
HasOne 
( %
productWarehouseInventory 4
=>5 7%
productWarehouseInventory8 Q
.Q R
ProductR Y
)Y Z
. 
WithMany 
( 
product !
=>" $
product% ,
., -%
ProductWarehouseInventory- F
)F G
. 
HasForeignKey 
( %
productWarehouseInventory 8
=>9 ;%
productWarehouseInventory< U
.U V
	ProductIdV _
)_ `
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( %
productWarehouseInventory 4
=>5 7%
productWarehouseInventory8 Q
.Q R
	WarehouseR [
)[ \
. 
WithMany 
( 
) 
. 
HasForeignKey 
( %
productWarehouseInventory 8
=>9 ;%
productWarehouseInventory< U
.U V
WarehouseIdV a
)a b
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ˝	
C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\RelatedProductMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
RelatedProductMap

 *
:

+ ,&
NopEntityTypeConfiguration

- G
<

G H
RelatedProduct

H V
>

V W
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
RelatedProduct9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
RelatedProduct# 1
)1 2
)2 3
;3 4
builder 
. 
HasKey 
( 
product "
=># %
product& -
.- .
Id. 0
)0 1
;1 2
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ¬
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\ReviewTypeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public 

partial 
class 
ReviewTypeMap &
:' (&
NopEntityTypeConfiguration) C
<C D

ReviewTypeD N
>N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

ReviewType9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

ReviewType# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 

reviewType %
=>& (

reviewType) 3
.3 4
Id4 6
)6 7
;7 8
builder 
. 
Property 
( 

reviewType '
=>( *

reviewType+ 5
.5 6
Name6 :
): ;
.; <

IsRequired< F
(F G
)G H
.H I
HasMaxLengthI U
(U V
$numV Y
)Y Z
;Z [
builder 
. 
Property 
( 

reviewType '
=>( *

reviewType+ 5
.5 6
Description6 A
)A B
.B C

IsRequiredC M
(M N
)N O
.O P
HasMaxLengthP \
(\ ]
$num] `
)` a
;a b
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   µ
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\SpecificationAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 %
SpecificationAttributeMap

 2
:

3 4&
NopEntityTypeConfiguration

5 O
<

O P"
SpecificationAttribute

P f
>

f g
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
SpecificationAttribute9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #"
SpecificationAttribute# 9
)9 :
): ;
;; <
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Name4 8
)8 9
.9 :

IsRequired: D
(D E
)E F
;F G
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} 
çC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\SpecificationAttributeOptionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 +
SpecificationAttributeOptionMap

 8
:

9 :&
NopEntityTypeConfiguration

; U
<

U V(
SpecificationAttributeOption

V r
>

r s
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9(
SpecificationAttributeOption9 U
>U V
builderW ^
)^ _
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #(
SpecificationAttributeOption# ?
)? @
)@ A
;A B
builder 
. 
HasKey 
( 
option !
=>" $
option% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
option #
=>$ &
option' -
.- .
Name. 2
)2 3
.3 4

IsRequired4 >
(> ?
)? @
;@ A
builder 
. 
Property 
( 
option #
=>$ &
option' -
.- .
ColorSquaresRgb. =
)= >
.> ?
HasMaxLength? K
(K L
$numL O
)O P
;P Q
builder 
. 
HasOne 
( 
option !
=>" $
option% +
.+ ,"
SpecificationAttribute, B
)B C
. 
WithMany 
( 
	attribute #
=>$ &
	attribute' 0
.0 1)
SpecificationAttributeOptions1 N
)N O
. 
HasForeignKey 
( 
option %
=>& (
option) /
./ 0$
SpecificationAttributeId0 H
)H I
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ ≠
ÖC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\StockQuantityHistoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 #
StockQuantityHistoryMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N 
StockQuantityHistory

N b
>

b c
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
StockQuantityHistory9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
StockQuantityHistory# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Product8 ?
)? @
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
historyEntry +
=>, .
historyEntry/ ;
.; <
	ProductId< E
)E F
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! ¯
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Catalog\TierPriceMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Catalog "
{ 
public

 

partial

 
class

 
TierPriceMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	TierPrice

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	TierPrice9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	TierPrice# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
price  
=>! #
price$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
price "
=># %
price& +
.+ ,
Price, 1
)1 2
.2 3
HasColumnType3 @
(@ A
$strA Q
)Q R
;R S
builder 
. 
HasOne 
( 
price  
=>! #
price$ )
.) *
Product* 1
)1 2
. 
WithMany 
( 
product !
=>" $
product% ,
., -

TierPrices- 7
)7 8
. 
HasForeignKey 
( 
price $
=>% '
price( -
.- .
	ProductId. 7
)7 8
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
price  
=>! #
price$ )
.) *
CustomerRole* 6
)6 7
. 
WithMany 
( 
) 
.   
HasForeignKey   
(   
price   $
=>  % '
price  ( -
.  - .
CustomerRoleId  . <
)  < =
.!! 
OnDelete!! 
(!! 
DeleteBehavior!! (
.!!( )
Cascade!!) 0
)!!0 1
;!!1 2
base## 
.## 
	Configure## 
(## 
builder## "
)##" #
;### $
}$$ 	
}'' 
}(( ¬
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\AddressAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public 

partial 
class 
AddressAttributeMap ,
:- .&
NopEntityTypeConfiguration/ I
<I J
AddressAttributeJ Z
>Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
AddressAttribute9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
AddressAttribute# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Name4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Ignore 
( 
	attribute $
=>% '
	attribute( 1
.1 2 
AttributeControlType2 F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   Â
ÖC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\AddressAttributeValueMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public 

partial 
class $
AddressAttributeValueMap 1
:2 3&
NopEntityTypeConfiguration4 N
<N O!
AddressAttributeValueO d
>d e
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9!
AddressAttributeValue9 N
>N O
builderP W
)W X
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #!
AddressAttributeValue# 8
)8 9
)9 :
;: ;
builder 
. 
HasKey 
( 
value  
=>! #
value$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
HasOne 
( 
value  
=>! #
value$ )
.) *
AddressAttribute* :
): ;
. 
WithMany 
( 
	attribute #
=>$ &
	attribute' 0
.0 1"
AddressAttributeValues1 G
)G H
. 
HasForeignKey 
( 
value $
=>% '
value( -
.- .
AddressAttributeId. @
)@ A
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ ·
wC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\AddressMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public

 

partial

 
class

 

AddressMap

 #
:

$ %&
NopEntityTypeConfiguration

& @
<

@ A
Address

A H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Address9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Address# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
address "
=># %
address& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
address $
=>% '
address( /
./ 0
	NetsuitId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI T
)T U
;U V
builder 
. 
HasOne 
( 
address "
=># %
address& -
.- .
Country. 5
)5 6
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
address &
=>' )
address* 1
.1 2
	CountryId2 ;
); <
;< =
builder 
. 
HasOne 
( 
address "
=># %
address& -
.- .
StateProvince. ;
); <
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
address &
=>' )
address* 1
.1 2
StateProvinceId2 A
)A B
;B C
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& û
sC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\BoxMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public 

partial 
class 
BoxMap 
:  !&
NopEntityTypeConfiguration" <
<< =
BSBox= B
>B C
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
BSBox9 >
>> ?
builder@ G
)G H
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
BSBox# (
)( )
)) *
;* +
builder 
. 
HasKey 
( 
deliveryRoutes )
=>* ,
deliveryRoutes- ;
.; <
Id< >
)> ?
;? @
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Name> B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ S
)S T
;T U
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Height> D
)D E
;E F
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Length> D
)D E
;E F
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Width> C
)C D
;D E
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >

VolumenBox> H
)H I
;I J
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Active> D
)D E
;E F
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! ·
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\BSItemPackMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{		 
public

 

partial

 
class

 
BSItemPackMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

BSItemPack

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

BSItemPack9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

BSItemPack# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 
c 
=> 
c  !
.! "
Id" $
)$ %
;% &
} 	
} 
} Ñ

}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\BSPackedOrderMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{		 
public

 

partial

 
class

 
BSPackedOrderMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
BSPackedOrder

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
BSPackedOrder9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
BSPackedOrder# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
deliveryRoutes )
=>* ,
deliveryRoutes- ;
.; <
Id< >
)> ?
;? @
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ∑	
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\DecimalQueryTypeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public

 

partial

 
class

 
DecimalQueryTypeMap

 ,
:

- .%
NopQueryTypeConfiguration

/ H
<

H I
DecimalQueryType

I Y
>

Y Z
{ 
public 
override 
void 
	Configure &
(& '
QueryTypeBuilder' 7
<7 8
DecimalQueryType8 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
Property 
( 
decimalValue )
=>* ,
decimalValue- 9
.9 :
Value: ?
)? @
.@ A
HasColumnTypeA N
(N O
$strO _
)_ `
;` a
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} á
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\DeliveryRoutesMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{		 
public

 

partial

 
class

 
DeliveryRoutesMap

 *
:

* +&
NopEntityTypeConfiguration

, F
<

F G
DeliveryRoutes

G U
>

U V
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
DeliveryRoutes9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
DeliveryRoutes# 1
)1 2
)2 3
;3 4
builder 
. 
HasKey 
( 
deliveryRoutes )
=>* ,
deliveryRoutes- ;
.; <
Id< >
)> ?
;? @
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Location> F
)F G
.G H
HasMaxLengthH T
(T U
$numU W
)W X
;X Y
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Name> B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ S
)S T
;T U
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
Minimum> E
)E F
;F G
builder 
. 
Property 
( 
deliveryRoutes +
=>, .
deliveryRoutes/ =
.= >
	Available> G
)G H
;H I
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ·
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\GenericAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public

 

partial

 
class

 
GenericAttributeMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
GenericAttribute

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
GenericAttribute9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
GenericAttribute# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
KeyGroup4 <
)< =
.= >
HasMaxLength> J
(J K
$numK N
)N O
.O P

IsRequiredP Z
(Z [
)[ \
;\ ]
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Key4 7
)7 8
.8 9
HasMaxLength9 E
(E F
$numF I
)I J
.J K

IsRequiredK U
(U V
)V W
;W X
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Value4 9
)9 :
.: ;

IsRequired; E
(E F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   ã
|C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\IntQueryTypeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public		 

partial		 
class		 
IntQueryTypeMap		 (
:		) *%
NopQueryTypeConfiguration		+ D
<		D E
IntQueryType		E Q
>		Q R
{

 
} 
} Ù	
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\ItemCollectionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public 

class 
ItemCollectionMap "
:# $&
NopEntityTypeConfiguration% ?
<? @
ItemCollection@ N
>N O
{		 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ItemCollection9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ItemCollection# 1
)1 2
)2 3
;3 4
builder 
. 
HasKey 
( 
itemCollection )
=>* ,
itemCollection- ;
.; <
Id< >
)> ?
;? @
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ˆ
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\ItemPackedBoxMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{		 
public

 

partial

 
class

 
ItemPackedBoxMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
BSItemPackedBox

G V
>

V W
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
BSItemPackedBox9 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
BSItemPackedBox# 2
)2 3
)3 4
;4 5
builder 
. 
HasKey 
( 
c 
=> 
c  !
.! "
Id" $
)$ %
;% &
} 	
} 
} Ì	
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\SearchTermMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public

 

partial

 
class

 
SearchTermMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

SearchTerm

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

SearchTerm9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

SearchTerm# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 

searchTerm %
=>& (

searchTerm) 3
.3 4
Id4 6
)6 7
;7 8
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} Ì
ÑC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\SS_AS_AnywhereSliderMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{		 
public

 

partial

 
class

 #
SS_AS_AnywhereSliderMap

 0
:

0 1&
NopEntityTypeConfiguration

2 L
<

L M 
SS_AS_AnywhereSlider

M a
>

a b
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
SS_AS_AnywhereSlider9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
SS_AS_AnywhereSlider# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
AnywhereSlider )
=>* ,
AnywhereSlider- ;
.; <
Id< >
)> ?
;? @
builder 
. 
Property 
( 
AnywhereSlider +
=>, .
AnywhereSlider/ =
.= >

SystemName> H
)H I
.I J
HasColumnNameJ W
(W X
$strX d
)d e
;e f
builder 
. 
Property 
( 
AnywhereSlider +
=>, .
AnywhereSlider/ =
.= >

SliderType> H
)H I
.I J
HasColumnNameJ W
(W X
$strX d
)d e
;e f
builder 
. 
Property 
( 
AnywhereSlider +
=>, .
AnywhereSlider/ =
.= >

LanguageId> H
)H I
.I J
HasColumnNameJ W
(W X
$strX d
)d e
;e f
builder 
. 
Property 
( 
AnywhereSlider +
=>, .
AnywhereSlider/ =
.= >
LimitedToStores> M
)M N
.N O
HasColumnNameO \
(\ ]
$str] n
)n o
;o p
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}"" ◊
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\SS_AS_SliderImageMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{		 
public

 

partial

 
class

  
SS_AS_SliderImageMap

 -
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
SS_AS_SliderImage

J [
>

[ \
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
SS_AS_SliderImage9 J
>J K
builderL S
)S T
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
SS_AS_SliderImage# 4
)4 5
)5 6
;6 7
builder 
. 
HasKey 
( 
SliderImage &
=>' )
SliderImage* 5
.5 6
Id6 8
)8 9
;9 :
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
DisplayText8 C
)C D
.D E
HasColumnNameE R
(R S
$strS `
)` a
;a b
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
Url8 ;
); <
.< =
HasColumnName= J
(J K
$strK P
)P Q
;Q R
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
Alt8 ;
); <
.< =
HasColumnName= J
(J K
$strK P
)P Q
;Q R
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
Visible8 ?
)? @
.@ A
HasColumnNameA N
(N O
$strO X
)X Y
;Y Z
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
DisplayOrder8 D
)D E
.E F
HasColumnNameF S
(S T
$strT b
)b c
;c d
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
	PictureId8 A
)A B
.B C
HasColumnNameC P
(P Q
$strQ \
)\ ]
;] ^
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
MobilePictureId8 G
)G H
.H I
HasColumnNameI V
(V W
$strW h
)h i
;i j
builder 
. 
Property 
( 
SliderImage (
=>) +
SliderImage, 7
.7 8
SliderId8 @
)@ A
.A B
HasColumnNameB O
(O P
$strP Z
)Z [
;[ \
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& î
C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\StringQueryTypeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public		 

partial		 
class		 
StringQueryTypeMap		 +
:		, -%
NopQueryTypeConfiguration		. G
<		G H
StringQueryType		H W
>		W X
{

 
} 
} ®
wC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Common\ZipCodeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Common !
{ 
public 

partial 
class 

ZipCodeMap #
:# $&
NopEntityTypeConfiguration% ?
<? @
Zipcode@ G
>G H
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Zipcode9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Zipcode# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Code4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
HasOne 
( 
address "
=># %
address& -
.- .
Country. 5
)5 6
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
address &
=>' )
address* 1
.1 2
	CountryId2 ;
); <
;< =
builder 
. 
HasOne 
( 
address "
=># %
address& -
.- .
StateProvince. ;
); <
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
address &
=>' )
address* 1
.1 2
StateProvinceId2 A
)A B
;B C
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## Œ
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Configuration\SettingMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Configuration (
{ 
public

 

partial

 
class

 

SettingMap

 #
:

$ %&
NopEntityTypeConfiguration

& @
<

@ A
Setting

A H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Setting9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Setting# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
setting "
=># %
setting& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
setting $
=>% '
setting( /
./ 0
Name0 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
.G H

IsRequiredH R
(R S
)S T
;T U
builder 
. 
Property 
( 
setting $
=>% '
setting( /
./ 0
Value0 5
)5 6
.6 7

IsRequired7 A
(A B
)B C
;C D
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ›
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CompanyAddressMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public 

partial 
class 
CompanyAddressMap *
:+ ,&
NopEntityTypeConfiguration- G
<G H
CompanyAddressesH X
>X Y
{ 
public		 
override		 
void		 
	Configure		 &
(		& '
EntityTypeBuilder		' 8
<		8 9
CompanyAddresses		9 I
>		I J
builder		K R
)		R S
{

 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /!
CompanyAddressesTable/ D
)D E
;E F
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4
	CompanyId4 =
,= >
mapping? F
.F G
	AddressIdG P
}Q R
)R S
;S T
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	CompanyId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	AddressId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Company. 5
)5 6
. 
WithMany 
( 
address !
=>" $
address% ,
., -"
CompanyAddressMappings- C
)C D
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2
	CompanyId2 ;
); <
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Address. 5
)5 6
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2
	AddressId2 ;
); <
. 

IsRequired 
( 
) 
; 
builder 
. 
Ignore 
( 
mapping "
=># %
mapping& -
.- .
Id. 0
)0 1
;1 2
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   ‡
ÇC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CompanyCustomerMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public 

partial 
class 
CompanyCustomerMap +
:, -&
NopEntityTypeConfiguration. H
<H I"
CompanyCustomerMappingI _
>_ `
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
CompanyCustomerMapping9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /!
CompanyCustomersTable/ D
)D E
;E F
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4
	CompanyId4 =
,= >
mapping? F
.F G

CustomerIdG Q
}R S
)S T
;T U
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	CompanyId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

CustomerId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Company. 5
)5 6
. 
WithMany 
( 
company !
=>" $
company% ,
., -#
CompanyCustomerMappings- D
)D E
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2
	CompanyId2 ;
); <
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Customer. 6
)6 7
. 
WithMany 
( 
customer "
=># %
customer& .
.. /#
CompanyCustomerMappings/ F
)F G
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2

CustomerId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
Ignore 
( 
mapping "
=># %
mapping& -
.- .
Id. 0
)0 1
;1 2
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}"" 
}## ¢
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CompanyMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public		 

partial		 
class		 

CompanyMap		 #
:		$ %&
NopEntityTypeConfiguration		& @
<		@ A
Company		A H
>		H I
{

 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Company9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Company# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
company "
=># %
company& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
company $
=>% '
company( /
./ 0
BillingAddressId0 @
)@ A
.A B
HasColumnNameB O
(O P
$strP c
)c d
;d e
builder 
. 
Property 
( 
company $
=>% '
company( /
./ 0
ShippingAddressId0 A
)A B
.B C
HasColumnNameC P
(P Q
$strQ e
)e f
;f g
builder 
. 
HasOne 
( 
company "
=># %
company& -
.- .
BillingAddress. <
)< =
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
company &
=>' )
company* 1
.1 2
BillingAddressId2 B
)B C
;C D
builder 
. 
HasOne 
( 
company "
=># %
company& -
.- .
ShippingAddress. =
)= >
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
company &
=>' )
company* 1
.1 2
ShippingAddressId2 C
)C D
;D E
builder 
. 
HasOne 
( 
company "
=># %
company& -
.- .

PriceLevel. 8
)8 9
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
company #
=>$ &
company' .
.. /
PriceLevelId/ ;
); <
;< =
builder   
.   
Ignore   
(   
company   "
=>  # %
company  & -
.  - .
	Addresses  . 7
)  7 8
;  8 9
base"" 
."" 
	Configure"" 
("" 
builder"" "
)""" #
;""# $
}## 	
}$$ 
}%% Û
ÇC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerAddressMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 
CustomerAddressMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I"
CustomerAddressMapping

I _
>

_ `
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
CustomerAddressMapping9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /"
CustomerAddressesTable/ E
)E F
;F G
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4

CustomerId4 >
,> ?
mapping@ G
.G H
	AddressIdH Q
}R S
)S T
;T U
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

CustomerId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	AddressId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Customer. 6
)6 7
. 
WithMany 
( 
customer "
=># %
customer& .
.. /#
CustomerAddressMappings/ F
)F G
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2

CustomerId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Address. 5
)5 6
.   
WithMany   
(   
)   
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
	AddressId!!2 ;
)!!; <
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ Õ
ÑC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

  
CustomerAttributeMap

 -
:

. /&
NopEntityTypeConfiguration

0 J
<

J K
CustomerAttribute

K \
>

\ ]
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
CustomerAttribute9 J
>J K
builderL S
)S T
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
CustomerAttribute# 4
)4 5
)5 6
;6 7
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Name4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Ignore 
( 
	attribute $
=>% '
	attribute( 1
.1 2 
AttributeControlType2 F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   Û
âC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerAttributeValueMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 %
CustomerAttributeValueMap

 2
:

3 4&
NopEntityTypeConfiguration

5 O
<

O P"
CustomerAttributeValue

P f
>

f g
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
CustomerAttributeValue9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #"
CustomerAttributeValue# 9
)9 :
): ;
;; <
builder 
. 
HasKey 
( 
value  
=>! #
value$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
HasOne 
( 
value  
=>! #
value$ )
.) *
CustomerAttribute* ;
); <
. 
WithMany 
( 
	attribute #
=>$ &
	attribute' 0
.0 1#
CustomerAttributeValues1 H
)H I
. 
HasForeignKey 
( 
value $
=>% '
value( -
.- .
CustomerAttributeId. A
)A B
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## £
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerCustomerRoleMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 #
CustomerCustomerRoleMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N'
CustomerCustomerRoleMapping

N i
>

i j
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9'
CustomerCustomerRoleMapping9 T
>T U
builderV ]
)] ^
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /%
CustomerCustomerRoleTable/ H
)H I
;I J
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4

CustomerId4 >
,> ?
mapping@ G
.G H
CustomerRoleIdH V
}W X
)X Y
;Y Z
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

CustomerId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
CustomerRoleId0 >
)> ?
.? @
HasColumnName@ M
(M N
$strN _
)_ `
;` a
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Customer. 6
)6 7
. 
WithMany 
( 
customer "
=># %
customer& .
.. /(
CustomerCustomerRoleMappings/ K
)K L
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2

CustomerId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
CustomerRole. :
): ;
.   
WithMany   
(   
)   
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
CustomerRoleId!!2 @
)!!@ A
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ’)
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 
CustomerMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Customer

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Customer9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Customer# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
customer #
=>$ &
customer' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
Username2 :
): ;
.; <
HasMaxLength< H
(H I
$numI M
)M N
;N O
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
Email2 7
)7 8
.8 9
HasMaxLength9 E
(E F
$numF J
)J K
;K L
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
EmailToRevalidate2 C
)C D
.D E
HasMaxLengthE Q
(Q R
$numR V
)V W
;W X
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2

SystemName2 <
)< =
.= >
HasMaxLength> J
(J K
$numK N
)N O
;O P
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
BillingAddressId2 B
)B C
.C D
HasColumnNameD Q
(Q R
$strR e
)e f
;f g
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
ShippingAddressId2 C
)C D
.D E
HasColumnNameE R
(R S
$strS g
)g h
;h i
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
Parent2 8
)8 9
.9 :
HasColumnName: G
(G H
$strH P
)P Q
;Q R
builder 
. 
Property 
( 
customer %
=>& (
customer) 1
.1 2
	NetsuitId2 ;
); <
.< =
HasColumnName= J
(J K
$strK V
)V W
;W X
builder!! 
.!! 
HasOne!! 
(!! 
customer!! #
=>!!$ &
customer!!' /
.!!/ 0
BillingAddress!!0 >
)!!> ?
."" 
WithMany"" 
("" 
)"" 
.## 
HasForeignKey## 
(## 
customer## '
=>##( *
customer##+ 3
.##3 4
BillingAddressId##4 D
)##D E
;##E F
builder%% 
.%% 
HasOne%% 
(%% 
customer%% #
=>%%$ &
customer%%' /
.%%/ 0
ShippingAddress%%0 ?
)%%? @
.&& 
WithMany&& 
(&& 
)&& 
.'' 
HasForeignKey'' 
('' 
customer'' '
=>''( *
customer''+ 3
.''3 4
ShippingAddressId''4 E
)''E F
;''F G
builder)) 
.)) 
HasOne)) 
()) 
customer)) #
=>))$ &
customer))' /
.))/ 0

PriceLevel))0 :
))): ;
.**	 

WithMany**
 
(** 
)** 
.++	 

HasForeignKey++
 
(++ 
customer++  
=>++! #
customer++$ ,
.++, -
PriceLevelId++- 9
)++9 :
;++: ;
builder.. 
... 
Ignore.. 
(.. 
customer.. #
=>..$ &
customer..' /
.../ 0
CustomerRoles..0 =
)..= >
;..> ?
builder// 
.// 
Ignore// 
(// 
customer// #
=>//$ &
customer//' /
./// 0
	Addresses//0 9
)//9 :
;//: ;
base11 
.11 
	Configure11 
(11 
builder11 "
)11" #
;11# $
}22 	
}55 
}66 ”
ÉC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerPasswordMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 
CustomerPasswordMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
CustomerPassword

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
CustomerPassword9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
CustomerPassword# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
password #
=>$ &
password' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
HasOne 
( 
password #
=>$ &
password' /
./ 0
Customer0 8
)8 9
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
password '
=>( *
password+ 3
.3 4

CustomerId4 >
)> ?
. 

IsRequired 
( 
) 
; 
builder 
. 
Ignore 
( 
password #
=>$ &
password' /
./ 0
PasswordFormat0 >
)> ?
;? @
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ô
ãC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerPaymentAuthorizeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{		 
public

 

partial

 
class

 '
CustomerPaymentAuthorizeMap

 4
:

5 6&
NopEntityTypeConfiguration

7 Q
<

Q R"
CustomerPaymentProfile

R h
>

h i
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
CustomerPaymentProfile9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #"
CustomerPaymentProfile# 9
)9 :
): ;
;; <
builder 
. 
HasKey 
( 
customerPayment *
=>+ -
customerPayment. =
.= >
Id> @
)@ A
;A B
builder 
. 
Property 
( 
customerPayment ,
=>- /
customerPayment0 ?
.? @
CustomerProfileId@ Q
)Q R
.R S
HasMaxLengthS _
(_ `
$num` d
)d e
;e f
builder 
. 
Property 
( 
customerPayment ,
=>- /
customerPayment0 ?
.? @&
CustomerPaymentProfileList@ Z
)Z [
.[ \
HasMaxLength\ h
(h i
$numi m
)m n
;n o
builder 
. 
Property 
( 
customerPayment ,
=>- /
customerPayment0 ?
.? @

ResultCode@ J
)J K
.K L
HasMaxLengthL X
(X Y
$numY ]
)] ^
;^ _
builder 
. 
Property 
( 
customerPayment ,
=>- /
customerPayment0 ?
.? @

CustomerId@ J
)J K
.K L
HasMaxLengthL X
(X Y
$numY \
)\ ]
;] ^
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}"" ü
ãC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerProfileAuthorizeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{		 
public

 

partial

 
class

 '
CustomerProfileAuthorizeMap

 4
:

5 6&
NopEntityTypeConfiguration

7 Q
<

Q R$
CustomerProfileAuthorize

R j
>

j k
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9$
CustomerProfileAuthorize9 Q
>Q R
builderS Z
)Z [
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #$
CustomerProfileAuthorize# ;
); <
)< =
;= >
builder 
. 
HasKey 
( 
customerProfile *
=>+ -
customerProfile. =
.= >
Id> @
)@ A
;A B
builder 
. 
Property 
( 
customerProfile ,
=>- /
customerProfile0 ?
.? @
CustomerProfileId@ Q
)Q R
.R S
HasMaxLengthS _
(_ `
$num` d
)d e
;e f
builder 
. 
Property 
( 
customerProfile ,
=>- /
customerProfile0 ?
.? @&
CustomerPaymentProfileList@ Z
)Z [
.[ \
HasMaxLength\ h
(h i
$numi m
)m n
;n o
builder 
. 
Property 
( 
customerProfile ,
=>- /
customerProfile0 ?
.? @

ResultCode@ J
)J K
.K L
HasMaxLengthL X
(X Y
$numY ]
)] ^
;^ _
builder 
. 
Property 
( 
customerProfile ,
=>- /
customerProfile0 ?
.? @

CustomerId@ J
)J K
.K L
HasMaxLengthL X
(X Y
$numY \
)\ ]
;] ^
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}## Ê
C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\CustomerRoleMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 
CustomerRoleMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
CustomerRole

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
CustomerRole9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
CustomerRole# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
role 
=>  "
role# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
role !
=>" $
role% )
.) *
Name* .
). /
./ 0
HasMaxLength0 <
(< =
$num= @
)@ A
.A B

IsRequiredB L
(L M
)M N
;N O
builder 
. 
Property 
( 
role !
=>" $
role% )
.) *

SystemName* 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ≠
èC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\ExternalAuthenticationRecordMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public

 

partial

 
class

 +
ExternalAuthenticationRecordMap

 8
:

9 :&
NopEntityTypeConfiguration

; U
<

U V(
ExternalAuthenticationRecord

V r
>

r s
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9(
ExternalAuthenticationRecord9 U
>U V
builderW ^
)^ _
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #(
ExternalAuthenticationRecord# ?
)? @
)@ A
;A B
builder 
. 
HasKey 
( 
record !
=>" $
record% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
HasOne 
( 
record !
=>" $
record% +
.+ ,
Customer, 4
)4 5
. 
WithMany 
( 
customer "
=># %
customer& .
.. /)
ExternalAuthenticationRecords/ L
)L M
. 
HasForeignKey 
( 
record %
=>& (
record) /
./ 0

CustomerId0 :
): ;
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! ¨

àC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\ItemCollectionCompanyMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{		 
public

 

class

 $
ItemCollectionCompanyMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G!
ItemCollectionCompany

G \
>

\ ]
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9!
ItemCollectionCompany9 N
>N O
builderP W
)W X
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #!
ItemCollectionCompany# 8
)8 9
)9 :
;: ;
builder 
. 
HasKey 
( !
itemCollectionCompany 0
=>1 3!
itemCollectionCompany4 I
.I J
IdJ L
)L M
;M N
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}  
ÜC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Customers\RewardPointsHistoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Customers $
{ 
public 

partial 
class "
RewardPointsHistoryMap /
:0 1&
NopEntityTypeConfiguration2 L
<L M
RewardPointsHistoryM `
>` a
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
RewardPointsHistory9 L
>L M
builderN U
)U V
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
RewardPointsHistory# 6
)6 7
)7 8
;8 9
builder 
. 
HasKey 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
Property 
( 
historyEntry )
=>* ,
historyEntry- 9
.9 :

UsedAmount: D
)D E
.E F
HasColumnTypeF S
(S T
$strT d
)d e
;e f
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Customer8 @
)@ A
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
historyEntry +
=>, .
historyEntry/ ;
.; <

CustomerId< F
)F G
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
UsedWithOrder8 E
)E F
.   
WithOne   
(   
order   
=>   !
order  " '
.  ' (%
RedeemedRewardPointsEntry  ( A
)  A B
.!! 
HasForeignKey!! 
<!! 
Order!! $
>!!$ %
(!!% &
order!!& +
=>!!, .
order!!/ 4
.!!4 5&
RewardPointsHistoryEntryId!!5 O
)!!O P
."" 
OnDelete"" 
("" 
DeleteBehavior"" (
.""( )
ClientSetNull"") 6
)""6 7
;""7 8
base$$ 
.$$ 
	Configure$$ 
($$ 
builder$$ "
)$$" #
;$$# $
}%% 	
}(( 
})) é
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Directory\CountryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Directory $
{ 
public

 

partial

 
class

 

CountryMap

 #
:

$ %&
NopEntityTypeConfiguration

& @
<

@ A
Country

A H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Country9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Country# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
country "
=># %
country& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
country $
=>% '
country( /
./ 0
Name0 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
.G H

IsRequiredH R
(R S
)S T
;T U
builder 
. 
Property 
( 
country $
=>% '
country( /
./ 0
TwoLetterIsoCode0 @
)@ A
.A B
HasMaxLengthB N
(N O
$numO P
)P Q
;Q R
builder 
. 
Property 
( 
country $
=>% '
country( /
./ 0
ThreeLetterIsoCode0 B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ R
)R S
;S T
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   Ë
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Directory\CurrencyMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Directory $
{ 
public

 

partial

 
class

 
CurrencyMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Currency

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Currency9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Currency# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
currency #
=>$ &
currency' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
currency %
=>& (
currency) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE G
)G H
.H I

IsRequiredI S
(S T
)T U
;U V
builder 
. 
Property 
( 
currency %
=>& (
currency) 1
.1 2
CurrencyCode2 >
)> ?
.? @
HasMaxLength@ L
(L M
$numM N
)N O
.O P

IsRequiredP Z
(Z [
)[ \
;\ ]
builder 
. 
Property 
( 
currency %
=>& (
currency) 1
.1 2
DisplayLocale2 ?
)? @
.@ A
HasMaxLengthA M
(M N
$numN P
)P Q
;Q R
builder 
. 
Property 
( 
currency %
=>& (
currency) 1
.1 2
CustomFormatting2 B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ S
)S T
;T U
builder 
. 
Property 
( 
currency %
=>& (
currency) 1
.1 2
Rate2 6
)6 7
.7 8
HasColumnType8 E
(E F
$strF V
)V W
;W X
builder 
. 
Ignore 
( 
currency #
=>$ &
currency' /
./ 0
RoundingType0 <
)< =
;= >
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ Ç
ÉC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Directory\MeasureDimensionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Directory $
{ 
public

 

partial

 
class

 
MeasureDimensionMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
MeasureDimension

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
MeasureDimension9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
MeasureDimension# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
	dimension $
=>% '
	dimension( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	dimension &
=>' )
	dimension* 3
.3 4
Name4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Property 
( 
	dimension &
=>' )
	dimension* 3
.3 4
SystemKeyword4 A
)A B
.B C
HasMaxLengthC O
(O P
$numP S
)S T
.T U

IsRequiredU _
(_ `
)` a
;a b
builder 
. 
Property 
( 
	dimension &
=>' )
	dimension* 3
.3 4
Ratio4 9
)9 :
.: ;
HasColumnType; H
(H I
$strI Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   €
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Directory\MeasureWeightMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Directory $
{ 
public

 

partial

 
class

 
MeasureWeightMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
MeasureWeight

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
MeasureWeight9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
MeasureWeight# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
weight !
=>" $
weight% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
weight #
=>$ &
weight' -
.- .
Name. 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
.E F

IsRequiredF P
(P Q
)Q R
;R S
builder 
. 
Property 
( 
weight #
=>$ &
weight' -
.- .
SystemKeyword. ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
.N O

IsRequiredO Y
(Y Z
)Z [
;[ \
builder 
. 
Property 
( 
weight #
=>$ &
weight' -
.- .
Ratio. 3
)3 4
.4 5
HasColumnType5 B
(B C
$strC S
)S T
;T U
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   ƒ
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Directory\StateProvinceMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Directory $
{ 
public

 

partial

 
class

 
StateProvinceMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
StateProvince

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
StateProvince9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
StateProvince# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
state  
=>! #
state$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
state "
=># %
state& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
Property 
( 
state "
=># %
state& +
.+ ,
Abbreviation, 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
;K L
builder 
. 
HasOne 
( 
state  
=>! #
state$ )
.) *
Country* 1
)1 2
. 
WithMany 
( 
country !
=>" $
country% ,
., -
StateProvinces- ;
); <
. 
HasForeignKey 
( 
state $
=>% '
state( -
.- .
	CountryId. 7
)7 8
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ ˜
ÉC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Discounts\DiscountCategoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Discounts $
{ 
public

 

partial

 
class

 
DiscountCategoryMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J#
DiscountCategoryMapping

J a
>

a b
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9#
DiscountCategoryMapping9 P
>P Q
builderR Y
)Y Z
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /,
 DiscountAppliedToCategoriesTable/ O
)O P
;P Q
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4

DiscountId4 >
,> ?
mapping@ G
.G H

CategoryIdH R
}R S
)S T
;T U
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

DiscountId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

CategoryId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Discount. 6
)6 7
. 
WithMany 
( 
discount "
=># %
discount& .
.. /$
DiscountCategoryMappings/ G
)G H
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2

DiscountId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Category. 6
)6 7
.   
WithMany   
(   
category   "
=>  # %
category  & .
.  . /$
DiscountCategoryMappings  / G
)  G H
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2

CategoryId!!2 <
)!!< =
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ™
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Discounts\DiscountManufacturerMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Discounts $
{ 
public

 

partial

 
class

 #
DiscountManufacturerMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N'
DiscountManufacturerMapping

N i
>

i j
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9'
DiscountManufacturerMapping9 T
>T U
builderV ]
)] ^
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. //
#DiscountAppliedToManufacturersTable/ R
)R S
;S T
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4

DiscountId4 >
,> ?
mapping@ G
.G H
ManufacturerIdH V
}W X
)X Y
;Y Z
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

DiscountId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
ManufacturerId0 >
)> ?
.? @
HasColumnName@ M
(M N
$strN _
)_ `
;` a
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Discount. 6
)6 7
. 
WithMany 
( 
discount "
=># %
discount& .
.. /(
DiscountManufacturerMappings/ K
)K L
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2

DiscountId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Manufacturer. :
): ;
.   
WithMany   
(   
manufacturer   &
=>  ' )
manufacturer  * 6
.  6 7(
DiscountManufacturerMappings  7 S
)  S T
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
ManufacturerId!!2 @
)!!@ A
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ˘
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Discounts\DiscountMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Discounts $
{ 
public

 

partial

 
class

 
DiscountMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Discount

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Discount9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Discount# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
discount #
=>$ &
discount' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
discount %
=>& (
discount) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
discount %
=>& (
discount) 1
.1 2

CouponCode2 <
)< =
.= >
HasMaxLength> J
(J K
$numK N
)N O
;O P
builder 
. 
Property 
( 
discount %
=>& (
discount) 1
.1 2
DiscountPercentage2 D
)D E
.E F
HasColumnTypeF S
(S T
$strT d
)d e
;e f
builder 
. 
Property 
( 
discount %
=>& (
discount) 1
.1 2
DiscountAmount2 @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
discount %
=>& (
discount) 1
.1 2!
MaximumDiscountAmount2 G
)G H
.H I
HasColumnTypeI V
(V W
$strW g
)g h
;h i
builder 
. 
HasMany 
( 
discount $
=>% '
discount( 0
.0 1 
DiscountRequirements1 E
)E F
. 
WithOne 
( 
requirement $
=>% '
requirement( 3
.3 4
Discount4 <
)< =
. 
HasForeignKey 
( 
requirement *
=>+ -
requirement. 9
.9 :

DiscountId: D
)D E
.   

IsRequired   
(   
)   
;   
builder"" 
."" 
Ignore"" 
("" 
discount"" #
=>""$ &
discount""' /
.""/ 0
DiscountType""0 <
)""< =
;""= >
builder## 
.## 
Ignore## 
(## 
discount## #
=>##$ &
discount##' /
.##/ 0
DiscountLimitation##0 B
)##B C
;##C D
base%% 
.%% 
	Configure%% 
(%% 
builder%% "
)%%" #
;%%# $
}&& 	
})) 
}** È
ÇC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Discounts\DiscountProductMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Discounts $
{ 
public

 

partial

 
class

 
DiscountProductMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I"
DiscountProductMapping

I _
>

_ `
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
DiscountProductMapping9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /*
DiscountAppliedToProductsTable/ M
)M N
;N O
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4

DiscountId4 >
,> ?
mapping@ G
.G H
	ProductIdH Q
}Q R
)R S
;S T
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0

DiscountId0 :
): ;
.; <
HasColumnName< I
(I J
$strJ W
)W X
;X Y
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	ProductId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Discount. 6
)6 7
. 
WithMany 
( 
discount "
=># %
discount& .
.. /#
DiscountProductMappings/ F
)F G
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2

DiscountId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Product. 5
)5 6
.   
WithMany   
(   
product   !
=>  " $
product  % ,
.  , -#
DiscountProductMappings  - D
)  D E
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
	ProductId!!2 ;
)!!; <
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ Ω
ÜC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Discounts\DiscountRequirementMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Discounts $
{ 
public

 

partial

 
class

 "
DiscountRequirementMap

 /
:

0 1&
NopEntityTypeConfiguration

2 L
<

L M
DiscountRequirement

M `
>

` a
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
DiscountRequirement9 L
>L M
builderN U
)U V
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
DiscountRequirement# 6
)6 7
)7 8
;8 9
builder 
. 
HasKey 
( 
requirement &
=>' )
requirement* 5
.5 6
Id6 8
)8 9
;9 :
builder 
. 
HasMany 
( 
requirement '
=>( *
requirement+ 6
.6 7
ChildRequirements7 H
)H I
. 
WithOne 
( 
) 
. 
HasForeignKey 
( 
requirement *
=>+ -
requirement. 9
.9 :
ParentId: B
)B C
;C D
builder 
. 
Ignore 
( 
requirement &
=>' )
requirement* 5
.5 6
InteractionType6 E
)E F
;F G
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}"" ù
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Discounts\DiscountUsageHistoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
	Discounts $
{ 
public

 

partial

 
class

 #
DiscountUsageHistoryMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N 
DiscountUsageHistory

N b
>

b c
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
DiscountUsageHistory9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
DiscountUsageHistory# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Discount8 @
)@ A
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
historyEntry +
=>, .
historyEntry/ ;
.; <

DiscountId< F
)F G
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Order8 =
)= >
. 
WithMany 
( 
order 
=>  "
order# (
.( ) 
DiscountUsageHistory) =
)= >
. 
HasForeignKey 
( 
historyEntry +
=>, .
historyEntry/ ;
.; <
OrderId< C
)C D
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ÷
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\ForumGroupMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

 
ForumGroupMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

ForumGroup

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

ForumGroup9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
ForumsGroupTable/ ?
)? @
;@ A
builder 
. 
HasKey 
( 

forumGroup %
=>& (

forumGroup) 3
.3 4
Id4 6
)6 7
;7 8
builder 
. 
Property 
( 

forumGroup '
=>( *

forumGroup+ 5
.5 6
Name6 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ¸
uC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\ForumMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

 
ForumMap

 !
:

" #&
NopEntityTypeConfiguration

$ >
<

> ?
Forum

? D
>

D E
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Forum9 >
>> ?
builder@ G
)G H
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /

ForumTable/ 9
)9 :
;: ;
builder 
. 
HasKey 
( 
forum  
=>! #
forum$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
forum "
=># %
forum& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
HasOne 
( 
forum  
=>! #
forum$ )
.) *

ForumGroup* 4
)4 5
. 
WithMany 
( 

forumGroup $
=>% '

forumGroup( 2
.2 3
Forums3 9
)9 :
. 
HasForeignKey 
( 
forum $
=>% '
forum( -
.- .
ForumGroupId. :
): ;
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## œ
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\ForumPostMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

 
ForumPostMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	ForumPost

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	ForumPost9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
ForumsPostTable/ >
)> ?
;? @
builder 
. 
HasKey 
( 
post 
=>  "
post# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
post !
=>" $
post% )
.) *
Text* .
). /
./ 0

IsRequired0 :
(: ;
); <
;< =
builder 
. 
Property 
( 
post !
=>" $
post% )
.) *
	IPAddress* 3
)3 4
.4 5
HasMaxLength5 A
(A B
$numB E
)E F
;F G
builder 
. 
HasOne 
( 
post 
=>  "
post# '
.' (

ForumTopic( 2
)2 3
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
post #
=>$ &
post' +
.+ ,
TopicId, 3
)3 4
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
post 
=>  "
post# '
.' (
Customer( 0
)0 1
.   
WithMany   
(   
)   
.!! 
HasForeignKey!! 
(!! 
post!! "
=>!!# %
post!!& *
.!!* +

CustomerId!!+ 5
)!!5 6
."" 

IsRequired"" 
("" 
)"" 
.## 
OnDelete## 
(## 
DeleteBehavior## '
.##' (
Restrict##( 0
)##0 1
;##1 2
base%% 
.%% 
	Configure%% 
(%% 
builder%% "
)%%" #
;%%# $
}&& 	
})) 
}** ˆ
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\ForumPostVoteMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

 
ForumPostVoteMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
ForumPostVote

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ForumPostVote9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
ForumsPostVoteTable/ B
)B C
;C D
builder 
. 
HasKey 
( 
postVote #
=>$ &
postVote' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
HasOne 
( 
postVote #
=>$ &
postVote' /
./ 0
	ForumPost0 9
)9 :
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
postVote '
=>( *
postVote+ 3
.3 4
ForumPostId4 ?
)? @
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! •
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\ForumSubscriptionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

  
ForumSubscriptionMap

 -
:

. /&
NopEntityTypeConfiguration

0 J
<

J K
ForumSubscription

K \
>

\ ]
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ForumSubscription9 J
>J K
builderL S
)S T
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /#
ForumsSubscriptionTable/ F
)F G
;G H
builder 
. 
HasKey 
( 
subscription '
=>( *
subscription+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
HasOne 
( 
subscription '
=>( *
subscription+ 7
.7 8
Customer8 @
)@ A
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
subscription +
=>, .
subscription/ ;
.; <

CustomerId< F
)F G
. 

IsRequired 
( 
) 
. 
OnDelete 
( 
DeleteBehavior (
.( )
Restrict) 1
)1 2
;2 3
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}"" „
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\ForumTopicMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

 
ForumTopicMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

ForumTopic

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

ForumTopic9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
ForumsTopicTable/ ?
)? @
;@ A
builder 
. 
HasKey 
( 
topic  
=>! #
topic$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
topic "
=># %
topic& +
.+ ,
Subject, 3
)3 4
.4 5
HasMaxLength5 A
(A B
$numB E
)E F
.F G

IsRequiredG Q
(Q R
)R S
;S T
builder 
. 
HasOne 
( 
topic  
=>! #
topic$ )
.) *
Forum* /
)/ 0
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
topic $
=>% '
topic( -
.- .
ForumId. 5
)5 6
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
topic  
=>! #
topic$ )
.) *
Customer* 2
)2 3
. 
WithMany 
( 
) 
.   
HasForeignKey   
(   
topic   #
=>  $ &
topic  ' ,
.  , -

CustomerId  - 7
)  7 8
.!! 

IsRequired!! 
(!! 
)!! 
."" 
OnDelete"" 
("" 
DeleteBehavior"" '
.""' (
Restrict""( 0
)""0 1
;""1 2
builder$$ 
.$$ 
Ignore$$ 
($$ 
topic$$  
=>$$! #
topic$$$ )
.$$) *
ForumTopicType$$* 8
)$$8 9
;$$9 :
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ Â
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Forums\PrivateMessageMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Forums !
{ 
public

 

partial

 
class

 
PrivateMessageMap

 *
:

+ ,&
NopEntityTypeConfiguration

- G
<

G H
PrivateMessage

H V
>

V W
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
PrivateMessage9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
PrivateMessageTable/ B
)B C
;C D
builder 
. 
HasKey 
( 
message "
=># %
message& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
message $
=>% '
message( /
./ 0
Subject0 7
)7 8
.8 9
HasMaxLength9 E
(E F
$numF I
)I J
.J K

IsRequiredK U
(U V
)V W
;W X
builder 
. 
Property 
( 
message $
=>% '
message( /
./ 0
Text0 4
)4 5
.5 6

IsRequired6 @
(@ A
)A B
;B C
builder 
. 
HasOne 
( 
message "
=># %
message& -
.- .
FromCustomer. :
): ;
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
message %
=>& (
message) 0
.0 1
FromCustomerId1 ?
)? @
. 

IsRequired 
( 
) 
. 
OnDelete 
( 
DeleteBehavior '
.' (
Restrict( 0
)0 1
;1 2
builder   
.   
HasOne   
(   
message   "
=>  # %
message  & -
.  - .

ToCustomer  . 8
)  8 9
.!! 
WithMany!! 
(!! 
)!! 
."" 
HasForeignKey"" 
("" 
message"" %
=>""& (
message"") 0
.""0 1
ToCustomerId""1 =
)""= >
.## 

IsRequired## 
(## 
)## 
.$$ 
OnDelete$$ 
($$ 
DeleteBehavior$$ '
.$$' (
Restrict$$( 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ Ó
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Gdpr\GdprConsentMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Gdpr 
{ 
public

 

partial

 
class

 
GdprConsentMap

 '
:

( )&
NopEntityTypeConfiguration

* D
<

D E
GdprConsent

E P
>

P Q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
GdprConsent9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
GdprConsent# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
gdpr 
=>  "
gdpr# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
category %
=>& (
category) 1
.1 2
Message2 9
)9 :
.: ;

IsRequired; E
(E F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} å
rC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Gdpr\GdprLog.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Gdpr 
{ 
public

 

partial

 
class

 

GdprLogMap

 #
:

$ %&
NopEntityTypeConfiguration

& @
<

@ A
GdprLog

A H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
GdprLog9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
GdprLog# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
gdpr 
=>  "
gdpr# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Ignore 
( 
gdpr 
=>  "
gdpr# '
.' (
RequestType( 3
)3 4
;4 5
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ñ
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\IMappingConfiguration.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
{ 
public 

partial 
	interface !
IMappingConfiguration 2
{		 
void 
ApplyConfiguration 
(  
ModelBuilder  ,
modelBuilder- 9
)9 :
;: ;
} 
} ®-
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Invoices\InvoiceMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Invoices #
{ 
public 

partial 
class 

InvoiceMap #
:$ %&
NopEntityTypeConfiguration& @
<@ A
NopA D
.D E
CoreE I
.I J
DomainJ P
.P Q
InvoicesQ Y
.Y Z
InvoiceZ a
>a b
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Nop9 <
.< =
Core= A
.A B
DomainB H
.H I
InvoicesI Q
.Q R
InvoiceR Y
>Y Z
builder[ b
)b c
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Invoice# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
order  
=>! #
order$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
CreatedDate, 7
)7 8
.8 9
HasColumnType9 F
(F G
$strG R
)R S
;S T
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
PostingPeriod, 9
)9 :
.: ;
HasColumnType; H
(H I
$strI W
)W X
;X Y
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
Location, 4
)4 5
.5 6
HasColumnType6 C
(C D
$strD R
)R S
;S T
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
PONumber, 4
)4 5
.5 6
HasColumnType6 C
(C D
$strD R
)R S
;S T
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
PlacedByName, 8
)8 9
.9 :
HasColumnType: G
(G H
$strH V
)V W
;W X
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,

ShippingId, 6
)6 7
.7 8
HasColumnType8 E
(E F
$strF K
)K L
;L M
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
SaleOrderId, 7
)7 8
.8 9
HasColumnType9 F
(F G
$strG L
)L M
;M N
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,

CustomerId, 6
)6 7
.7 8
HasColumnType8 E
(E F
$strF K
)K L
;L M
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
Subtotal, 4
)4 5
.5 6
HasColumnType6 C
(C D
$strD T
)T U
;U V
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
DiscountItem, 8
)8 9
.9 :
HasColumnType: G
(G H
$strH X
)X Y
;Y Z
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
TaxTotal, 4
)4 5
.5 6
HasColumnType6 C
(C D
$strD T
)T U
;U V
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
ShippingCost, 8
)8 9
.9 :
HasColumnType: G
(G H
$strH X
)X Y
;Y Z
builder   
.   
Property   
(   
order   "
=>  # %
order  & +
.  + ,
Total  , 1
)  1 2
.  2 3
HasColumnType  3 @
(  @ A
$str  A Q
)  Q R
;  R S
builder!! 
.!! 
Property!! 
(!! 
order!! "
=>!!# %
order!!& +
.!!+ ,
	AmountDue!!, 5
)!!5 6
.!!6 7
HasColumnType!!7 D
(!!D E
$str!!E U
)!!U V
;!!V W
builder"" 
."" 
Property"" 
("" 
order"" "
=>""# %
order""& +
.""+ ,
	InvoiceNo"", 5
)""5 6
.""6 7
HasColumnType""7 D
(""D E
$str""E R
)""R S
;""S T
base$$ 
.$$ 
	Configure$$ 
($$ 
builder$$ "
)$$" #
;$$# $
}%% 	
}(( 
})) ï

ÜC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Invoice\CustomerAccountCreditMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Invoice "
{		 
public

 

partial

 
class

 $
CustomerAccountCreditMap

 1
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N!
CustomerAccountCredit

N c
>

c d
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9!
CustomerAccountCredit9 N
>N O
builderP W
)W X
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #!
CustomerAccountCredit# 8
)8 9
)9 :
;: ;
builder 
. 
HasKey 
( 
r 
=> 
r  !
.! "
Id" $
)$ %
;% &
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ã

C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Invoice\InvoicePaymentMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Invoice "
{		 
public

 

partial

 
class

 
InvoicePaymentMap

 *
:

+ ,&
NopEntityTypeConfiguration

- G
<

G H
InvoicePayment

H V
>

V W
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
InvoicePayment9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
InvoicePayment# 1
)1 2
)2 3
;3 4
builder 
. 
HasKey 
( 
InvoicePayment )
=>* ,
InvoicePayment- ;
.; <
Id< >
)> ?
;? @
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} †

ÉC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Invoice\InvoiceTransactionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Invoice "
{		 
public 

partial 
class !
InvoiceTransactionMap .
:/ 0&
NopEntityTypeConfiguration1 K
<K L
InvoiceTransactionL ^
>^ _
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
InvoiceTransaction9 K
>K L
builderM T
)T U
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
InvoiceTransaction# 5
)5 6
)6 7
;7 8
builder 
. 
HasKey 
( 
InvoicePayment )
=>* ,
InvoicePayment- ;
.; <
Id< >
)> ?
;? @
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ä
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Localization\LanguageMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Localization '
{ 
public

 

partial

 
class

 
LanguageMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Language

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Language9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Language# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
language #
=>$ &
language' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
language %
=>& (
language) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
language %
=>& (
language) 1
.1 2
LanguageCulture2 A
)A B
.B C
HasMaxLengthC O
(O P
$numP R
)R S
.S T

IsRequiredT ^
(^ _
)_ `
;` a
builder 
. 
Property 
( 
language %
=>& (
language) 1
.1 2
UniqueSeoCode2 ?
)? @
.@ A
HasMaxLengthA M
(M N
$numN O
)O P
;P Q
builder 
. 
Property 
( 
language %
=>& (
language) 1
.1 2
FlagImageFileName2 C
)C D
.D E
HasMaxLengthE Q
(Q R
$numR T
)T U
;U V
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! â
äC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Localization\LocaleStringResourceMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Localization '
{ 
public

 

partial

 
class

 #
LocaleStringResourceMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N 
LocaleStringResource

N b
>

b c
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
LocaleStringResource9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
LocaleStringResource# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
locale !
=>" $
locale% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
locale #
=>$ &
locale' -
.- .
ResourceName. :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
builder 
. 
Property 
( 
locale #
=>$ &
locale' -
.- .
ResourceValue. ;
); <
.< =

IsRequired= G
(G H
)H I
;I J
builder 
. 
HasOne 
( 
locale !
=>" $
locale% +
.+ ,
Language, 4
)4 5
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
locale %
=>& (
locale) /
./ 0

LanguageId0 :
): ;
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ ı
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Localization\LocalizedPropertyMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Localization '
{ 
public

 

partial

 
class

  
LocalizedPropertyMap

 -
:

. /&
NopEntityTypeConfiguration

0 J
<

J K
LocalizedProperty

K \
>

\ ]
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
LocalizedProperty9 J
>J K
builderL S
)S T
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
LocalizedProperty# 4
)4 5
)5 6
;6 7
builder 
. 
HasKey 
( 
property #
=>$ &
property' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
property %
=>& (
property) 1
.1 2
LocaleKeyGroup2 @
)@ A
.A B
HasMaxLengthB N
(N O
$numO R
)R S
.S T

IsRequiredT ^
(^ _
)_ `
;` a
builder 
. 
Property 
( 
property %
=>& (
property) 1
.1 2
	LocaleKey2 ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
.N O

IsRequiredO Y
(Y Z
)Z [
;[ \
builder 
. 
Property 
( 
property %
=>& (
property) 1
.1 2
LocaleValue2 =
)= >
.> ?

IsRequired? I
(I J
)J K
;K L
builder 
. 
HasOne 
( 
property #
=>$ &
property' /
./ 0
Language0 8
)8 9
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
property '
=>( *
property+ 3
.3 4

LanguageId4 >
)> ?
. 

IsRequired 
( 
) 
; 
base   
.   
	Configure   
(   
builder   "
)  " #
;  # $
}!! 	
}$$ 
}%% ±
|C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Logging\ActivityLogMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Logging "
{ 
public

 

partial

 
class

 
ActivityLogMap

 '
:

( )&
NopEntityTypeConfiguration

* D
<

D E
ActivityLog

E P
>

P Q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ActivityLog9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ActivityLog# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
logItem "
=># %
logItem& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
logItem $
=>% '
logItem( /
./ 0
Comment0 7
)7 8
.8 9

IsRequired9 C
(C D
)D E
;E F
builder 
. 
Property 
( 
logItem $
=>% '
logItem( /
./ 0
	IpAddress0 9
)9 :
.: ;
HasMaxLength; G
(G H
$numH K
)K L
;L M
builder 
. 
Property 
( 
logItem $
=>% '
logItem( /
./ 0

EntityName0 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
;M N
builder 
. 
HasOne 
( 
logItem "
=># %
logItem& -
.- .
ActivityLogType. =
)= >
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
logItem &
=>' )
logItem* 1
.1 2
ActivityLogTypeId2 C
)C D
. 

IsRequired 
( 
) 
; 
builder   
.   
HasOne   
(   
logItem   "
=>  # %
logItem  & -
.  - .
Customer  . 6
)  6 7
.!! 
WithMany!! 
(!! 
)!! 
."" 
HasForeignKey"" 
("" 
logItem"" &
=>""' )
logItem""* 1
.""1 2

CustomerId""2 <
)""< =
.## 

IsRequired## 
(## 
)## 
;## 
base%% 
.%% 
	Configure%% 
(%% 
builder%% "
)%%" #
;%%# $
}&& 	
})) 
}** Ã
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Logging\ActivityLogTypeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Logging "
{ 
public

 

partial

 
class

 
ActivityLogTypeMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I
ActivityLogType

I X
>

X Y
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ActivityLogType9 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ActivityLogType# 2
)2 3
)3 4
;4 5
builder 
. 
HasKey 
( 
logType "
=># %
logType& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
logType $
=>% '
logType( /
./ 0
SystemKeyword0 =
)= >
.> ?
HasMaxLength? K
(K L
$numL O
)O P
.P Q

IsRequiredQ [
([ \
)\ ]
;] ^
builder 
. 
Property 
( 
logType $
=>% '
logType( /
./ 0
Name0 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
.G H

IsRequiredH R
(R S
)S T
;T U
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} Ï
tC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Logging\LogMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Logging "
{ 
public

 

partial

 
class

 
LogMap

 
:

  !&
NopEntityTypeConfiguration

" <
<

< =
Log

= @
>

@ A
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Log9 <
>< =
builder> E
)E F
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Log# &
)& '
)' (
;( )
builder 
. 
HasKey 
( 
logItem "
=># %
logItem& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
logItem $
=>% '
logItem( /
./ 0
ShortMessage0 <
)< =
.= >

IsRequired> H
(H I
)I J
;J K
builder 
. 
Property 
( 
logItem $
=>% '
logItem( /
./ 0
	IpAddress0 9
)9 :
.: ;
HasMaxLength; G
(G H
$numH K
)K L
;L M
builder 
. 
Ignore 
( 
logItem "
=># %
logItem& -
.- .
LogLevel. 6
)6 7
;7 8
builder 
. 
HasOne 
( 
logItem "
=># %
logItem& -
.- .
Customer. 6
)6 7
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
logItem &
=>' )
logItem* 1
.1 2

CustomerId2 <
)< =
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
;1 2
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ›	
wC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Media\DownloadMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Media  
{ 
public

 

partial

 
class

 
DownloadMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Download

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Download9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Download# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
download #
=>$ &
download' /
./ 0
Id0 2
)2 3
;3 4
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} Â
|C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Media\PictureBinaryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Media  
{ 
public

 

partial

 
class

 
PictureBinaryMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
PictureBinary

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
PictureBinary9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
PictureBinary# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
pictureBinary (
=>) +
pictureBinary, 9
.9 :
Id: <
)< =
;= >
builder 
. 
HasOne 
( 
pictureBinary (
=>) +
pictureBinary, 9
.9 :
Picture: A
)A B
. 
WithOne 
( 
picture  
=>! #
picture$ +
.+ ,
PictureBinary, 9
)9 :
. 
HasForeignKey 
< 
PictureBinary ,
>, -
(- .
pictureBinary. ;
=>< >
pictureBinary? L
.L M
	PictureIdM V
)V W
. 
OnDelete 
( 
DeleteBehavior (
.( )
Cascade) 0
)0 1
;1 2
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! í
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Media\PictureHashItemMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Media  
{ 
public		 

partial		 
class		 
PictureHashItemMap		 +
:		, -%
NopQueryTypeConfiguration		. G
<		G H
PictureHashItem		H W
>		W X
{

 
} 
} ‹
vC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Media\PictureMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Media  
{ 
public

 

partial

 
class

 

PictureMap

 #
:

$ %&
NopEntityTypeConfiguration

& @
<

@ A
Picture

A H
>

H I
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Picture9 @
>@ A
builderB I
)I J
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Picture# *
)* +
)+ ,
;, -
builder 
. 
HasKey 
( 
picture "
=># %
picture& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
Property 
( 
picture $
=>% '
picture( /
./ 0
MimeType0 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG I
)I J
.J K

IsRequiredK U
(U V
)V W
;W X
builder 
. 
Property 
( 
picture $
=>% '
picture( /
./ 0
SeoFilename0 ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} Å
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Messages\CampaignMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Messages #
{ 
public

 

partial

 
class

 
CampaignMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Campaign

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Campaign9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Campaign# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
campaign #
=>$ &
campaign' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
campaign %
=>& (
campaign) 1
.1 2
Name2 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
builder 
. 
Property 
( 
campaign %
=>& (
campaign) 1
.1 2
Subject2 9
)9 :
.: ;

IsRequired; E
(E F
)F G
;G H
builder 
. 
Property 
( 
campaign %
=>& (
campaign) 1
.1 2
Body2 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   Æ
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Messages\EmailAccountMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Messages #
{ 
public

 

partial

 
class

 
EmailAccountMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
EmailAccount

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
EmailAccount9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
EmailAccount# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
emailAccount '
=>( *
emailAccount+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
Property 
( 
emailAccount )
=>* ,
emailAccount- 9
.9 :
Email: ?
)? @
.@ A
HasMaxLengthA M
(M N
$numN Q
)Q R
.R S

IsRequiredS ]
(] ^
)^ _
;_ `
builder 
. 
Property 
( 
emailAccount )
=>* ,
emailAccount- 9
.9 :
DisplayName: E
)E F
.F G
HasMaxLengthG S
(S T
$numT W
)W X
;X Y
builder 
. 
Property 
( 
emailAccount )
=>* ,
emailAccount- 9
.9 :
Host: >
)> ?
.? @
HasMaxLength@ L
(L M
$numM P
)P Q
.Q R

IsRequiredR \
(\ ]
)] ^
;^ _
builder 
. 
Property 
( 
emailAccount )
=>* ,
emailAccount- 9
.9 :
Username: B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ T
)T U
.U V

IsRequiredV `
(` a
)a b
;b c
builder 
. 
Property 
( 
emailAccount )
=>* ,
emailAccount- 9
.9 :
Password: B
)B C
.C D
HasMaxLengthD P
(P Q
$numQ T
)T U
.U V

IsRequiredV `
(` a
)a b
;b c
builder 
. 
Ignore 
( 
emailAccount '
=>( *
emailAccount+ 7
.7 8
FriendlyName8 D
)D E
;E F
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ è
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Messages\MessageTemplateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Messages #
{ 
public

 

partial

 
class

 
MessageTemplateMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I
MessageTemplate

I X
>

X Y
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
MessageTemplate9 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
MessageTemplate# 2
)2 3
)3 4
;4 5
builder 
. 
HasKey 
( 
template #
=>$ &
template' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
BccEmailAddresses2 C
)C D
.D E
HasMaxLengthE Q
(Q R
$numR U
)U V
;V W
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
Subject2 9
)9 :
.: ;
HasMaxLength; G
(G H
$numH L
)L M
;M N
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
EmailAccountId2 @
)@ A
.A B

IsRequiredB L
(L M
)M N
;N O
builder 
. 
Ignore 
( 
template #
=>$ &
template' /
./ 0
DelayPeriod0 ;
); <
;< =
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ù
àC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Messages\NewsLetterSubscriptionMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Messages #
{ 
public

 

partial

 
class

 %
NewsLetterSubscriptionMap

 2
:

3 4&
NopEntityTypeConfiguration

5 O
<

O P"
NewsLetterSubscription

P f
>

f g
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
NewsLetterSubscription9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #"
NewsLetterSubscription# 9
)9 :
): ;
;; <
builder 
. 
HasKey 
( 
subscription '
=>( *
subscription+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
Property 
( 
subscription )
=>* ,
subscription- 9
.9 :
Email: ?
)? @
.@ A
HasMaxLengthA M
(M N
$numN Q
)Q R
.R S

IsRequiredS ]
(] ^
)^ _
;_ `
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} à$
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Messages\QueuedEmailMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Messages #
{ 
public

 

partial

 
class

 
QueuedEmailMap

 '
:

( )&
NopEntityTypeConfiguration

* D
<

D E
QueuedEmail

E P
>

P Q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
QueuedEmail9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
QueuedEmail# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
email  
=>! #
email$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
From, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
FromName, 4
)4 5
.5 6
HasMaxLength6 B
(B C
$numC F
)F G
;G H
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
To, .
). /
./ 0
HasMaxLength0 <
(< =
$num= @
)@ A
.A B

IsRequiredB L
(L M
)M N
;N O
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
ToName, 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
;E F
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
ReplyTo, 3
)3 4
.4 5
HasMaxLength5 A
(A B
$numB E
)E F
;F G
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
ReplyToName, 7
)7 8
.8 9
HasMaxLength9 E
(E F
$numF I
)I J
;J K
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
CC, .
). /
./ 0
HasMaxLength0 <
(< =
$num= @
)@ A
;A B
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
Bcc, /
)/ 0
.0 1
HasMaxLength1 =
(= >
$num> A
)A B
;B C
builder 
. 
Property 
( 
email "
=># %
email& +
.+ ,
Subject, 3
)3 4
.4 5
HasMaxLength5 A
(A B
$numB F
)F G
;G H
builder!! 
.!! 
HasOne!! 
(!! 
email!!  
=>!!! #
email!!$ )
.!!) *
EmailAccount!!* 6
)!!6 7
."" 
WithMany"" 
("" 
)"" 
.## 
HasForeignKey## 
(## 
email## $
=>##% '
email##( -
.##- .
EmailAccountId##. <
)##< =
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
builder&& 
.&& 
Ignore&& 
(&& 
email&&  
=>&&! #
email&&$ )
.&&) *
Priority&&* 2
)&&2 3
;&&3 4
base(( 
.(( 
	Configure(( 
((( 
builder(( "
)((" #
;((# $
})) 	
},, 
}-- û
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\News\NewsCommentMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
News 
{ 
public

 

partial

 
class

 
NewsCommentMap

 '
:

( )&
NopEntityTypeConfiguration

* D
<

D E
NewsComment

E P
>

P Q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
NewsComment9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
NewsComment# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
comment "
=># %
comment& -
.- .
Id. 0
)0 1
;1 2
builder 
. 
HasOne 
( 
comment "
=># %
comment& -
.- .
NewsItem. 6
)6 7
. 
WithMany 
( 
news 
=> !
news" &
.& '
NewsComments' 3
)3 4
. 
HasForeignKey 
( 
comment &
=>' )
comment* 1
.1 2

NewsItemId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
comment "
=># %
comment& -
.- .
Customer. 6
)6 7
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
comment &
=>' )
comment* 1
.1 2

CustomerId2 <
)< =
. 

IsRequired 
( 
) 
; 
builder!! 
.!! 
HasOne!! 
(!! 
comment!! "
=>!!# %
comment!!& -
.!!- .
Store!!. 3
)!!3 4
."" 
WithMany"" 
("" 
)"" 
.## 
HasForeignKey## 
(## 
comment## &
=>##' )
comment##* 1
.##1 2
StoreId##2 9
)##9 :
.$$ 

IsRequired$$ 
($$ 
)$$ 
;$$ 
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ∫
vC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\News\NewsItemMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
News 
{ 
public

 

partial

 
class

 
NewsItemMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
NewsItem

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
NewsItem9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /
NewsItemTable/ <
)< =
;= >
builder 
. 
HasKey 
( 
newsItem #
=>$ &
newsItem' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
newsItem %
=>& (
newsItem) 1
.1 2
Title2 7
)7 8
.8 9

IsRequired9 C
(C D
)D E
;E F
builder 
. 
Property 
( 
newsItem %
=>& (
newsItem) 1
.1 2
Short2 7
)7 8
.8 9

IsRequired9 C
(C D
)D E
;E F
builder 
. 
Property 
( 
newsItem %
=>& (
newsItem) 1
.1 2
Full2 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
builder 
. 
Property 
( 
newsItem %
=>& (
newsItem) 1
.1 2
MetaKeywords2 >
)> ?
.? @
HasMaxLength@ L
(L M
$numM P
)P Q
;Q R
builder 
. 
Property 
( 
newsItem %
=>& (
newsItem) 1
.1 2
	MetaTitle2 ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
builder 
. 
HasOne 
( 
newsItem #
=>$ &
newsItem' /
./ 0
Language0 8
)8 9
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
newsItem '
=>( *
newsItem+ 3
.3 4

LanguageId4 >
)> ?
.   

IsRequired   
(   
)   
;   
base"" 
."" 
	Configure"" 
("" 
builder"" "
)""" #
;""# $
}## 	
}&& 
}'' Ã
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\NopEntityTypeConfiguration.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
{ 
public 

partial 
class &
NopEntityTypeConfiguration 3
<3 4
TEntity4 ;
>; <
:= >!
IMappingConfiguration? T
,T U$
IEntityTypeConfigurationV n
<n o
TEntityo v
>v w
wherex }
TEntity	~ Ö
:
Ü á

BaseEntity
à í
{ 
	protected 
virtual 
void 
PostConfigure ,
(, -
EntityTypeBuilder- >
<> ?
TEntity? F
>F G
builderH O
)O P
{ 	
} 	
public 
virtual 
void 
	Configure %
(% &
EntityTypeBuilder& 7
<7 8
TEntity8 ?
>? @
builderA H
)H I
{   	
PostConfigure"" 
("" 
builder"" !
)""! "
;""" #
}## 	
public)) 
virtual)) 
void)) 
ApplyConfiguration)) .
()). /
ModelBuilder))/ ;
modelBuilder))< H
)))H I
{** 	
modelBuilder++ 
.++ 
ApplyConfiguration++ +
(+++ ,
this++, 0
)++0 1
;++1 2
},, 	
}// 
}00 ∫
xC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\NopMappingDefaults.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
{ 
public 

static 
partial 
class 
NopMappingDefaults  2
{ 
public 
static 
string (
ProductProductAttributeTable 9
=>: <
$str= _
;_ `
public 
static 
string  
ProductCategoryTable 1
=>2 4
$str5 O
;O P
public 
static 
string $
ProductManufacturerTable 5
=>6 8
$str9 W
;W X
public 
static 
string 
ProductPictureTable 0
=>1 3
$str4 M
;M N
public   
static   
string   "
ProductProductTagTable   3
=>  4 6
$str  7 S
;  S T
public%% 
static%% 
string%% )
ProductReview_ReviewTypeTable%% :
=>%%; =
$str%%> `
;%%` a
public** 
static** 
string** .
"ProductSpecificationAttributeTable** ?
=>**@ B
$str**C k
;**k l
public// 
static// 
string// "
CustomerAddressesTable// 3
=>//4 6
$str//7 J
;//J K
public11 
static11 
string11 !
CompanyAddressesTable11 2
=>113 5
$str116 H
;11H I
public33 
static33 
string33 !
CompanyCustomersTable33 2
=>333 5
$str336 N
;33N O
public88 
static88 
string88 %
CustomerCustomerRoleTable88 6
=>887 9
$str88: Y
;88Y Z
public== 
static== 
string== ,
 DiscountAppliedToCategoriesTable== =
=>==> @
$str==A _
;==_ `
publicBB 
staticBB 
stringBB /
#DiscountAppliedToManufacturersTableBB @
=>BBA C
$strBBD e
;BBe f
publicGG 
staticGG 
stringGG *
DiscountAppliedToProductsTableGG ;
=>GG< >
$strGG? [
;GG[ \
publicLL 
staticLL 
stringLL 
ForumsGroupTableLL -
=>LL. 0
$strLL1 ?
;LL? @
publicQQ 
staticQQ 
stringQQ 

ForumTableQQ '
=>QQ( *
$strQQ+ 9
;QQ9 :
publicVV 
staticVV 
stringVV 
ForumsPostTableVV ,
=>VV- /
$strVV0 =
;VV= >
public[[ 
static[[ 
string[[ 
ForumsPostVoteTable[[ 0
=>[[1 3
$str[[4 E
;[[E F
public`` 
static`` 
string`` #
ForumsSubscriptionTable`` 4
=>``5 7
$str``8 M
;``M N
publicee 
staticee 
stringee 
ForumsTopicTableee -
=>ee. 0
$stree1 ?
;ee? @
publicjj 
staticjj 
stringjj 
PrivateMessageTablejj 0
=>jj1 3
$strjj4 K
;jjK L
publicoo 
staticoo 
stringoo 
NewsItemTableoo *
=>oo+ -
$stroo. 4
;oo4 5
publictt 
statictt 
stringtt %
PermissionRecordRoleTablett 6
=>tt7 9
$strtt: Y
;ttY Z
publicyy 
staticyy 
stringyy +
ShippingMethodRestrictionsTableyy <
=>yy= ?
$stryy@ \
;yy\ ]
}zz 
}{{ º
C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\NopQueryTypeConfiguration.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
{ 
public

 

partial

 
class

 %
NopQueryTypeConfiguration

 2
<

2 3
TQuery

3 9
>

9 :
:

; <!
IMappingConfiguration

= R
,

R S#
IQueryTypeConfiguration

T k
<

k l
TQuery

l r
>

r s
where

t y
TQuery	

z Ä
:


Å Ç
class


É à
{ 
	protected 
virtual 
void 
PostConfigure ,
(, -
QueryTypeBuilder- =
<= >
TQuery> D
>D E
builderF M
)M N
{ 	
} 	
public 
virtual 
void 
	Configure %
(% &
QueryTypeBuilder& 6
<6 7
TQuery7 =
>= >
builder? F
)F G
{ 	
PostConfigure!! 
(!! 
builder!! !
)!!! "
;!!" #
}"" 	
public(( 
virtual(( 
void(( 
ApplyConfiguration(( .
(((. /
ModelBuilder((/ ;
modelBuilder((< H
)((H I
{)) 	
modelBuilder** 
.** 
ApplyConfiguration** +
(**+ ,
this**, 0
)**0 1
;**1 2
}++ 	
}.. 
}// «
ÅC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\CheckoutAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

  
CheckoutAttributeMap

 -
:

. /&
NopEntityTypeConfiguration

0 J
<

J K
CheckoutAttribute

K \
>

\ ]
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
CheckoutAttribute9 J
>J K
builderL S
)S T
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
CheckoutAttribute# 4
)4 5
)5 6
;6 7
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Name4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Ignore 
( 
	attribute $
=>% '
	attribute( 1
.1 2 
AttributeControlType2 F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   ÷
ÜC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\CheckoutAttributeValueMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 %
CheckoutAttributeValueMap

 2
:

3 4&
NopEntityTypeConfiguration

5 O
<

O P"
CheckoutAttributeValue

P f
>

f g
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9"
CheckoutAttributeValue9 O
>O P
builderQ X
)X Y
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #"
CheckoutAttributeValue# 9
)9 :
): ;
;; <
builder 
. 
HasKey 
( 
value  
=>! #
value$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
ColorSquaresRgb, ;
); <
.< =
HasMaxLength= I
(I J
$numJ M
)M N
;N O
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
PriceAdjustment, ;
); <
.< =
HasColumnType= J
(J K
$strK [
)[ \
;\ ]
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
WeightAdjustment, <
)< =
.= >
HasColumnType> K
(K L
$strL \
)\ ]
;] ^
builder 
. 
HasOne 
( 
value  
=>! #
value$ )
.) *
CheckoutAttribute* ;
); <
. 
WithMany 
( 
	attribute #
=>$ &
	attribute' 0
.0 1#
CheckoutAttributeValues1 H
)H I
. 
HasForeignKey 
( 
value $
=>% '
value( -
.- .
CheckoutAttributeId. A
)A B
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& á
xC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\GiftCardMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
GiftCardMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
GiftCard

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
GiftCard9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
GiftCard# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
giftCard #
=>$ &
giftCard' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
giftCard %
=>& (
giftCard) 1
.1 2
Amount2 8
)8 9
.9 :
HasColumnType: G
(G H
$strH X
)X Y
;Y Z
builder 
. 
Ignore 
( 
giftCard #
=>$ &
giftCard' /
./ 0
GiftCardType0 <
)< =
;= >
builder 
. 
HasOne 
( 
giftCard #
=>$ &
giftCard' /
./ 0"
PurchasedWithOrderItem0 F
)F G
. 
WithMany 
( 
	orderItem #
=>$ &
	orderItem' 0
.0 1
AssociatedGiftCards1 D
)D E
. 
HasForeignKey 
( 
giftCard '
=>( *
giftCard+ 3
.3 4$
PurchasedWithOrderItemId4 L
)L M
;M N
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ ø
ÑC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\GiftCardUsageHistoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 #
GiftCardUsageHistoryMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N 
GiftCardUsageHistory

N b
>

b c
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
GiftCardUsageHistory9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
GiftCardUsageHistory# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
Property 
( 
historyEntry )
=>* ,
historyEntry- 9
.9 :
	UsedValue: C
)C D
.D E
HasColumnTypeE R
(R S
$strS c
)c d
;d e
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
GiftCard8 @
)@ A
. 
WithMany 
( 
giftCard "
=># %
giftCard& .
.. / 
GiftCardUsageHistory/ C
)C D
. 
HasForeignKey 
( 
historyEntry +
=>, .
historyEntry/ ;
.; <

GiftCardId< F
)F G
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
UsedWithOrder8 E
)E F
. 
WithMany 
( 
order 
=>  "
order# (
.( ) 
GiftCardUsageHistory) =
)= >
.   
HasForeignKey   
(   
historyEntry   +
=>  , .
historyEntry  / ;
.  ; <
UsedWithOrderId  < K
)  K L
.!! 

IsRequired!! 
(!! 
)!! 
;!! 
base## 
.## 
	Configure## 
(## 
builder## "
)##" #
;### $
}$$ 	
}'' 
}(( î%
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\OrderItemMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
OrderItemMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	OrderItem

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	OrderItem9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	OrderItem# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
	orderItem $
=>% '
	orderItem( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4
UnitPriceInclTax4 D
)D E
.E F
HasColumnTypeF S
(S T
$strT d
)d e
;e f
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4
UnitPriceExclTax4 D
)D E
.E F
HasColumnTypeF S
(S T
$strT d
)d e
;e f
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4
PriceInclTax4 @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4
PriceExclTax4 @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4!
DiscountAmountInclTax4 I
)I J
.J K
HasColumnTypeK X
(X Y
$strY i
)i j
;j k
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4!
DiscountAmountExclTax4 I
)I J
.J K
HasColumnTypeK X
(X Y
$strY i
)i j
;j k
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4
OriginalProductCost4 G
)G H
.H I
HasColumnTypeI V
(V W
$strW g
)g h
;h i
builder 
. 
Property 
( 
	orderItem &
=>' )
	orderItem* 3
.3 4

ItemWeight4 >
)> ?
.? @
HasColumnType@ M
(M N
$strN ^
)^ _
;_ `
builder   
.   
HasOne   
(   
	orderItem   $
=>  % '
	orderItem  ( 1
.  1 2
Order  2 7
)  7 8
.!! 
WithMany!! 
(!! 
order!! 
=>!!  "
order!!# (
.!!( )

OrderItems!!) 3
)!!3 4
."" 
HasForeignKey"" 
("" 
	orderItem"" (
=>"") +
	orderItem"", 5
.""5 6
OrderId""6 =
)""= >
.## 

IsRequired## 
(## 
)## 
;## 
builder%% 
.%% 
HasOne%% 
(%% 
	orderItem%% $
=>%%% '
	orderItem%%( 1
.%%1 2
Product%%2 9
)%%9 :
.&& 
WithMany&& 
(&& 
)&& 
.'' 
HasForeignKey'' 
('' 
	orderItem'' (
=>'') +
	orderItem'', 5
.''5 6
	ProductId''6 ?
)''? @
.(( 

IsRequired(( 
((( 
)(( 
;(( 
base** 
.** 
	Configure** 
(** 
builder** "
)**" #
;**# $
}++ 	
}.. 
}// œ?
uC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\OrderMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
OrderMap

 !
:

" #&
NopEntityTypeConfiguration

$ >
<

> ?
Order

? D
>

D E
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Order9 >
>> ?
builder@ G
)G H
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Order# (
)( )
)) *
;* +
builder 
. 
HasKey 
( 
order  
=>! #
order$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,
CurrencyRate, 8
)8 9
.9 :
HasColumnType: G
(G H
$strH X
)X Y
;Y Z
builder 
. 
Property 
( 
order "
=># %
order& +
.+ , 
OrderSubtotalInclTax, @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
order "
=># %
order& +
.+ , 
OrderSubtotalExclTax, @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,(
OrderSubTotalDiscountInclTax, H
)H I
.I J
HasColumnTypeJ W
(W X
$strX h
)h i
;i j
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,(
OrderSubTotalDiscountExclTax, H
)H I
.I J
HasColumnTypeJ W
(W X
$strX h
)h i
;i j
builder 
. 
Property 
( 
order "
=># %
order& +
.+ , 
OrderShippingInclTax, @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
order "
=># %
order& +
.+ , 
OrderShippingExclTax, @
)@ A
.A B
HasColumnTypeB O
(O P
$strP `
)` a
;a b
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,-
!PaymentMethodAdditionalFeeInclTax, M
)M N
.N O
HasColumnTypeO \
(\ ]
$str] m
)m n
;n o
builder 
. 
Property 
( 
order "
=># %
order& +
.+ ,-
!PaymentMethodAdditionalFeeExclTax, M
)M N
.N O
HasColumnTypeO \
(\ ]
$str] m
)m n
;n o
builder   
.   
Property   
(   
order   "
=>  # %
order  & +
.  + ,
OrderTax  , 4
)  4 5
.  5 6
HasColumnType  6 C
(  C D
$str  D T
)  T U
;  U V
builder!! 
.!! 
Property!! 
(!! 
order!! "
=>!!# %
order!!& +
.!!+ ,
OrderDiscount!!, 9
)!!9 :
.!!: ;
HasColumnType!!; H
(!!H I
$str!!I Y
)!!Y Z
;!!Z [
builder"" 
."" 
Property"" 
("" 
order"" "
=>""# %
order""& +
.""+ ,

OrderTotal"", 6
)""6 7
.""7 8
HasColumnType""8 E
(""E F
$str""F V
)""V W
;""W X
builder## 
.## 
Property## 
(## 
order## "
=>### %
order##& +
.##+ ,
RefundedAmount##, :
)##: ;
.##; <
HasColumnType##< I
(##I J
$str##J Z
)##Z [
;##[ \
builder$$ 
.$$ 
Property$$ 
($$ 
order$$ "
=>$$# %
order$$& +
.$$+ ,
CustomOrderNumber$$, =
)$$= >
.$$> ?

IsRequired$$? I
($$I J
)$$J K
;$$K L
builder&& 
.&& 
HasOne&& 
(&& 
order&&  
=>&&! #
order&&$ )
.&&) *
Customer&&* 2
)&&2 3
.'' 
WithMany'' 
('' 
)'' 
.(( 
HasForeignKey(( 
((( 
order(( $
=>((% '
order((( -
.((- .

CustomerId((. 8
)((8 9
.)) 

IsRequired)) 
()) 
))) 
;)) 
builder++ 
.++ 
HasOne++ 
(++ 
order++  
=>++! #
order++$ )
.++) *
BillingAddress++* 8
)++8 9
.,, 
WithMany,, 
(,, 
),, 
.-- 
HasForeignKey-- 
(-- 
order-- $
=>--% '
order--( -
.--- .
BillingAddressId--. >
)--> ?
... 

IsRequired.. 
(.. 
).. 
.// 
OnDelete// 
(// 
DeleteBehavior// (
.//( )
Restrict//) 1
)//1 2
;//2 3
builder11 
.11 
HasOne11 
(11 
order11  
=>11! #
order11$ )
.11) *
ShippingAddress11* 9
)119 :
.22 
WithMany22 
(22 
)22 
.33 
HasForeignKey33 
(33 
order33 $
=>33% '
order33( -
.33- .
ShippingAddressId33. ?
)33? @
;33@ A
builder55 
.55 
HasOne55 
(55 
order55  
=>55! #
order55$ )
.55) *
PickupAddress55* 7
)557 8
.66 
WithMany66 
(66 
)66 
.77 
HasForeignKey77 
(77 
order77 $
=>77% '
order77( -
.77- .
PickupAddressId77. =
)77= >
;77> ?
builder99 
.99 
Ignore99 
(99 
order99  
=>99! #
order99$ )
.99) *
OrderStatus99* 5
)995 6
;996 7
builder:: 
.:: 
Ignore:: 
(:: 
order::  
=>::! #
order::$ )
.::) *
PaymentStatus::* 7
)::7 8
;::8 9
builder;; 
.;; 
Ignore;; 
(;; 
order;;  
=>;;! #
order;;$ )
.;;) *
ShippingStatus;;* 8
);;8 9
;;;9 :
builder<< 
.<< 
Ignore<< 
(<< 
order<<  
=><<! #
order<<$ )
.<<) *"
CustomerTaxDisplayType<<* @
)<<@ A
;<<A B
base>> 
.>> 
	Configure>> 
(>> 
builder>> "
)>>" #
;>># $
}?? 	
}BB 
}CC ù
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\OrderNoteMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
OrderNoteMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	OrderNote

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	OrderNote9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	OrderNote# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
note 
=>  "
note# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
note !
=>" $
note% )
.) *
Note* .
). /
./ 0

IsRequired0 :
(: ;
); <
;< =
builder 
. 
HasOne 
( 
note 
=>  "
note# '
.' (
Order( -
)- .
. 
WithMany 
( 
order 
=>  "
order# (
.( )

OrderNotes) 3
)3 4
. 
HasForeignKey 
( 
note #
=>$ &
note' +
.+ ,
OrderId, 3
)3 4
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## Ã
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\RecurringPaymentHistoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 &
RecurringPaymentHistoryMap

 3
:

4 5&
NopEntityTypeConfiguration

6 P
<

P Q#
RecurringPaymentHistory

Q h
>

h i
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9#
RecurringPaymentHistory9 P
>P Q
builderR Y
)Y Z
{ 	
builder 
. 
ToTable 
( 
nameof "
(" ##
RecurringPaymentHistory# :
): ;
); <
;< =
builder 
. 
HasKey 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
HasOne 
( 
historyEntry '
=>( *
historyEntry+ 7
.7 8
RecurringPayment8 H
)H I
. 
WithMany 
( 
recurringPayment *
=>+ -
recurringPayment. >
.> ?#
RecurringPaymentHistory? V
)V W
. 
HasForeignKey 
( 
historyEntry +
=>, .
historyEntry/ ;
.; <
RecurringPaymentId< N
)N O
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! –
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\RecurringPaymentMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
RecurringPaymentMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
RecurringPayment

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
RecurringPayment9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
RecurringPayment# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
recurringPayment +
=>, .
recurringPayment/ ?
.? @
Id@ B
)B C
;C D
builder 
. 
HasOne 
( 
recurringPayment +
=>, .
recurringPayment/ ?
.? @
InitialOrder@ L
)L M
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
recurringPayment /
=>0 2
recurringPayment3 C
.C D
InitialOrderIdD R
)R S
. 

IsRequired 
( 
) 
. 
OnDelete 
( 
DeleteBehavior (
.( )
Restrict) 1
)1 2
;2 3
builder 
. 
Ignore 
( 
recurringPayment +
=>, .
recurringPayment/ ?
.? @
NextPaymentDate@ O
)O P
;P Q
builder 
. 
Ignore 
( 
recurringPayment +
=>, .
recurringPayment/ ?
.? @
CyclesRemaining@ O
)O P
;P Q
builder 
. 
Ignore 
( 
recurringPayment +
=>, .
recurringPayment/ ?
.? @
CyclePeriod@ K
)K L
;L M
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& Ó
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\ReturnRequestAction.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 "
ReturnRequestActionMap

 /
:

0 1&
NopEntityTypeConfiguration

2 L
<

L M
ReturnRequestAction

M `
>

` a
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ReturnRequestAction9 L
>L M
builderN U
)U V
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ReturnRequestAction# 6
)6 7
)7 8
;8 9
builder 
. 
HasKey 
( 
action !
=>" $
action% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
action #
=>$ &
action' -
.- .
Name. 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
.E F

IsRequiredF P
(P Q
)Q R
;R S
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ç
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\ReturnRequestMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
ReturnRequestMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
ReturnRequest

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ReturnRequest9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ReturnRequest# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
returnRequest (
=>) +
returnRequest, 9
.9 :
Id: <
)< =
;= >
builder 
. 
Property 
( 
returnRequest *
=>+ -
returnRequest. ;
.; <
ReasonForReturn< K
)K L
.L M

IsRequiredM W
(W X
)X Y
;Y Z
builder 
. 
Property 
( 
returnRequest *
=>+ -
returnRequest. ;
.; <
RequestedAction< K
)K L
.L M

IsRequiredM W
(W X
)X Y
;Y Z
builder 
. 
HasOne 
( 
returnRequest (
=>) +
returnRequest, 9
.9 :
Customer: B
)B C
. 
WithMany 
( 
customer "
=># %
customer& .
.. /
ReturnRequests/ =
)= >
. 
HasForeignKey 
( 
returnRequest ,
=>- /
returnRequest0 =
.= >

CustomerId> H
)H I
. 

IsRequired 
( 
) 
; 
builder 
. 
Ignore 
( 
returnRequest (
=>) +
returnRequest, 9
.9 :
ReturnRequestStatus: M
)M N
;N O
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& Ó
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\ReturnRequestReason.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 "
ReturnRequestReasonMap

 /
:

0 1&
NopEntityTypeConfiguration

2 L
<

L M
ReturnRequestReason

M `
>

` a
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ReturnRequestReason9 L
>L M
builderN U
)U V
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ReturnRequestReason# 6
)6 7
)7 8
;8 9
builder 
. 
HasKey 
( 
reason !
=>" $
reason% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
reason #
=>$ &
reason' -
.- .
Name. 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
.E F

IsRequiredF P
(P Q
)Q R
;R S
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ¶
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Orders\ShoppingCartItemMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Orders !
{ 
public

 

partial

 
class

 
ShoppingCartItemMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
ShoppingCartItem

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ShoppingCartItem9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ShoppingCartItem# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
item 
=>  "
item# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
item !
=>" $
item% )
.) * 
CustomerEnteredPrice* >
)> ?
.? @
HasColumnType@ M
(M N
$strN ^
)^ _
;_ `
builder 
. 
HasOne 
( 
item 
=>  "
item# '
.' (
Customer( 0
)0 1
. 
WithMany 
( 
customer "
=># %
customer& .
.. /
ShoppingCartItems/ @
)@ A
. 
HasForeignKey 
( 
item #
=>$ &
item' +
.+ ,

CustomerId, 6
)6 7
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
item 
=>  "
item# '
.' (
Product( /
)/ 0
. 
WithMany 
( 
) 
.   
HasForeignKey   
(   
item   #
=>  $ &
item  ' +
.  + ,
	ProductId  , 5
)  5 6
.!! 

IsRequired!! 
(!! 
)!! 
;!! 
builder## 
.## 
Ignore## 
(## 
item## 
=>##  "
item### '
.##' (
ShoppingCartType##( 8
)##8 9
;##9 :
base%% 
.%% 
	Configure%% 
(%% 
builder%% "
)%%" #
;%%# $
}&& 	
})) 
}** Õ
yC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Polls\PollAnswerMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Polls  
{ 
public

 

partial

 
class

 
PollAnswerMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

PollAnswer

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

PollAnswer9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

PollAnswer# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 

pollAnswer %
=>& (

pollAnswer) 3
.3 4
Id4 6
)6 7
;7 8
builder 
. 
Property 
( 

pollAnswer '
=>( *

pollAnswer+ 5
.5 6
Name6 :
): ;
.; <

IsRequired< F
(F G
)G H
;H I
builder 
. 
HasOne 
( 

pollAnswer %
=>& (

pollAnswer) 3
.3 4
Poll4 8
)8 9
. 
WithMany 
( 
poll 
=> !
poll" &
.& '
PollAnswers' 2
)2 3
. 
HasForeignKey 
( 

pollAnswer )
=>* ,

pollAnswer- 7
.7 8
PollId8 >
)> ?
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ´
sC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Polls\PollMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Polls  
{ 
public

 

partial

 
class

 
PollMap

  
:

! "&
NopEntityTypeConfiguration

# =
<

= >
Poll

> B
>

B C
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Poll9 =
>= >
builder? F
)F G
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Poll# '
)' (
)( )
;) *
builder 
. 
HasKey 
( 
poll 
=>  "
poll# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
poll !
=>" $
poll% )
.) *
Name* .
). /
./ 0

IsRequired0 :
(: ;
); <
;< =
builder 
. 
HasOne 
( 
poll 
=>  "
poll# '
.' (
Language( 0
)0 1
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
poll #
=>$ &
poll' +
.+ ,

LanguageId, 6
)6 7
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ’
C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Polls\PollVotingRecordMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Polls  
{ 
public

 

partial

 
class

 
PollVotingRecordMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
PollVotingRecord

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
PollVotingRecord9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
PollVotingRecord# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
record !
=>" $
record% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
HasOne 
( 
record !
=>" $
record% +
.+ ,

PollAnswer, 6
)6 7
. 
WithMany 
( 

pollAnswer $
=>% '

pollAnswer( 2
.2 3
PollVotingRecords3 D
)D E
. 
HasForeignKey 
( 
record %
=>& (
record) /
./ 0
PollAnswerId0 <
)< =
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
record !
=>" $
record% +
.+ ,
Customer, 4
)4 5
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
record %
=>& (
record) /
./ 0

CustomerId0 :
): ;
. 

IsRequired 
( 
) 
; 
base!! 
.!! 
	Configure!! 
(!! 
builder!! "
)!!" #
;!!# $
}"" 	
}%% 
}&& ¡
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Security\AclRecordMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Security #
{ 
public

 

partial

 
class

 
AclRecordMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	AclRecord

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	AclRecord9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	AclRecord# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
record !
=>" $
record% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
record #
=>$ &
record' -
.- .

EntityName. 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
HasOne 
( 
record !
=>" $
record% +
.+ ,
CustomerRole, 8
)8 9
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
record %
=>& (
record) /
./ 0
CustomerRoleId0 >
)> ?
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ⁄
éC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Security\PermissionRecordCustomerRoleMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Security #
{ 
public

 

partial

 
class

 +
PermissionRecordCustomerRoleMap

 8
:

9 :&
NopEntityTypeConfiguration

; U
<

U V/
#PermissionRecordCustomerRoleMapping

V y
>

y z
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9/
#PermissionRecordCustomerRoleMapping9 \
>\ ]
builder^ e
)e f
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /%
PermissionRecordRoleTable/ H
)H I
;I J
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4
PermissionRecordId4 F
,F G
mappingH O
.O P
CustomerRoleIdP ^
}^ _
)_ `
;` a
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
PermissionRecordId0 B
)B C
.C D
HasColumnNameD Q
(Q R
$strR g
)g h
;h i
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
CustomerRoleId0 >
)> ?
.? @
HasColumnName@ M
(M N
$strN _
)_ `
;` a
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
CustomerRole. :
): ;
. 
WithMany 
( 
role 
=> !
role" &
.& '0
$PermissionRecordCustomerRoleMappings' K
)K L
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2
CustomerRoleId2 @
)@ A
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
PermissionRecord. >
)> ?
.   
WithMany   
(   
record    
=>  ! #
record  $ *
.  * +0
$PermissionRecordCustomerRoleMappings  + O
)  O P
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
PermissionRecordId!!2 D
)!!D E
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ”
ÇC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Security\PermissionRecordMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Security #
{ 
public

 

partial

 
class

 
PermissionRecordMap

 ,
:

- .&
NopEntityTypeConfiguration

/ I
<

I J
PermissionRecord

J Z
>

Z [
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
PermissionRecord9 I
>I J
builderK R
)R S
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
PermissionRecord# 3
)3 4
)4 5
;5 6
builder 
. 
HasKey 
( 
record !
=>" $
record% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
record #
=>$ &
record' -
.- .
Name. 2
)2 3
.3 4

IsRequired4 >
(> ?
)? @
;@ A
builder 
. 
Property 
( 
record #
=>$ &
record' -
.- .

SystemName. 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Property 
( 
record #
=>$ &
record' -
.- .
Category. 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   ú
vC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Seo\UrlRecordMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Seo 
{ 
public

 

partial

 
class

 
UrlRecordMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	UrlRecord

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	UrlRecord9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	UrlRecord# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
record !
=>" $
record% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
record #
=>$ &
record' -
.- .

EntityName. 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Property 
( 
record #
=>$ &
record' -
.- .
Slug. 2
)2 3
.3 4

IsRequired4 >
(> ?
)? @
.@ A
HasMaxLengthA M
(M N
$numN Q
)Q R
;R S
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} …
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\DeliveryDateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 
DeliveryDateMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
DeliveryDate

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
DeliveryDate9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
DeliveryDate# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
date 
=>  "
date# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
date !
=>" $
date% )
.) *
Name* .
). /
./ 0
HasMaxLength0 <
(< =
$num= @
)@ A
.A B

IsRequiredB L
(L M
)M N
;N O
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ä
äC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\ProductAvailabilityRangeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 '
ProductAvailabilityRangeMap

 4
:

5 6&
NopEntityTypeConfiguration

7 Q
<

Q R$
ProductAvailabilityRange

R j
>

j k
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9$
ProductAvailabilityRange9 Q
>Q R
builderS Z
)Z [
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #$
ProductAvailabilityRange# ;
); <
)< =
;= >
builder 
. 
HasKey 
( 
range  
=>! #
range$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
range "
=># %
range& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} æ
~C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\ShipmentItemMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 
ShipmentItemMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
ShipmentItem

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ShipmentItem9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ShipmentItem# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
item 
=>  "
item# '
.' (
Id( *
)* +
;+ ,
builder 
. 
HasOne 
( 
item 
=>  "
item# '
.' (
Shipment( 0
)0 1
. 
WithMany 
( 
shipment "
=># %
shipment& .
.. /
ShipmentItems/ <
)< =
. 
HasForeignKey 
( 
item #
=>$ &
item' +
.+ ,

ShipmentId, 6
)6 7
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}   
}!! ◊
zC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\ShipmentMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 
ShipmentMap

 $
:

% &&
NopEntityTypeConfiguration

' A
<

A B
Shipment

B J
>

J K
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Shipment9 A
>A B
builderC J
)J K
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Shipment# +
)+ ,
), -
;- .
builder 
. 
HasKey 
( 
shipment #
=>$ &
shipment' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
shipment %
=>& (
shipment) 1
.1 2
TotalWeight2 =
)= >
.> ?
HasColumnType? L
(L M
$strM ]
)] ^
;^ _
builder 
. 
HasOne 
( 
shipment #
=>$ &
shipment' /
./ 0
Order0 5
)5 6
. 
WithMany 
( 
order 
=>  "
order# (
.( )
	Shipments) 2
)2 3
. 
HasForeignKey 
( 
shipment '
=>( *
shipment+ 3
.3 4
OrderId4 ;
); <
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## †
áC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\ShippingMethodCountryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 $
ShippingMethodCountryMap

 1
:

2 3&
NopEntityTypeConfiguration

4 N
<

N O(
ShippingMethodCountryMapping

O k
>

k l
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9(
ShippingMethodCountryMapping9 U
>U V
builderW ^
)^ _
{ 	
builder 
. 
ToTable 
( 
NopMappingDefaults .
.. /+
ShippingMethodRestrictionsTable/ N
)N O
;O P
builder 
. 
HasKey 
( 
mapping "
=># %
new& )
{* +
mapping, 3
.3 4
ShippingMethodId4 D
,D E
mappingF M
.M N
	CountryIdN W
}W X
)X Y
;Y Z
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
ShippingMethodId0 @
)@ A
.A B
HasColumnNameB O
(O P
$strP c
)c d
;d e
builder 
. 
Property 
( 
mapping $
=>% '
mapping( /
./ 0
	CountryId0 9
)9 :
.: ;
HasColumnName; H
(H I
$strI U
)U V
;V W
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
Country. 5
)5 6
. 
WithMany 
( 
country !
=>" $
country% ,
., -)
ShippingMethodCountryMappings- J
)J K
. 
HasForeignKey 
( 
mapping &
=>' )
mapping* 1
.1 2
	CountryId2 ;
); <
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
mapping "
=># %
mapping& -
.- .
ShippingMethod. <
)< =
.   
WithMany   
(   
method    
=>  ! #
method  $ *
.  * +)
ShippingMethodCountryMappings  + H
)  H I
.!! 
HasForeignKey!! 
(!! 
mapping!! &
=>!!' )
mapping!!* 1
.!!1 2
ShippingMethodId!!2 B
)!!B C
."" 

IsRequired"" 
("" 
)"" 
;"" 
builder$$ 
.$$ 
Ignore$$ 
($$ 
mapping$$ "
=>$$# %
mapping$$& -
.$$- .
Id$$. 0
)$$0 1
;$$1 2
base&& 
.&& 
	Configure&& 
(&& 
builder&& "
)&&" #
;&&# $
}'' 	
}** 
}++ ‹
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\ShippingMethodMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 
ShippingMethodMap

 *
:

+ ,&
NopEntityTypeConfiguration

- G
<

G H
ShippingMethod

H V
>

V W
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ShippingMethod9 G
>G H
builderI P
)P Q
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ShippingMethod# 1
)1 2
)2 3
;3 4
builder 
. 
HasKey 
( 
method !
=>" $
method% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
method #
=>$ &
method' -
.- .
Name. 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
.E F

IsRequiredF P
(P Q
)Q R
;R S
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} Œ
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Shipping\WarehouseMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Shipping #
{ 
public

 

partial

 
class

 
WarehouseMap

 %
:

& '&
NopEntityTypeConfiguration

( B
<

B C
	Warehouse

C L
>

L M
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
	Warehouse9 B
>B C
builderD K
)K L
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
	Warehouse# ,
), -
)- .
;. /
builder 
. 
HasKey 
( 
	warehouse $
=>% '
	warehouse( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	warehouse &
=>' )
	warehouse* 3
.3 4
Name4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ö
uC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Stores\StoreMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Stores !
{ 
public

 

partial

 
class

 
StoreMap

 !
:

" #&
NopEntityTypeConfiguration

$ >
<

> ?
Store

? D
>

D E
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Store9 >
>> ?
builder@ G
)G H
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Store# (
)( )
)) *
;* +
builder 
. 
HasKey 
( 
store  
=>! #
store$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,
Url, /
)/ 0
.0 1
HasMaxLength1 =
(= >
$num> A
)A B
.B C

IsRequiredC M
(M N
)N O
;O P
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,
Hosts, 1
)1 2
.2 3
HasMaxLength3 ?
(? @
$num@ D
)D E
;E F
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,
CompanyName, 7
)7 8
.8 9
HasMaxLength9 E
(E F
$numF J
)J K
;K L
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,
CompanyAddress, :
): ;
.; <
HasMaxLength< H
(H I
$numI M
)M N
;N O
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,
CompanyPhoneNumber, >
)> ?
.? @
HasMaxLength@ L
(L M
$numM Q
)Q R
;R S
builder 
. 
Property 
( 
store "
=># %
store& +
.+ ,

CompanyVat, 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE I
)I J
;J K
base 
. 
	Configure 
( 
builder "
)" #
;# $
}   	
}## 
}$$ Ó
|C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Stores\StoreMappingMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Stores !
{ 
public

 

partial

 
class

 
StoreMappingMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
StoreMapping

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
StoreMapping9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
StoreMapping# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
storeMapping '
=>( *
storeMapping+ 7
.7 8
Id8 :
): ;
;; <
builder 
. 
Property 
( 
storeMapping )
=>* ,
storeMapping- 9
.9 :

EntityName: D
)D E
.E F
HasMaxLengthF R
(R S
$numS V
)V W
.W X

IsRequiredX b
(b c
)c d
;d e
builder 
. 
HasOne 
( 
storeMapping '
=>( *
storeMapping+ 7
.7 8
Store8 =
)= >
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
storeMapping +
=>, .
storeMapping/ ;
.; <
StoreId< C
)C D
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## Î
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Tasks\ScheduleTaskMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Tasks  
{ 
public

 

partial

 
class

 
ScheduleTaskMap

 (
:

) *&
NopEntityTypeConfiguration

+ E
<

E F
ScheduleTask

F R
>

R S
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
ScheduleTask9 E
>E F
builderG N
)N O
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
ScheduleTask# /
)/ 0
)0 1
;1 2
builder 
. 
HasKey 
( 
task 
=>  "
task# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
task !
=>" $
task% )
.) *
Name* .
). /
./ 0

IsRequired0 :
(: ;
); <
;< =
builder 
. 
Property 
( 
task !
=>" $
task% )
.) *
Type* .
). /
./ 0

IsRequired0 :
(: ;
); <
;< =
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ÷
xC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Tax\TaxCategoryMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Tax 
{ 
public

 

partial

 
class

 
TaxCategoryMap

 '
:

( )&
NopEntityTypeConfiguration

* D
<

D E
TaxCategory

E P
>

P Q
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
TaxCategory9 D
>D E
builderF M
)M N
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
TaxCategory# .
). /
)/ 0
;0 1
builder 
. 
HasKey 
( 
taxCategory &
=>' )
taxCategory* 5
.5 6
Id6 8
)8 9
;9 :
builder 
. 
Property 
( 
taxCategory (
=>) +
taxCategory, 7
.7 8
Name8 <
)< =
.= >
HasMaxLength> J
(J K
$numK N
)N O
.O P

IsRequiredP Z
(Z [
)[ \
;\ ]
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}  	
uC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Topics\TopicMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Topics !
{ 
public

 

partial

 
class

 
TopicMap

 !
:

" #&
NopEntityTypeConfiguration

$ >
<

> ?
Topic

? D
>

D E
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Topic9 >
>> ?
builder@ G
)G H
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Topic# (
)( )
)) *
;* +
builder 
. 
HasKey 
( 
topic  
=>! #
topic$ )
.) *
Id* ,
), -
;- .
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ¿
}C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Topics\TopicTemplateMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Topics !
{ 
public

 

partial

 
class

 
TopicTemplateMap

 )
:

* +&
NopEntityTypeConfiguration

, F
<

F G
TopicTemplate

G T
>

T U
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
TopicTemplate9 F
>F G
builderH O
)O P
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
TopicTemplate# 0
)0 1
)1 2
;2 3
builder 
. 
HasKey 
( 
template #
=>$ &
template' /
./ 0
Id0 2
)2 3
;3 4
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
Name2 6
)6 7
.7 8
HasMaxLength8 D
(D E
$numE H
)H I
.I J

IsRequiredJ T
(T U
)U V
;V W
builder 
. 
Property 
( 
template %
=>& (
template) 1
.1 2
ViewPath2 :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
.M N

IsRequiredN X
(X Y
)Y Z
;Z [
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
} ø
ÄC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Vendors\VendorAttributeMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Vendors "
{ 
public

 

partial

 
class

 
VendorAttributeMap

 +
:

, -&
NopEntityTypeConfiguration

. H
<

H I
VendorAttribute

I X
>

X Y
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
VendorAttribute9 H
>H I
builderJ Q
)Q R
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
VendorAttribute# 2
)2 3
)3 4
;4 5
builder 
. 
HasKey 
( 
	attribute $
=>% '
	attribute( 1
.1 2
Id2 4
)4 5
;5 6
builder 
. 
Property 
( 
	attribute &
=>' )
	attribute* 3
.3 4
Name4 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG J
)J K
.K L

IsRequiredL V
(V W
)W X
;X Y
builder 
. 
Ignore 
( 
	attribute $
=>% '
	attribute( 1
.1 2 
AttributeControlType2 F
)F G
;G H
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
} 
}   ﬂ
ÖC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Vendors\VendorAttributeValueMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Vendors "
{ 
public

 

partial

 
class

 #
VendorAttributeValueMap

 0
:

1 2&
NopEntityTypeConfiguration

3 M
<

M N 
VendorAttributeValue

N b
>

b c
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9 
VendorAttributeValue9 M
>M N
builderO V
)V W
{ 	
builder 
. 
ToTable 
( 
nameof "
(" # 
VendorAttributeValue# 7
)7 8
)8 9
;9 :
builder 
. 
HasKey 
( 
value  
=>! #
value$ )
.) *
Id* ,
), -
;- .
builder 
. 
Property 
( 
value "
=># %
value& +
.+ ,
Name, 0
)0 1
.1 2
HasMaxLength2 >
(> ?
$num? B
)B C
.C D

IsRequiredD N
(N O
)O P
;P Q
builder 
. 
HasOne 
( 
value  
=>! #
value$ )
.) *
VendorAttribute* 9
)9 :
. 
WithMany 
( 
	attribute #
=>$ &
	attribute' 0
.0 1!
VendorAttributeValues1 F
)F G
. 
HasForeignKey 
( 
value $
=>% '
value( -
.- .
VendorAttributeId. ?
)? @
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## Æ
wC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Vendors\VendorMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Vendors "
{ 
public

 

partial

 
class

 
	VendorMap

 "
:

# $&
NopEntityTypeConfiguration

% ?
<

? @
Vendor

@ F
>

F G
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9
Vendor9 ?
>? @
builderA H
)H I
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #
Vendor# )
)) *
)* +
;+ ,
builder 
. 
HasKey 
( 
vendor !
=>" $
vendor% +
.+ ,
Id, .
). /
;/ 0
builder 
. 
Property 
( 
vendor #
=>$ &
vendor' -
.- .
Name. 2
)2 3
.3 4
HasMaxLength4 @
(@ A
$numA D
)D E
.E F

IsRequiredF P
(P Q
)Q R
;R S
builder 
. 
Property 
( 
vendor #
=>$ &
vendor' -
.- .
Email. 3
)3 4
.4 5
HasMaxLength5 A
(A B
$numB E
)E F
;F G
builder 
. 
Property 
( 
vendor #
=>$ &
vendor' -
.- .
MetaKeywords. :
): ;
.; <
HasMaxLength< H
(H I
$numI L
)L M
;M N
builder 
. 
Property 
( 
vendor #
=>$ &
vendor' -
.- .
	MetaTitle. 7
)7 8
.8 9
HasMaxLength9 E
(E F
$numF I
)I J
;J K
builder 
. 
Property 
( 
vendor #
=>$ &
vendor' -
.- .
PageSizeOptions. =
)= >
.> ?
HasMaxLength? K
(K L
$numL O
)O P
;P Q
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}!! 
}"" ©
{C:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\Mapping\Vendors\VendorNoteMap.cs
	namespace 	
Nop
 
. 
Data 
. 
Mapping 
. 
Vendors "
{ 
public

 

partial

 
class

 
VendorNoteMap

 &
:

' (&
NopEntityTypeConfiguration

) C
<

C D

VendorNote

D N
>

N O
{ 
public 
override 
void 
	Configure &
(& '
EntityTypeBuilder' 8
<8 9

VendorNote9 C
>C D
builderE L
)L M
{ 	
builder 
. 
ToTable 
( 
nameof "
(" #

VendorNote# -
)- .
). /
;/ 0
builder 
. 
HasKey 
( 
note 
=>  "
note# '
.' (
Id( *
)* +
;+ ,
builder 
. 
Property 
( 
note !
=>" $
note% )
.) *
Note* .
). /
./ 0

IsRequired0 :
(: ;
); <
;< =
builder 
. 
HasOne 
( 
note 
=>  "
note# '
.' (
Vendor( .
). /
. 
WithMany 
( 
vendor  
=>! #
vendor$ *
.* +
VendorNotes+ 6
)6 7
. 
HasForeignKey 
( 
note #
=>$ &
note' +
.+ ,
VendorId, 4
)4 5
. 

IsRequired 
( 
) 
; 
base 
. 
	Configure 
( 
builder "
)" #
;# $
} 	
}"" 
}## ä
mC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\NopDataDefaults.cs
	namespace 	
Nop
 
. 
Data 
{ 
public 

static 
partial 
class 
NopDataDefaults  /
{ 
public 
static 
string $
SqlServerIndexesFilePath 5
=>6 8
$str9 c
;c d
public 
static 
string -
!SqlServerStoredProceduresFilePath >
=>? A
$strB u
;u v
} 
} çR
nC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\NopObjectContext.cs
	namespace

 	
Nop


 
.

 
Data

 
{ 
public 

partial 
class 
NopObjectContext )
:* +
	DbContext, 5
,5 6

IDbContext7 A
{ 
public 
NopObjectContext 
(  
DbContextOptions  0
<0 1
NopObjectContext1 A
>A B
optionsC J
)J K
:L M
baseN R
(R S
optionsS Z
)Z [
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{   	
var"" 
typeConfigurations"" "
=""# $
Assembly""% -
.""- . 
GetExecutingAssembly"". B
(""B C
)""C D
.""D E
GetTypes""E M
(""M N
)""N O
.""O P
Where""P U
(""U V
type""V Z
=>""[ ]
(## 
type## 
.## 
BaseType## 
?## 
.##  
IsGenericType##  -
??##. 0
false##1 6
)##6 7
&&$$ 
($$ 
type$$ 
.$$ 
BaseType$$ %
.$$% &$
GetGenericTypeDefinition$$& >
($$> ?
)$$? @
==$$A C
typeof$$D J
($$J K&
NopEntityTypeConfiguration$$K e
<$$e f
>$$f g
)$$g h
||%% 
type%% 
.%%  
BaseType%%  (
.%%( )$
GetGenericTypeDefinition%%) A
(%%A B
)%%B C
==%%D F
typeof%%G M
(%%M N%
NopQueryTypeConfiguration%%N g
<%%g h
>%%h i
)%%i j
)%%j k
)%%k l
;%%l m
foreach'' 
('' 
var'' 
typeConfiguration'' *
in''+ -
typeConfigurations''. @
)''@ A
{(( 
var)) 
configuration)) !
=))" #
())$ %!
IMappingConfiguration))% :
))): ;
	Activator)); D
.))D E
CreateInstance))E S
())S T
typeConfiguration))T e
)))e f
;))f g
configuration** 
.** 
ApplyConfiguration** 0
(**0 1
modelBuilder**1 =
)**= >
;**> ?
}++ 
base-- 
.-- 
OnModelCreating--  
(--  !
modelBuilder--! -
)--- .
;--. /
}.. 	
	protected66 
virtual66 
string66  #
CreateSqlWithParameters66! 8
(668 9
string669 ?
sql66@ C
,66C D
params66E K
object66L R
[66R S
]66S T

parameters66U _
)66_ `
{77 	
for99 
(99 
var99 
i99 
=99 
$num99 
;99 
i99 
<=99  
(99! "

parameters99" ,
?99, -
.99- .
Length99. 4
??995 7
$num998 9
)999 :
-99; <
$num99= >
;99> ?
i99@ A
++99A C
)99C D
{:: 
if;; 
(;; 
!;; 
(;; 

parameters;;  
[;;  !
i;;! "
];;" #
is;;$ &
DbParameter;;' 2
	parameter;;3 <
);;< =
);;= >
continue<< 
;<< 
sql>> 
=>> 
$">> 
{>> 
sql>> 
}>> 
{>> 
(>> 
i>>  
>>>! "
$num>># $
?>>% &
$str>>' *
:>>+ ,
string>>- 3
.>>3 4
Empty>>4 9
)>>9 :
}>>: ;
$str>>; =
{>>= >
	parameter>>> G
.>>G H
ParameterName>>H U
}>>U V
">>V W
;>>W X
ifAA 
(AA 
	parameterAA 
.AA 
	DirectionAA '
==AA( *
ParameterDirectionAA+ =
.AA= >
InputOutputAA> I
||AAJ L
	parameterAAM V
.AAV W
	DirectionAAW `
==AAa c
ParameterDirectionAAd v
.AAv w
OutputAAw }
)AA} ~
sqlBB 
=BB 
$"BB 
{BB 
sqlBB  
}BB  !
$strBB! (
"BB( )
;BB) *
}CC 
returnEE 
sqlEE 
;EE 
}FF 	
publicQQ 
virtualQQ 
newQQ 
DbSetQQ  
<QQ  !
TEntityQQ! (
>QQ( )
SetQQ* -
<QQ- .
TEntityQQ. 5
>QQ5 6
(QQ6 7
)QQ7 8
whereQQ9 >
TEntityQQ? F
:QQG H

BaseEntityQQI S
{RR 	
returnSS 
baseSS 
.SS 
SetSS 
<SS 
TEntitySS #
>SS# $
(SS$ %
)SS% &
;SS& '
}TT 	
publicZZ 
virtualZZ 
stringZZ  
GenerateCreateScriptZZ 2
(ZZ2 3
)ZZ3 4
{[[ 	
return\\ 
Database\\ 
.\\  
GenerateCreateScript\\ 0
(\\0 1
)\\1 2
;\\2 3
}]] 	
publicff 
virtualff 

IQueryableff !
<ff! "
TQueryff" (
>ff( )
QueryFromSqlff* 6
<ff6 7
TQueryff7 =
>ff= >
(ff> ?
stringff? E
sqlffF I
,ffI J
paramsffK Q
objectffR X
[ffX Y
]ffY Z

parametersff[ e
)ffe f
whereffg l
TQueryffm s
:fft u
classffv {
{gg 	
returnhh 
Queryhh 
<hh 
TQueryhh 
>hh  
(hh  !
)hh! "
.hh" #
FromSqlhh# *
(hh* +#
CreateSqlWithParametershh+ B
(hhB C
sqlhhC F
,hhF G

parametershhH R
)hhR S
,hhS T

parametershhU _
)hh_ `
;hh` a
}ii 	
publicrr 
virtualrr 

IQueryablerr !
<rr! "
TEntityrr" )
>rr) *
EntityFromSqlrr+ 8
<rr8 9
TEntityrr9 @
>rr@ A
(rrA B
stringrrB H
sqlrrI L
,rrL M
paramsrrN T
objectrrU [
[rr[ \
]rr\ ]

parametersrr^ h
)rrh i
whererrj o
TEntityrrp w
:rrx y

BaseEntity	rrz Ñ
{ss 	
returntt 
Settt 
<tt 
TEntitytt 
>tt 
(tt  
)tt  !
.tt! "
FromSqltt" )
(tt) *#
CreateSqlWithParameterstt* A
(ttA B
sqlttB E
,ttE F

parametersttG Q
)ttQ R
,ttR S

parametersttT ^
)tt^ _
;tt_ `
}uu 	
public 
virtual 
int 
ExecuteSqlCommand ,
(, -
RawSqlString- 9
sql: =
,= >
bool? C"
doNotEnsureTransactionD Z
=[ \
false] b
,b c
intd g
?g h
timeouti p
=q r
nulls w
,w x
paramsy 
object
Ä Ü
[
Ü á
]
á à

parameters
â ì
)
ì î
{
ÄÄ 	
var
ÇÇ 
previousTimeout
ÇÇ 
=
ÇÇ  !
Database
ÇÇ" *
.
ÇÇ* +
GetCommandTimeout
ÇÇ+ <
(
ÇÇ< =
)
ÇÇ= >
;
ÇÇ> ?
Database
ÉÉ 
.
ÉÉ 
SetCommandTimeout
ÉÉ &
(
ÉÉ& '
timeout
ÉÉ' .
)
ÉÉ. /
;
ÉÉ/ 0
var
ÖÖ 
result
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
if
ÜÜ 
(
ÜÜ 
!
ÜÜ $
doNotEnsureTransaction
ÜÜ '
)
ÜÜ' (
{
áá 
using
ââ 
(
ââ 
var
ââ 
transaction
ââ &
=
ââ' (
Database
ââ) 1
.
ââ1 2
BeginTransaction
ââ2 B
(
ââB C
)
ââC D
)
ââD E
{
ää 
result
ãã 
=
ãã 
Database
ãã %
.
ãã% &
ExecuteSqlCommand
ãã& 7
(
ãã7 8
sql
ãã8 ;
,
ãã; <

parameters
ãã= G
)
ããG H
;
ããH I
transaction
åå 
.
åå  
Commit
åå  &
(
åå& '
)
åå' (
;
åå( )
}
çç 
}
éé 
else
èè 
result
êê 
=
êê 
Database
êê !
.
êê! "
ExecuteSqlCommand
êê" 3
(
êê3 4
sql
êê4 7
,
êê7 8

parameters
êê9 C
)
êêC D
;
êêD E
Database
ìì 
.
ìì 
SetCommandTimeout
ìì &
(
ìì& '
previousTimeout
ìì' 6
)
ìì6 7
;
ìì7 8
return
ïï 
result
ïï 
;
ïï 
}
ññ 	
public
ùù 
virtual
ùù 
void
ùù 
Detach
ùù "
<
ùù" #
TEntity
ùù# *
>
ùù* +
(
ùù+ ,
TEntity
ùù, 3
entity
ùù4 :
)
ùù: ;
where
ùù< A
TEntity
ùùB I
:
ùùJ K

BaseEntity
ùùL V
{
ûû 	
if
üü 
(
üü 
entity
üü 
==
üü 
null
üü 
)
üü 
throw
†† 
new
†† #
ArgumentNullException
†† /
(
††/ 0
nameof
††0 6
(
††6 7
entity
††7 =
)
††= >
)
††> ?
;
††? @
var
¢¢ 
entityEntry
¢¢ 
=
¢¢ 
Entry
¢¢ #
(
¢¢# $
entity
¢¢$ *
)
¢¢* +
;
¢¢+ ,
if
££ 
(
££ 
entityEntry
££ 
==
££ 
null
££ #
)
££# $
return
§§ 
;
§§ 
entityEntry
ßß 
.
ßß 
State
ßß 
=
ßß 
EntityState
ßß  +
.
ßß+ ,
Detached
ßß, 4
;
ßß4 5
}
®® 	
}
´´ 
}¨¨ ñ
sC:\Users\leosorio\source\repos\Release\FeatureParentChildPartialPayment\Libraries\Nop.Data\SqlServerDataProvider.cs
	namespace 	
Nop
 
. 
Data 
{ 
public 

partial 
class !
SqlServerDataProvider .
:/ 0
IDataProvider1 >
{ 
public 
virtual 
void 
InitializeDatabase .
(. /
)/ 0
{ 	
var 
context 
= 
EngineContext '
.' (
Current( /
./ 0
Resolve0 7
<7 8

IDbContext8 B
>B C
(C D
)D E
;E F
var  
tableNamesToValidate $
=% &
new' *
List+ /
</ 0
string0 6
>6 7
{8 9
$str: D
,D E
$strF P
,P Q
$strR Y
,Y Z
$str[ d
,d e
$strf x
}y z
;z {
var 
existingTableNames "
=# $
context% ,
. 
QueryFromSql 
< 
StringQueryType -
>- .
(. /
$str	/ ä
)
ä ã
. 
Select 
( 
stringValue #
=>$ &
stringValue' 2
.2 3
Value3 8
)8 9
.9 :
ToList: @
(@ A
)A B
;B C
var   
createTables   
=   
!    
existingTableNames    2
.  2 3
	Intersect  3 <
(  < = 
tableNamesToValidate  = Q
,  Q R
StringComparer  S a
.  a b&
InvariantCultureIgnoreCase  b |
)  | }
.  } ~
Any	  ~ Å
(
  Å Ç
)
  Ç É
;
  É Ñ
if!! 
(!! 
!!! 
createTables!! 
)!! 
return"" 
;"" 
var$$ 
fileProvider$$ 
=$$ 
EngineContext$$ ,
.$$, -
Current$$- 4
.$$4 5
Resolve$$5 <
<$$< =
INopFileProvider$$= M
>$$M N
($$N O
)$$O P
;$$P Q
context)) 
.)) 
ExecuteSqlScript)) $
())$ %
context))% ,
.)), - 
GenerateCreateScript))- A
())A B
)))B C
)))C D
;))D E
context,, 
.,, $
ExecuteSqlScriptFromFile,, ,
(,,, -
fileProvider,,- 9
.,,9 :
MapPath,,: A
(,,A B
NopDataDefaults,,B Q
.,,Q R$
SqlServerIndexesFilePath,,R j
),,j k
),,k l
;,,l m
context// 
.// $
ExecuteSqlScriptFromFile// ,
(//, -
fileProvider//- 9
.//9 :
MapPath//: A
(//A B
NopDataDefaults//B Q
.//Q R-
!SqlServerStoredProceduresFilePath//R s
)//s t
)//t u
;//u v
}00 	
public66 
virtual66 
DbParameter66 "
GetParameter66# /
(66/ 0
)660 1
{77 	
return88 
new88 
SqlParameter88 #
(88# $
)88$ %
;88% &
}99 	
publicBB 
virtualBB 
boolBB 
BackupSupportedBB +
=>BB, .
trueBB/ 3
;BB3 4
publicGG 
virtualGG 
intGG '
SupportedLengthOfBinaryHashGG 6
=>GG7 9
$numGG: >
;GG> ?
}JJ 
}KK 