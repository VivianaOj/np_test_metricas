@model CatalogPagingFilteringModel.PriceRangeFilterModel
@{
    var selectedItem = Model.Items.FirstOrDefault(x => x.Selected);

    string toggleStateClass = "toggleControl";
    string toggleStateStyles = string.Empty;

    //My css

    Html.AddCssFileParts("~/Themes/DefaultClean/Content/css/filter-price.css");
    Html.AddCssFileParts("~/Themes/DefaultClean/Content/css/price_range_style.css");
    Html.AddCssFileParts("~/lib/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.css");

    //Jquery
    Html.AddScriptParts(ResourceLocation.Footer, "~/lib/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/JavaScript.js");

    //My js
    Html.AddScriptParts(ResourceLocation.Footer, "~/Themes/DefaultClean/Content/js/price_range_script.js");

}

@* Estyle button *@
<style>

    .button-close {
        border-radius: 50%;
        padding: 0.5em;
        width: 30px;
        height: 30px;
        border: 1px solid;
        color: transparent;
        position: relative;
    }

        .button-close:hover {
            border: 2px solid;
            background-color: transparent;
            color: black;
        }

        .button-close::before {
            content: " ";
            position: absolute;
            display: block;
            background-color: black;
            width: 2px;
            left: 12px;
            top: 5px;
            bottom: 5px;
            transform: rotate(45deg);
        }

        .button-close::after {
            content: " ";
            position: absolute;
            display: block;
            background-color: black;
            height: 2px;
            top: 12px;
            left: 5px;
            right: 5px;
            transform: rotate(45deg);
        }



    .input-icon {
        position: relative;
    }

        .input-icon > i {
            position: absolute;
            display: block;
            transform: translate(0, -50%);
            top: 45%;
            pointer-events: none;
            width: 25px;
            text-align: center;
            font-style: normal;
        }

        .input-icon > input {
            padding-left: 25px;
            padding-right: 0;
        }

    .input-icon-right > i {
        right: 0;
    }

    .input-icon-right > input {
        padding-left: 0;
        padding-right: 25px;
        text-align: right;
    }
</style>


@functions{
    public string FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
    {
        var rangeText = "";
        if (string.IsNullOrWhiteSpace(filterItem.From))
        {
            rangeText = string.Format(T("Filtering.PriceRangeFilter.Under").Text, $"<span class=\"PriceRange\">{filterItem.To}</span>");
        }
        else if (string.IsNullOrWhiteSpace(filterItem.To))
        {
            rangeText = string.Format(T("Filtering.PriceRangeFilter.Over").Text, $"<span class=\"PriceRange\">{filterItem.From}</span>");
        }
        else
        {
            rangeText = $"<span class=\"PriceRange\">{filterItem.From}</span> - <span class=\"PriceRange\">{filterItem.To}</span>";
        }
        return rangeText;
    }
}

@if (Model.Enabled)
{
    <div class="nopAjaxFilters7Spikes" id="filter-price-version-desktop">
        <div class="filtersPanel">

            @*@if (selectedItem != null)
                {*@

            <div class="block filter-block selected-options">
                <div class="title">
                    <a class="toggleControl">@T("SevenSpikes.NopAjaxFilters.SelectedOptions.PanelTitle")</a>
                </div>
                <div class="filtersGroupPanel">
                    <ul class="selected-options-list">
                        <li class="price-range-select-ranges">
                            <label>Price: </label>
                            <span class="option">
                                @*@Html.Raw(FormatPriceRangeText(selectedItem))*@
                                <span class="PriceRange" id="selected-min-lb">0</span> <span id="selected-max-lb" class="PriceRange"> 0</span>
                                <button id="remove-url" onclick="removeUrlM()" title="@T("Catalog.RemoveFilterPriceProduct")">@T("Catalog.RemoveFilterPriceProduct")</button>
                            </span>
                        </li>
                    </ul>
                </div>
            </div>

            @*}*@
        @*
        <div class="block filter-block priceRangeFilterPanel7Spikes">
            
            <div class="title">
                <a class="@toggleStateClass title-filter-zone-desktop">@T("SevenSpikes.NopAjaxFilters.Client.PriceRangeFilter.Title")</a>
                <a class="@toggleStateClass title-filter-zone-mobile" onclick="filterPriceToggle(); return false;">@T("SevenSpikes.NopAjaxFilters.Client.PriceRangeFilter.Title")</a>
            </div>
            
            <div class="filtersGroupPanel" style="@toggleStateStyles">
                @{
                    var prmodel = Model.Items.OrderByDescending(o => o.To).FirstOrDefault();
                    string min = Model.Items.FirstOrDefault().From;
                    string max = Model.Items[Model.Items.Count() - 1].To;
                    string from = min.Remove(0, 1);
                    decimal to = decimal.Parse(max.Remove(0, 1));
                    prmodel.To = max;
                    string selFrom = from;
                    string selTo = to.ToString();
                    string FilterUrl = "";
                }

                @if (selectedItem != null)
                {
                    selFrom = decimal.Parse(selectedItem.From.Remove(0, 1)).ToString();
                    selTo = decimal.Parse(selectedItem.To.Remove(0, 1)).ToString();
                    FilterUrl = @selectedItem.FilterUrl;
                }

                
                <div class="filter-slider">
                    <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                </div>
                
                <div class="position-filter">
                    <table class="filter-table">
                        <tr>
                            <td>
                                <div class="input-icon">
                                    <input min=@selFrom max="100000" type="number" class="form-control" value="@selFrom" id="min_price" />
                                    <i>$</i>
                                </div>
                            </td>
                            <td style="  text-align: center;">
                                <small>to </small>
                            </td>
                            <td>
                                <div class="input-icon">
                                    <input min=@from max="100000" type="number" class="form-control" value="@selTo" oninput="validity.valid||(value='@from');" id="max_price" />
                                    <i>$</i>
                                </div>
                            </td>
                            <td class="center">
                                <button class="btn btn-default" id="btn-filter-price" style="height:34px"><i class="fa fa-arrow-right"></i></button>
                            </td>
                        </tr>
                    </table>

                    <div class="remove-filter" style="margin-top:30px;">
                    <a id="btn-filter-price" href="@prmodel.FilterUrl">Filter <i class="fa fa-filter"></i></a>
                </div>
                </div>
                
            </div>
        </div>
        *@
        </div>
    </div>
}

@*Slider *@
<script>
    var path = window.location.pathname;
    var removeUrl = document.getElementById("remove-url");


    function removeUrlM() {
        if (path.toLowerCase() == pathnamesearch.toLowerCase()) {
       
            est = qs["q"];
            var adv = "true";
            var sid = "true";
            var isc = "true";
            var cid = "0";
            var vid = "0";
            var mid = "0";
            var n = '';
            n = "&adv=" + adv + "&sid=" + sid+"&mid=" + mid + "&cid=" + cid + "&vid=" + vid + "&isc=" + isc + "&orderby=0";

            location.href = "/Search?q=" + est + n;
        } else {
            location.href = path;
        }
    }

</script>

