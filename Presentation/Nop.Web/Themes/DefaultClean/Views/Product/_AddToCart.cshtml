@model ProductDetailsModel.AddToCartModel

@using Nop.Core.Domain.Orders;
@if (Model.UpdatedShoppingCartItemId > 0)
{
    <input asp-for="UpdatedShoppingCartItemId" type="hidden" />
}
@{
    var IncrementQuantity = 1;

}
@if (Model.IncrementQuantity > 1)
{
    IncrementQuantity = Model.IncrementQuantity;
}
@*<div class="row">
        <div class="col-md-12">
            <span style="font-size:small"> QUANTITY: </span>
        </div>
        <div class="col-md-2">
            <a class="decrease-quantity" onclick="DecreaseQuantity('@Html.IdFor(model => model.EnteredQuantity)');"><i class="fa fa-minus" aria-hidden="true"></i></a>
        </div>
        <div class="col-md-2">
            <input asp-for="EnteredQuantity" class="qty-input form-control " type="text" aria-label=@T("Products.Qty.AriaLabel") />
        </div>
        <div class="col-md-2">
            <a class="increase-quantity" onclick="IncreaseQuantity('@Html.IdFor(model => model.EnteredQuantity)');"><i class="fa fa-plus" aria-hidden="true"></i></a>
        </div>
    </div>
    <br />*@

@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
    <div class="add-to-cart">
        @if (Model.CustomerEntersPrice)
        {
            <div class="customer-entered-price">
                <div class="price-input">
                    <label asp-for="CustomerEnteredPrice" asp-postfix=":" class="enter-price-label"></label>
                    @*round price*@
                    <input asp-for="CustomerEnteredPrice" maxlength="4" value="@Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice))" class="enter-price-input form-control" />
                </div>
                <div class="price-range alert alert-info">
                    @Model.CustomerEnteredPriceRange
                </div>
            </div>
        }
        @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
        {
            @*<div class="min-qty-notification alert alert-info">@Model.MinimumQuantityNotification</div>*@
        }
        @if (!Model.DisableBuyButton)
        {
            <div class="add-to-cart-panel  d-flex my-auto">
                @*<label asp-for="EnteredQuantity" asp-postfix=":" class="qty-label"></label>*@

                <div class="quantitySelector productQuantitySelector" data-behavior="quantitySelector" data-max-amount="10" style="width: 100%;">
                    @*<div class="quantitySelectorLabel">@T("ShoppingCart.Quantity")</div>*@
                    <div class="quantitySelectorButtons ml-2">
                        <div class="row">
                            @if (!Model.OutStock)
                            {
                                if (Model.AllowedQuantities.Count > 0)
                                {

                                }
                                else
                                {
                                    <div class="col-4 col-md-3 col-lg-3 col-xl-3  d-flex text-center p-0">
                                        <button class="ButtonsaddToCart ButtonsaddToCartMinus my-auto mx-auto" type="button" aria-label="De Increase by one" onclick="decrementProductDetail(@IncrementQuantity)">
                                            <img src="~/Themes/DefaultClean/Content/images/minus.svg"  class="img-btn-qty"/>
                                            @*<div class="svgIcon svgIconMinus quantitySelectorIcon" aria-hidden="true">
                        <i class="fa fa-minus" aria-hidden="true"></i></div>*@
                                        </button>
                                    </div>

                                }
                            }
                            else
                            {
                                <div class="col-4 col-md-3 col-lg-3 col-xl-3  d-flex text-center p-0" style="opacity: 0.5;">
                                    <button class="ButtonsaddToCart ButtonsaddToCartMinus my-auto mx-auto" type="button" aria-label="De Increase by one" >
                                        <img src="~/Themes/DefaultClean/Content/images/minus.svg"  class="img-btn-qty"/>
                                    </button>
                                </div>
                                <!--
                                <div class="col-4 col-md-3 col-lg-3 col-xl-3  d-flex text-center p-0">
                                    <div style="opacity:0.5" class="ButtonsaddToCart ButtonsaddToCartMinus my-auto mx-auto" aria-label="De Increase by one">
                                        <img src="~/Themes/DefaultClean/Content/images/minus.svg" />
                                    </div>
                                </div>
                                -->
                            }


                            <div class="col-4 col-md-6 col-lg-6 col-xl-6 d-flex text-center p-0">
                                @if (Model.AllowedQuantities.Count > 0)
                                {
                                    <select asp-for="EnteredQuantity" asp-items="Model.AllowedQuantities" class="AllowedQuantities" onchange="incrementProductDetailInfo()"></select>


                                }
                                else
                                {
                                    if (Model.IncrementQuantity > 1)
                                    {
                                        <input asp-for="EnteredQuantity" pattern="[0-9]" maxlength="5" class="form-control qty-input_quick input-qty-mobile" type="text" style="float:left;text-align:center;background:#fff" onchange="ValidateQty(this.value)" />

                                    }
                                    else
                                    {
                                        <input asp-for="EnteredQuantity" pattern="[0-9]" maxlength="5" class="form-control qty-input_quick" type="text" style="float:left;text-align:center;background:#fff" />

                                    }
                                }
                            </div>
                            @if (!Model.OutStock)
                            {

                                if (Model.AllowedQuantities.Count > 0)
                                {

                                }
                                else
                                {

                                    <div class="col-4 col-md-3 col-lg-3 col-xl-3 text-center d-flex p-0">
                                        <button class="ButtonsaddToCart ButtonsaddToCartMore my-auto mx-auto" onclick="incrementProductDetail(@IncrementQuantity)" type="button" aria-label="Decrease by one">
                                            <img src="~/Themes/DefaultClean/Content/images/more.svg" class="img-btn-qty"/>
                                        </button>
                                    </div>
                                }




                            }
                            else
                            {
                                <div class="col-4 col-md-3 col-lg-3 col-xl-3 text-center d-flex p-0" style="opacity: 0.5;">
                                    <button class="ButtonsaddToCart ButtonsaddToCartMore my-auto mx-auto" type="button" aria-label="Decrease by one">
                                        <img src="~/Themes/DefaultClean/Content/images/more.svg" class="img-btn-qty"/>
                                    </button>
                                </div>
                                <!--
                                <div class="col-4 col-md-3 col-lg-3 col-xl-3 text-center d-flex p-0">
                                    <div style="opacity:0.5" class="ButtonsaddToCart ButtonsaddToCartMore my-auto mx-auto" aria-label="Decrease by one">
                                        <img src="~/Themes/DefaultClean/Content/images/more.svg" />
                                    </div>
                                </div>
                                -->
                            }
                        </div>
                        @*<button class="decrease-quantity" type="button" aria-label="Increase by one" disabled="">
                                <div class="svgIcon svgIconMinus quantitySelectorIcon" aria-hidden="true" onclick="decrementProductDetail()">
                                    <i class="fa fa-minus" aria-hidden="true"></i>

                                </div>
                            </button>
                            <span class="quantitySelectorAmount" aria-live="polite">1</span>
                            <button class="increase-quantity" onclick="incrementProductDetail()" type="button" aria-label="Decrease by one">
                                <div class="svgIcon svgIconPlus quantitySelectorIcon" aria-hidden="true">
                                    <i class="fa fa-plus" aria-hidden="true"></i>
                                </div>
                            </button>*@
                    </div>
                </div>


                @*@if (Model.AllowedQuantities.Count > 0)
                    {
                        <select asp-for="EnteredQuantity" asp-items="Model.AllowedQuantities" class="qty-dropdown"></select>
                    }else{}*@
                @*else
                    {

                    <script asp-location="Footer">
                                    //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                                    $(document).ready(function() {
                                        $("#@Html.IdFor(model => model.EnteredQuantity)").on("keydown", function(event) {
                                            if (event.keyCode == 13) {
                                                $("#add-to-cart-button-@Model.ProductId").trigger("click");
                                                return false;
                                            }
                                        });
                                    });
                    </script>
                    }*@

                <br />
                @{ var addToCartText = "";
                    if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                    {
                        addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                    }
                    else
                    {
                        addToCartText = T("ShoppingCart.AddToCart").Text;
                        if (Model.IsRental)
                        {
                            addToCartText = T("ShoppingCart.Rent").Text;
                        }
                        if (Model.AvailableForPreOrder)
                        {
                            addToCartText = T("ShoppingCart.PreOrder").Text;
                        }
                    }
                    @*<input type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl(" AddProductToCart-Details", new {productId=Model.ProductId, shoppingCartTypeId=(int) ShoppingCartType.ShoppingCart})', '#product-details-form' );return false;" /> *@
                }
            </div>
            if (!string.IsNullOrEmpty(Model.PreOrderAvailabilityStartDateTimeUserTime))
            {
                <div class="pre-order-availability-date">
                    <label>@T("ShoppingCart.PreOrderAvailability"):</label>
                    @Html.Raw(Model.PreOrderAvailabilityStartDateTimeUserTime)
                </div>}
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAddInfo, additionalData = Model })
    </div> }

@*<div class="add-to-cart-panel">
        <div class="form-group row">
            <div class="quan col-md-12">
                <label asp-for="EnteredQuantity" asp-postfix=":" class="qty-label"></label>
                @if (Model.AllowedQuantities.Count > 0)
                {
                <div>
                    <select asp-for="EnteredQuantity" asp-items="Model.AllowedQuantities" id="product_enteredQuantity_@Model.ProductId" class="qty-dropdown" aria-label=@T("Products.Qty.AriaLabel")></select>
                    <script asp-location="Footer">
                            $(document).ready(function () {
                                $("#product_enteredQuantity_@Model.ProductId").on("change", function () {
                                    var data = {
                                        productId: @Model.ProductId,
                                        quantity: $('#product_enteredQuantity_@Model.ProductId').find(":selected").text()
                                    };
                                    $(document).trigger({ type: "product_quantity_changed", changedData: data });
                                });
                            });
                    </script>
                </div>
                }
                else
                {

                <script asp-location="Footer">
                    //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                    $(document).ready(function() {
                        $("#@Html.IdFor(model => model.EnteredQuantity)").on("keydown", function(event) {
                            if (event.keyCode == 13) {
                                $("#add-to-cart-button-@Model.ProductId").trigger("click");
                                return false;
                            }
                        });

                        $("#product_enteredQuantity_@Model.ProductId").on("input propertychange paste", function () {
                            var data = {
                                productId: @Model.ProductId,
                                quantity: $('#product_enteredQuantity_@Model.ProductId').val()
                            };
                            $(document).trigger({ type: "product_quantity_changed", changedData: data });
                        });
                    });
                </script>
                }
            </div>
            @{
            var addToCartText = "";
            if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
            {
            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
            }
            else
            {
            addToCartText = T("ShoppingCart.AddToCart").Text;
            if (Model.IsRental)
            {
            addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.AvailableForPreOrder)
            {
            addToCartText = T("ShoppingCart.PreOrder").Text;
            }
            }

            <div class="product-add-button col-md-6">
                <input type="button" id="add-to-cart-button-@Model.ProductId" class=" btn btn-primary add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl(" AddProductToCart-Details", new { productId=Model.ProductId, shoppingCartTypeId=(int)ShoppingCartType.ShoppingCart })', '#product-details-form' );return false;" />
            </div>

            }
        </div>
        @if (!string.IsNullOrEmpty(Model.PreOrderAvailabilityStartDateTimeUserTime))
        {
        <div class="pre-order-availability-date">
            <label>@T("ShoppingCart.PreOrderAvailability"):</label>
            @Html.Raw(Model.PreOrderAvailabilityStartDateTimeUserTime)
        </div>
        }
    </div>*@
<!--}
@*await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAddInfo, additionalData = Model })*@
        </div>
    }-->



@{ if (Model.IncrementQuantity > 0)
    {
    <script>
            function incrementProductDetail(IncrementQty) {
                var value = $(".qty-input_quick").val();

                if (value > 0) {
                    var newValue = parseInt(value) + IncrementQty;
                    $(".quantitySelectorAmountInput").html(newValue);
                    $(".qty-input_quick").val(newValue);

                    //if (newValue == 1 || newValue == 3)
                    //    $(".quantitySelectorAmountInput").css("opacity", "0.5");
                }
            }

            function decrementProductDetail(IncrementQty) {
                var value = $(".qty-input_quick").val();

                if (value > 0) {
                    var newValue = parseInt(value) - IncrementQty;

                    if (newValue >= IncrementQty) {
                        $(".quantitySelectorAmountInput").html(newValue);
                        $(".qty-input_quick").val(newValue);
                    }

                    //if (newValue == 1 || newValue == 3)
                    //    $(".quantitySelectorAmountInput").css("opacity", "0.5");
                }
            }

            function ValidateQty(value) {
                var value2 = $(".qty-input_quick").val();

                var numero = value/@IncrementQuantity;
                if (Number.isInteger(numero)) {
                   // $("#addtocart").prop('disabled', false);
                } else {
                    //alert('@Model.quantityMessage @IncrementQuantity');

                    $(".qty-input_quick").val(@IncrementQuantity);

                    //$("#addtocart").prop('disabled', true);
                }

            }
    </script>

    }
    else
    {
        <script>

            function incrementProductDetail(IncrementQty) {
                var value = $(".qty-input_quick").val();

                if (value > 0) {
                    var newValue = parseInt(value) + IncrementQty;
                    $(".quantitySelectorAmountInput").html(newValue);
                    $(".qty-input_quick").val(newValue);

                    //if (newValue == 1 || newValue == 3)
                    //    $(".quantitySelectorAmountInput").css("opacity", "0.5");
                }
            }

            function decrementProductDetail(IncrementQty) {
                var value = $(".qty-input_quick").val();
                //alert(value)
                if (value > 0) {
                    var newValue = parseInt(value) - IncrementQty;
                    //alert(newValue)
                    if (newValue >= 1) {
                        $(".quantitySelectorAmountInput").html(newValue);
                        $(".qty-input_quick").val(newValue);
                    }

                    //if (newValue == 1 || newValue == 3)
                    //    $(".quantitySelectorAmountInput").css("opacity", "0.5");
                }
            }

            function ValidateQty(value) {
                var value2 = $(".qty-input_quick").val();


            }
        </script>

    }
}
