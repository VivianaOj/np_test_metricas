@model CustomerOrderListModel
@{ Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);

    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");

    string ordersByPay = "";
}
@section left
{
    <script>
        function RemoveLeftDiv() {
            $('#divContainerRealFilters').addClass('d-none');
            $('#rowCatalogsSelectorFilter').addClass('d-none');

            $('#divContainerRealContainer').removeClass('col-lg-9');
            $('#divContainerRealContainer').addClass('col-lg-12');
        }

    </script>

    @*@await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Orders })*@
}

@*
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@200;500;700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Lato&family=Raleway:wght@200;500;700&display=swap" rel="stylesheet">
*@
<style>
    .select_arrow {
        pointer-events: initial;
    }

    .choices__inner {
        background-color: #ECEFF1 !important;
        border: 1px solid #ECEFF1 !important;
    }

    .choices__list--multiple .choices__item {
        background-color: #E44436 !important;
    }

    @@media (max-width: 800px) {

        #masterwrapperdiv .row {
            margin: 0px !important;
        }

        #masterwrapperdiv .div-order-mobile .sub-div-order-mobile {
            padding: 0px !important;
        }

        .title-other-sections-version-mobile {
            background-color: #eee;
        }

            .title-other-sections-version-mobile .page_title {
                padding: 5px !important;
                margin: 0px !important;
            }

                .title-other-sections-version-mobile .page_title h1 {
                    padding: 15px !important;
                }

        .btn-order-zone-desktop {
            background-color: #37AEF3;
            color: #FFF;
            padding: 5px;
            border-radius: 15px !important;
            width: 200px;
            display: block;
            border: 1px solid #FFF;
        }

        .orders-version-mobile-table {
            padding-bottom: 50px !important;
        }
    }

    #choices-multiple-remove-button{
        display: none;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">
<script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>
<script>
    function submitEvent() {
        document.customerOrderForm.submit();
    }

</script>
<div class="row ">
    <div class="wop col-12 col-lg-12 padding-breadcrumb-general-mobile  title-other-sections-version-mobile">
        <div class="page_title">
            <h1>@T("account.customerInvoice")</h1>
        </div>
    </div>
</div>
<div class="row">
    <div class="wop col-12 col-lg-12">

        <div class="row">
            <table id="table-title-myinvoices">
                <tr>
                    @if (!Model.IsGuest && Model.ChildList.Count() > 0)
                    {
                    <td >
                        @using (Html.BeginForm("OrderListToPay", "Order", FormMethod.Post, new { id = "OrderListForm", name = "OrderListForm", style = "width: 100%" }))
                            {
                        @Html.AntiForgeryToken()
                        @if (Model.Orders.Count > 0)
                                {
                                    foreach (var order in Model.Orders)
                                    {
                                        if (order.PaymentStatus == "Pending")
                                        {
                                            <div class="col-lg-12">
                                                <center>
                                                    <button class="btn-order-zone-desktop">
                                                        Pay Orders
                                                    </button>
                                                </center>
                                            </div>
                                            break;
                                        }
                                    }

                                    foreach (var order in Model.Orders)
                                    {
                                        if (order.PaymentStatus == "Pending")
                                        {
                                            ordersByPay += order.Id + ",";
                                        }
                                    }
                                    ordersByPay = ordersByPay.TrimEnd(',');
                                }
                        <input type="hidden" id="orderByPay" name="orderByPay" value="@ordersByPay" />
                            }

                    </td>
                    }
                    <td>
                        @using (Html.BeginForm("InvoiceListToPay", "Order", FormMethod.Post, new { id = "InvoiceListForm", name = "InvoiceListForm", style = "width: 100%" }))
                    {
                        @if (Model.InvoiceList.Count > 0)
                        {
                            if (Model.AccountCustomer)
                            {
                                <div class="col-12 col-lg-12">
                                    <center>
                                        <button class="btn-order-zone-desktop">
                                            Pay Invoices
                                        </button>
                                    </center>
                                </div>
                            }
                        }
                        else
                        {

                        }
                    }
                    </td>
                </tr>
            </table>


        </div>

        @using (Html.BeginForm("invoice", "order", FormMethod.Post, new { id = "customerOrderForm", name = "customerOrderForm" }))
        {
    <div class="row page-sort">
        @if (Model.ChildList.Count() == 0)
        {
            <div class="col-md-3"></div>}
    <div class="col-md-3 text-left">
    </div>
            <div class="col-md-3 text-left">
                <label class="p-3">&nbsp;&nbsp; @T("customer.orders.filter.payment")</label><br />
                <div class="form-sort">
                    @Html.DropDownListFor(m => m.OrdersFilter.PaymentStatus, Model.PaymentStatusList, new { onchange = "submitEvent()" })

                </div>
            </div>
            @*<div class="col-md-3 text-left">
                <label class="p-3">&nbsp;&nbsp; @T("customer.invoice.filter.status")</label><br />
                <div class="form-sort">
                    @Html.DropDownListFor(m => m.OrdersFilter.OrderStatus, Model.OrderStatusList, new { onchange = "submitEvent()" })

                </div>
            </div>*@
            <div class="col-md-3 text-left">
                <label class="p-3">&nbsp;&nbsp; @T("customer.invoice.filter.order")</label><br />
                <div class="form-sort">
                    @Html.TextBoxFor(m => m.OrdersFilter.CustomOrderNumber, new { placeholder = "000000000000" })
                    <div class="select_arrow" onclick="submitEvent()"><i class="nn- nn-search arrow-sort"></i></div>

                </div>
            </div>
            @if (Model.ChildList.Count() > 0)
            {

                <div class="col-md-3 text-left">
                    <label class="p-3">&nbsp;&nbsp; @T("customer.orders.filter.location")</label><br />
                    <div class="form-sort">

                        <select id="choices-multiple-remove-button" name="OrdersFilter.CompanyId" placeholder="@T("customer.orders.filter.selectcompanies")" multiple>
                            @foreach (var item in Model.ChildList)
                            {
                                if (@item.Text != "")
                                {
                                    <option value='@item.Value'>@item.Text</option>
                                }
                            }
                        </select>

                        @Html.DropDownListFor(m => m.OrdersFilter.CompanyId, Model.ChildList, new { onchange = "submitEvent()" })
                    </div>
                </div>
            }
            <br />
        </div>

        <div class="row invoiceList">
            <div class="col-lg-12">
                @if (Model.InvoiceList.Count > 0)
                {
                    if (Model.AccountCustomer)
                    {
                        @await Html.PartialAsync("_OrderAccountCustomer", Model)
                    }
                }
                else
                {
                    <div class="no-data" style="text-align:center;margin-top:90px;">
                        @T("Account.CustomerOrders.NoInvoices")
                    </div>
                }
            </div>
        </div>
        }
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {

        if (typeof (RemoveLeftDiv) != 'undefined')
            RemoveLeftDiv();

        $("form").keypress(function (e) {
            if (e.which == 13) {
                return false;
            }
        });
    });
</script>
@*
    <script>
        $(document).ready(function () {
            var multipleCancelButton = new Choices('#choices-multiple-remove-button', {
                removeItemButton: true
            });
        });
    </script>
*@




<style>
    @@media (max-width: 800px) {
        #table-title-myinvoices{
            width: 100%;
            margin-top: 60px;
        }
    }
</style>