@using Nop.Core.Domain.Orders
@model OrderPaymentModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);

    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");

    decimal orderTotal = 0;

    int creditMemoQuantity = 0;
    int creditDepositeQuantity = 0;
    int creditPaymentQuantity = 0;

    List<string> creditCardList = new List<string>();

}

<style>
    .container-btn {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        .container-btn input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        border-radius: 0px !important;
        background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .container-btn:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .container-btn input:checked ~ .checkmark {
        background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Show the checkmark when checked */
    .container-btn input:checked ~ .checkmark:after {
        display: block;
    }

    /* Style the checkmark/indicator */
    .container-btn .checkmark:after {
        left: 9px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }

    .check-option-select-unchecked {
        width: 1.3em;
        height: 1.3em;
        background-color: white;
        border-radius: 50%;
        vertical-align: middle;
        border: 1px solid #ddd;
        -webkit-appearance: none;
        outline: none;
        cursor: pointer;
    }

    .check-option-select-checked {
        width: 1.3em;
        height: 1.3em;
        background-color: deepskyblue;
        border-radius: 50%;
        vertical-align: middle;
        border: 1px solid #ddd;
        -webkit-appearance: none;
        outline: none;
        cursor: pointer;
    }

    .more-details{
        cursor:pointer;
    }

    .content-discount {
        padding-left: 35px;
        margin-bottom: 10px;
    }
</style>


<div class="row d-flex justify-content-center">
    <div class="col-sm-11 col-md-11 col-lg-11 mt-5">
        <div class="row justify-content-center">
            <div class="col-lg-6">
                <div class="page-title">
                    <h1>@T("Checkout.PaymentInfo")</h1>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-lg-11">
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoTop })
                <div class="section payment-info">
                    <div style="width: 100%">
                        <div id="myid"></div>
                        <div id="myidfecha"></div>
                        <div id="myidcvc"></div>
                    </div>




                    <form asp-route="RetryPaymentInfo" method="post" name="paymentMethod" class=" paymentMethod " onsubmit='return validateCardNumber()'>
                        <input type="hidden" id="objectJson" name="objectJson" value="@Model.objectJson" />
                        <input id="creditcardnumber" name="creditcardnumber" type="hidden" value="0"/>
                        <div>
                            <div class="design1div_left">

                            </div>
                        </div>
                        <div class="design1div_rigth">


                            <div class="row justify-content-center">
                                <div class="col-lg-6">
                                    <div class="row">


                                        <style>
                                            .second-level-nn {
                                                margin-left: 20px;
                                            }

                                            .show-hide-div {
                                                cursor: pointer;
                                                text-transform: uppercase;
                                                color: red;
                                                font-size: 10px;
                                                margin-left: 15px;
                                                margin-bottom: 20px;
                                            }
                                        </style>

                                        <div class="col-md-12 input-customer">
                                            <input value="0" id="discountApply" name="discountApply" type="hidden" />
                                            <input value="0" id="creditCardApply" name="creditCardApply" type="hidden" />
                                            <input value="0" id="allCredit" name="allCredit" type="hidden" />
                                            <input value="" id="listType" name="listType" type="hidden" />
                                            <div></div>
                                            @{
                                                var totalCredits = Model.applyaccountcreditCreditMemo + Model.applyaccountcreditDeposite + Model.applyaccountcreditPayment;


                                            }
                                            @if (totalCredits > 0)
                                            {
                                                <input class="check-option-select-unchecked" type="checkbox" name="ApplyAllCredit" id="ApplyAllCredit" value="" onclick="markAllCredits(); isChecked('ApplyAllCredit');" />
                                                @T("ApplyCredits") <span style=" color: #37AEF3;font-weight: 900; " class="text-Lato">$@totalCredits.ToString("N2")</span>
                                                <div class="show-hide-div" id="hideDivCredits" onclick="hideDivCredits();" style="position: relative;right: 14px;">Hide Details</div>
                                                <div class="show-hide-div" id="showDivCredits" onclick="showDivCredits();" style="position: relative;right: 14px; display: none;">Show Details</div>
                                                <div></div>
                                            }


                                            <div class="row">
                                                <div class="col-12 second-level-nn">
                                                    @if (Model.applyaccountcreditCreditMemo > 0)
                                                    {
                                                        <input value="@Model.applyaccountcreditCreditMemo" id="creditmemo" name="creditmemo" type="hidden" />
                                                        <input value="" id="creditMemoValue" name="creditMemoValue" type="hidden" />
                                                        <input value="" id="listTypeMemo" name="listTypeMemo" type="text" />
                                                        <div class="row">
                                                            <div class="col-12">
                                                                <input class="check-option-select-unchecked" type="checkbox" name="ApplyAccountCreditMemo" id="ApplyAccountCreditMemo" value="ApplyAccountCreditMemo" onclick="calculateDiscount('ApplyAccountCreditMemo'); isChecked('ApplyAccountCreditMemo');" />
                                                                <input id="totalItemCreditMemo" name="totalItemCreditMemo" type="hidden" value="0" />
                                                                @T("Order.ApplyAccountCreditMemo") <span style=" color: #37AEF3;font-weight: 900; vertical-align:bottom" class="text-Lato">$@Model.applyaccountcreditCreditMemo.ToString("N2")  </span>
                                                                <a href="javascript:;" style="float: right; margin-top: -34px;"></a>
                                                            </div>
                                                            <div class="show-hide-div" id="hideDivCreditMemo" onclick="hideDivCreditMemo();" style=" display: none;">Hide Details</div>
                                                            <div class="show-hide-div" id="showDivCreditMemo" onclick="showDivCreditMemo();">Show Details</div>
                                                            <div class="col-12 content-discount" id="detailCreditMemo" style="display:none;">
                                                                <div class="row">
                                                                    @foreach (var item in Model.CreditMemos)
                                                                    {
                                                                        int i = item.Id;
                                                                        decimal AccountCredit = item.AccountCredit - item.TotalApply;
                                                                        <div class="col-12 text-Lato">
                                                                            <input class="check-option-select-unchecked" id="checkItemCreditMemo_@i" name="checkItemCreditMemo_@i" type="checkbox" onclick="operationsCreditMemo('checkItemCreditMemo_@i'); isChecked('checkItemCreditMemo_@i');" />
                                                                            <input id="itemCreditMemo_@i" name="itemCreditMemo_@i" type="hidden" value="@AccountCredit" />
                                                                            @item.Transid - $@AccountCredit
                                                                        </div>
                                                                        creditMemoQuantity++;
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }

                                                    @if (Model.applyaccountcreditPayment > 0)
                                                    {
                                                        <input value="@Model.applyaccountcreditPayment" id="CustomerPayment" name="CustomerPayment" type="hidden" />
                                                        <input value="" id="creditPaymentValue" name="creditPaymentValue" type="hidden" />
                                                        <input value="" id="listTypePayment" name="listTypePayment" type="text" />
                                                        <div class="row">
                                                            <div class="col-12">
                                                                <input class="check-option-select-unchecked" type="checkbox" name="ApplyAccountCustomerPayment" id="ApplyAccountCustomerPayment" value="ApplyAccountCustomerPayment" onclick="calculateDiscount('ApplyAccountCustomerPayment'); isChecked('ApplyAccountCustomerPayment');" />
                                                                <input id="totalItemCreditPayment" name="totalItemCreditPayment" type="hidden" value="0" />
                                                                @T("Order.ApplyAccountCreditPayment") <span style="        color: #37AEF3;
        font-weight: 900;
        vertical-align: bottom
">$@Model.applyaccountcreditPayment.ToString("N2")</span>
                                                        <a href="javascript:;" style="float: right; margin-top: -34px;"></a>
                                                        </div>

                                                        <div class="show-hide-div" id="hideDivCustomerPayment" onclick="hideDivCustomerPayment();" style=" display: none;">Hide Details</div>
                                                        <div class="show-hide-div" id="showDivCustomerPayment" onclick="showDivCustomerPayment();">Show Details</div>
                                                        <div class="col-12 content-discount" id="detailCreditPayment" style="display:none;">
                                                            <div class="row">
                                                                @foreach (var item in Model.CustomerPayments)
                                                                {
                                                                    int i = item.Id;
                                                                    decimal AccountCredit = item.AccountCredit - item.TotalApply;
                                                                    if (AccountCredit > 0)
                                                                    {
                                                                        <div class="col-12 text-Lato">
                                                                            <input class="check-option-select-unchecked" id="checkItemCreditPayment_@i" name="checkItemCreditPayment_@i" type="checkbox" onclick="operationsCreditPayment('checkItemCreditPayment_@i'); isChecked('checkItemCreditPayment_@i');" />
                                                                            <input id="itemCreditPayment_@i" name="itemCreditPayment_@i" type="hidden" value="@AccountCredit" />
                                                                            @item.Transid - $@AccountCredit
                                                                        </div>
                                                                        creditPaymentQuantity++;
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>


                                        </div>
                                        <div class="col-lg-12">
                                            @if (Model.CheckoutPaymentInfoModel.PaymentsCards?.profile != null)
                                            {
                                                if (Model.CheckoutPaymentInfoModel.PaymentsCards.profile.paymentProfiles != null)
                                                {
                                                    @foreach (var item in Model.CheckoutPaymentInfoModel.PaymentsCards.profile.paymentProfiles)
                                                    {
                                                        var expirationDate = item.payment.creditCard.expirationDate;
                                                        var isExpired = false;
                                                        if (expirationDate != "XXXX")
                                                        {
                                                            var expD = expirationDate.Split('-');
                                                            if (expD[0] != null && expD[1] != null)
                                                            {
                                                                var year = Convert.ToInt32(expD[0]);
                                                                var month = Convert.ToInt32(expD[1]);

                                                                if (year < DateTime.Now.Year)
                                                                {
                                                                    isExpired = true;
                                                                }


                                                                if (year < DateTime.Now.Year && month < DateTime.Now.Day)
                                                                {
                                                                    isExpired = true;
                                                                }
                                                            }
                                                        }

                                                        <div class="col-md-6 input-customer">
                                                            <div class="form-control pay-target">
                                                                <div class="row">
                                                                    <div class="col-auto d-flex">
                                                                        @if (isExpired)
                                                                        {

                                                                        }
                                                                        else
                                                                        {
                                                                            creditCardList.Add(item.customerPaymentProfileId);
                                                                            <input id="@item.customerPaymentProfileId" type="checkbox" name="group1[]" class="infoCreditCard my-auto" value="@item.customerPaymentProfileId" style="float: left;" onclick="addCreditCardNumber('@item.customerPaymentProfileId');" />
                                                                        }

                                                                    </div>
                                                                    <div class="col-auto d-flex p-0">
                                                                        <div class="my-auto" style="float: initial; text-align: left; margin-left: 3px;">@item.payment.creditCard.cardType - @item.payment.creditCard.cardNumber</div>
                                                                        @if (isExpired)
                                                                        {
                                                                            <div style=" font-style: normal; font-weight: normal; font-size: 12px; line-height: 1.023rem; color: #e44436; margin: auto; margin-left: 6px;">@T("expirationDate.cc")</div>
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="col-md-6 input-customer">
                                                        <p style="float: initial; margin-left: 8%;">No credit cards have been loaded</p>
                                                    </div>
                                                }
                                            }
                                        </div>
                                        <div class="col-lg-12">
                                            <div class="form-control pay-target">
                                                <div class="row">

                                                    <div class="col-auto d-flex credit-card-div">

                                                        <input type="checkbox" name="group1[]" class="my-auto" id="AddNewCard" value="AddNewCard" style="float: left;" onclick="calculateDiscount();" />
                                                    </div>
                                                    <div class="col-auto d-flex p-0">
                                                        <p class="my-auto" style="float: initial;">Add new card</p>
                                                        <a href="javascript:;" style="float: right; margin-top: -34px;"></a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div asp-validation-summary="ModelOnly" class="message-error"></div>
                                            <div class="info displayNone paywithcard" style="display: none;">
                                                <div class="row justify-content-center">
                                                    <div class="col-12 text-center">
                                                        @await Component.InvokeAsync(Model.CheckoutPaymentInfoModel.PaymentViewComponentName)
                                                        @if (!Model.CheckoutPaymentInfoModel.IsGuest)
                                                        {
                                                            @*<div class="row justify-content-center text-payment-info mt-3">
                                                                    <div class="col-lg-12">
                                                                        <div class="row shippingoptionSaveCard displayNone">
                                                                            <div class="col-auto d-flex">
                                                                                <label class="my-auto">Save for future payments </label>
                                                                                <input type="checkbox" name="shippingoptionSaveCard" class="my-auto" />
                                                                            </div>
                                                                            <div class="col-auto d-flex p-0">

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>*@


                                                            <div class="info zone-creditcard-myaccount">
                                                                <label class="row div-zone-creditcard-myaccount-mobile">@T("myaccount.SavedBillingAddress")
                                                                <div class="col-12" style="padding: 0px !important;">
                                                                    <select onchange="validateStateEmpety(this)" id="AddressIdSelected" name="AddressIdSelected" class="SelectBillingAddress" data-trigger="state-select" style=" width: 100%;">
                                                                        @foreach (var item in Model.CustomerPaymentInfoModel.BillingAddresList)
                                                                        {
                                                                            if (item != null && item.Address1!=null)
                                                                            {
                                                                                <option value="@item.Address1- @item.City- @item.StateProvince.Id- @item.ZipPostalCode- @item.Country.Id- @item.Id">@item.Address1,  @item.City, @item.StateProvince.Abbreviation, @item.ZipPostalCode, @item.Country.Name</option>

                                                                            }
                                                                        }
                                                                    </select>
                                                                </div>
                                                                <br /><br /><br />
                                                                <div class="col-12" style="padding: 0px !important; text-align: left; margin: 10px 0px;">
                                                                    <input type="checkbox" name="AddNewAddress" id="AddNewAddress" />
                                                                    <label class="text-label-addnewbillingaddress">@T("myaccount.AddNewBillingAddress")</label>
                                                                </div>
                                                                <div class="col-12 displayNone" style="padding: 0px !important; text-align: left; margin: 10px 0px;" id="SaveAddress">
                                                                    <label for="AddressNewCreditCard">Address:</label>
                                                                    <input asp-for="@Model.CustomerPaymentInfoModel.Address1" class="form-control address-box-form-input" maxlength="100" onchange="validateFormAddAddress();" />
                                                                    <span asp-validation-for="@Model.CustomerPaymentInfoModel.Address1" id="Address1Validate"></span>
                                                                </div>
                                                                <div class="col-12 displayNone" style="padding: 0px !important; text-align: left; margin: 10px 0px;" id="SaveCity">
                                                                    <label for="CityNewCreditCard">City:</label>
                                                                    <input asp-for="@Model.CustomerPaymentInfoModel.City" class="form-control address-box-form-input" maxlength="50" onchange="validateFormAddAddress();" />
                                                                    <span asp-validation-for="@Model.CustomerPaymentInfoModel.City" id="CityValidate"></span>
                                                                </div>
                                                                <div class="col-12 displayNone" style="padding: 0px !important; text-align: left; margin: 10px 0px;" id="SaveState">
                                                                    <label for="StateNewAddress">State:</label>
                                                                    <select onchange="validateFormAddAddress();" asp-for="@Model.CustomerPaymentInfoModel.StateProvinceId" asp-items="Model.AvailableStates" class="form-control" data-trigger="state-select"></select>
                                                                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                                                    <span asp-validation-for="@Model.CustomerPaymentInfoModel.StateProvinceId" id="StateValidate"></span>
                                                                </div>
                                                                <div class="col-12 displayNone" style="padding: 0px !important; text-align: left; margin: 10px 0px;" id="SaveZipCode">
                                                                    <label for="ZipCodeNewCreditCard">Zip Code:</label>
                                                                    <input asp-for="@Model.CustomerPaymentInfoModel.ZipPostalCode" pattern="^[0-9]{5}(?:-[0-9]{4})?$" class="form-control address-box-form-input" maxlength="20" type="text" onchange="validateFormAddAddress();" />
                                                                    <span asp-validation-for="@Model.CustomerPaymentInfoModel.ZipPostalCode" id="ZipPostalCodeValidate"></span>
                                                                    <span id="ErrorAddressZipcode"></span>
                                                                    @Html.ValidationMessage("ErrorAddressZipcode")
                                                                    @if (@Model.CustomerPaymentInfoModel.ValidZipCode)
                                                                    {
                                                                        <span id="ErrorAddressZipcodeLabel" class="field-validation-error" data-valmsg-for="ErrorAddressZipcode" data-valmsg-replace="true">@T("Address.InvalidZipCode")</span>
                                                                    }
                                                                </div>
                                                                <div class="col-12 displayNone" style="padding: 0px !important; text-align: left; margin: 10px 0px;" id="SaveCountry">
                                                                    <label for="CountryNewAddress">Country:</label>
                                                                    <select onchange="validateFormAddAddress(); getCityByCountry(this.value);" asp-for="CountryId" asp-items="Model.AvailableCountries" class="form-control"
                                                                            data-trigger="country-select"
                                                                            data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                                                                            data-stateprovince="#@Html.IdFor(model => model.StateProvinceId)"
                                                                            data-loading="#states-loading-progress"></select>
                                                                    <span asp-validation-for="CountryId"></span>
                                                                </div>
                                                                <div class="col-12 displayNone" style="padding: 0px !important; text-align: left; margin: 10px 0px;" id="PhoneNumberNewAddress">
                                                                    <label for="PhoneNewCreditCard">Phone Number:</label>
                                                                    <input asp-for="@Model.CustomerPaymentInfoModel.PhoneNumber" class="form-control address-box-form-input" maxlength="50" onchange="validateFormAddAddress();" />
                                                                    <span asp-validation-for="@Model.CustomerPaymentInfoModel.PhoneNumber" id="CityValidate"></span>
                                                                </div>
                                                            </label>
                                                        </div>

                                                    }
                                                    </div>
                                                </div>
                                            </div>
                                            <div  id="MessageAddCreditCardInfo" class="displaynone MessageAddCreditCardInfo field-validation-error">@T("AddCreditCardPlease")</div>

                                        </div>
                                    </div>
                                </div>

                                @foreach (var order in Model.OrderDetailsModel)
                                {
                                    orderTotal += order.OrderTotalPayList;
                                }
                                <div class="col-lg-4">
                                    <div class="page order-details-page">
                                        <div class="page-body checkout-data">
                                            <div class="section payment-info">
                                                @foreach (var order in Model.OrderDetailsModel)
                                                {
                                                    <input type="hidden" id="Order" name="Order" value="@order.Id" />
                                                    <strong>  </strong> <span class="text-Lato">
                                                        @order.InvoiceNumber
                                                        @if (order.OrderInvoiceId != 0)
                                                        {
                                                            <span class="text-Lato">
                                                                (#
                                                                @order.OrderInvoiceId
                                                                )
                                                            </span>
                                                        }
                                                    </span>
                                                    <br />
                                                     <span> @order.company</span>
                                                    <br />
                                                    if (order.ShippingAddress.Address1 != null)
                                                    {
                                                        <p class="TitlePayLater" style="margin-top: 32px;">@T("Address")</p>
                                                        <p class="PayLater-info">@order.ShippingAddress.Address1 @order.ShippingAddress.City @order.ShippingAddress.ZipPostalCode @order.ShippingAddress.County </p>
                                                    }
                                                    <br />
                                                }
                                                <hr style="margin-bottom: 40px;"/>
                                                <table id="total-zone-payment-information">
                                                    <tr>
                                                        <td>
                                                            <p class="TitlePayLater" style=" margin-bottom: 0; ">@T("SubTotalOrder")  </p>
                                                        </td>
                                                        <td>
                                                            <input type="hidden" name="val" id="val" value="@Model.partialPayment" />
                                                            <span class="PayLater-total text-Lato">$@Model.partialPayment.ToString("N2")</span>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <p class="TitlePayLater" style=" margin-bottom: 0; "> @T("CustomerApplyCredit")  </p>
                                                        </td>
                                                        <td>
                                                            <span style="color:#37AEF3;font-weight:900; font-size:1rem;vertical-align:bottom" id="CustomerApplyCredit" class="text-Lato">$0.00</span>
                                                        </td>
                                                    </tr>

                                                    <tr>
                                                        <td>
                                                            <p class="TitlePayLater" style=" margin-bottom: 0; ">@T("TotalInvoice")   </p>
                                                        </td>
                                                        <td>
                                                            <span class="PayLater-total text-Lato" id="total-partial-payment-with-credit-card" >$@Model.partialPayment.ToString("N2")</span>

                                                            <script>
                                                                var value = @Model.partialPayment;
                                                                var formattedValue = parseFloat(value).toFixed(2);
                                                                document.getElementById("total-partial-payment-with-credit-card").innerHTML = "$" +formattedValue.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                                            </script>
                                                        </td>
                                                    </tr>
                                                </table>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-lg-12" style="color: red; text-align: center;">
                                    <span id="message-pay-outrange"></span>
                                </div>
                            </div>
                            <div class="buttons">
                                <div class="row justify-content-center mt-5">
                                    <div class="col-lg-5 text-right">
                                        <a href="/order/Invoice">
                                            <button class="button-1 new-address-next-step-button white white button-back-checkuot" type="button">
                                                Back
                                            </button>
                                        </a>
                                    </div>
                                    <div class="col-lg-5 text-left">
                                        <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="button-1 button-continue-checkuot" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutPaymentInfoBottom })
            </div>
        </div>

    </div>
</div>

<style>
    .input-customer {
        padding: 10px 0px;
    }

    .pay-target {
        margin-bottom: 10px;
    }

        .pay-target input[type="checkbox"] {
            width: 1.3em;
            height: 1.3em;
            background-color: white;
            border-radius: 50%;
            vertical-align: middle;
            border: 1px solid #ddd;
            -webkit-appearance: none;
            outline: none;
            cursor: pointer;
            margin-top: 0px;
        }

            .pay-target input[type="checkbox"]:checked {
                background-color: deepskyblue;
            }
</style>
<script>

    $('#AddNewAddress').on('click', function () {
        if ($(this).is(':checked')) {
            $("#SaveAddress").removeClass("displayNone");
            $("#SaveCity").removeClass("displayNone");
            $("#SaveState").removeClass("displayNone");
            $("#PhoneNumberNewAddress").removeClass("displayNone");
            $("#SaveZipCode").removeClass("displayNone");
            $("#SaveCountry").removeClass("displayNone");
            $("#divNewAddressMobile").removeClass("displayNone");

            $("#AddressIdSelected").prop('disabled', true);
            $(".button-continue-checkuot").addClass('disabled');

            $("#MessageAddCreditCardInfo").removeClass("displaynone");
        } else {
            $("#SaveAddress").addClass("displayNone");
            $("#SaveCity").addClass("displayNone");
            $("#SaveState").addClass("displayNone");
            $("#PhoneNumberNewAddress").addClass("displayNone");
            $("#SaveZipCode").addClass("displayNone");
            $("#SaveCountry").addClass("displayNone");
            $("#divNewAddressMobile").addClass("displayNone");

            $("#AddressIdSelected").prop('disabled', false);
            $(".button-continue-checkuot").removeClass('disabled');

            $("#MessageAddCreditCardInfo").addClass("displaynone");
        }
    });

    $('#AddNewAddressMobile').on('click', function () {
        if ($(this).is(':checked')) {
            $("#SaveAddress").removeClass("displayNone");
            $("#SaveCity").removeClass("displayNone");
            $("#SaveState").removeClass("displayNone");
            $("#SaveZipCode").removeClass("displayNone");
            $("#SaveCountry").removeClass("displayNone");
            $("#divNewAddressMobile").removeClass("displayNone");

            $("#SaveState").removeClass("displayNone");

            $("#PhoneNumberNewAddress").removeClass("displayNone");

            $("#AddressIdSelected").attr('disabled');
        } else {
            $("#SaveAddress").addClass("displayNone");
            $("#SaveCity").addClass("displayNone");
            $("#SaveState").addClass("displayNone");
            $("#SaveZipCode").addClass("displayNone");
            $("#SaveCountry").addClass("displayNone");
            $("#divNewAddressMobile").addClass("displayNone");

            $("#PhoneNumberNewAddress").addClass("displayNone");

            $("#AddressIdSelected").removeAttr('disabled');
        }
    });

    $('#customerCompany').prop('disabled', 'disabled');


    $('#AddNewCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido seleccionado
            $(".paywithcard").removeClass("displayNone");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $(".paywithcard").css("display", "block");
            $("#InfoCreditCard").html("");
            $(".shippingoptionSaveCard").removeClass("displayNone");
            $(".shippingoptionSaveCard").css("display", "");
        } else {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".shippingoptionSaveCard").css("display", "none");

        }
    });

    $('.infoCreditCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $("#CardholderName").css("border", "1px solid #ddd");
            $("#CardNumber").css("border", "1px solid #ddd");
            $("#CardCode").css("border", "1px solid #ddd");
            $("#ExpireMonth").css("border", "1px solid #ddd");
            $("#ExpireYear").css("border", "1px solid #ddd");
            $(".shippingoptionSaveCard").css("display", "none");
            $(".shippingoptionSaveCard").addClass("displayNone");

            $('#ExpireYear').css("border", "1px solid #ddd");
            $('#ExpireMonth').css("border", "1px solid #ddd");
            document.getElementById('myidfecha').innerHTML = "";

        }
    });

    var input = document.getElementById("ExpireMonth");
    input.addEventListener('change', ev => {
        if (ev.key === "Backspace" || ev.key === "Delete" || ev.key === 8 || ev.key === 46) {
            var ii;
        } else {
            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date  = new Date();

            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

                    } else {
                     //   document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                    }
                }
            }

        }

    });

    var input = document.getElementById("ExpireYear");
    input.addEventListener('change', ev => {
        if (ev.key === "Backspace" || ev.key === "Delete" || ev.key === 8 || ev.key === 46) {
            var ii;
        } else {
            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date = new Date();
            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    document.getElementById('myidfecha').innerHTML = '<div class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

                    } else {
                       // document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                    }
                }
            }

        }

    });

    $('.infoCreditCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $("#CardholderName").css("border", "1px solid #ddd");
            $("#CardNumber").css("border", "1px solid #ddd");
            $("#CardCode").css("border", "1px solid #ddd");
            $("#ExpireMonth").css("border", "1px solid #ddd");
            $("#ExpireYear").css("border", "1px solid #ddd");
            $(".shippingoptionSaveCard").css("display", "none");
            $("#myidfecha").addClass("displayNone");

            $(".message-error ").css("display", "none");
            $("#CardholderName-error").css("display", "none");
            $("#CardNameJs").css("display", "none");
            $("#CardNumberJs").css("display", "none");
            $("#DateJs").css("display", "none");
            $("#CardCodeJs").css("display", "none");
        }
    });

    $('#AddNewCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido seleccionado
            $(".paywithcard").removeClass("displayNone");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".paywithcard").css("display", "");
            $(".shippingoptionSaveCard").removeClass("displayNone");
            $(".shippingoptionSaveCard").css("display", "");
        } else {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".shippingoptionSaveCard").css("display", "none");
        }
    });

    //$(document).ready(function () {
    //    $('input[type=checkbox]').live('click', function () {
    //        var parent = $(this).parent().attr('id');
    //        $('#' + parent + ' input[type=checkbox]').removeAttr('checked');
    //        $(this).attr('checked', 'checked');
    //    });
    //});

    $('input[type="checkbox"]').on('change', function () {

        $('input[name="' + this.name + '"]').not(this).prop('checked', false);
    });




    function validateCardNumber() {
        var error = 0;
        if (document.getElementById('AddNewCard').checked) {


            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date = new Date();


            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");
                    document.getElementById('myidfecha').innerHTML = '<div class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {
                        document.getElementById('myidfecha').innerHTML = "";
                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        //document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                        error++;
                    }
                }
            }

            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date = new Date();

            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");
                    document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {
                        document.getElementById('myidfecha').innerHTML = "";
                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        //document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                        error++;
                    }
                }
            }
            var CardholderName = document.getElementById("CardholderName").value;
            if (CardholderName == "") {
                error++;
                //$('#CardNumberJs').val(@T("EntercardNumber"));

            } else {
                //  $('#CardNumberJs').val();
            }

            var CardNumber = document.getElementById("CardNumber").value;
            if (CardNumber == "") {
                error++;
                $("#CardNumberJs").css("display", "block");
                //$('#CardNumber').val(@T("EntercardNumber"));

            } else {
                $("#CardNumberJs").css("display", "none");
                // $('#CardNumber').val();
            }

            var CardCode = document.getElementById("CardCode").value;
            if (CardCode == "") {
                error++;
                $("#CardCodeJs").css("display", "block");

            } else {
                $("#CardCodeJs").css("display", "none");
            }
        } else {

        }



        if (error == 0) {
            return true;
        } else {
            return false;
        }

    }

    function checkDigit(event){
        var  str = document.getElementById(event.id).value;
        for (var i = 0; i < str.length; i++) {
            if (isNaN(str.charAt(i))) { //is not number
                    document.getElementById(event.id).value = "";
            }
        }
    }

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    function validateCardNameKey() {
        var CardholderName = document.getElementById("CardholderName").value;
        if (CardholderName == "") {
            error++;
            $("#CardNameJs").css("display", "block");

        } else {
            $("#CardNameJs").css("display", "none");
            // $('#CardNumber').val();
        }
    }

    function validateCardNumberKey() {
        var CardNumber = document.getElementById("CardNumber").value;
        if (CardNumber == "") {
            error++;
            $("#CardNumberJs").css("display", "block");


        } else {
            $("#CardNumberJs").css("display", "none");
            // $('#CardNumber').val();
        }
    }

    function validateCardCodeKey() {
        var CardCode = document.getElementById("CardCode").value;
        if (CardCode == "") {
            error++;
            $("#CardCodeJs").css("display", "block");

        } else {
            $("#CardCodeJs").css("display", "none");
        }
    }

    function validateDate() {
        var error = 0;
        var mes = document.getElementById("ExpireMonth").value;
        var annio = document.getElementById("ExpireYear").value;
        var date = new Date();

        if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {


            $("#DateJs").css("display", "none");
        } else {
            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");

                } else {


                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {
                        document.getElementById('myidfecha').innerHTML = "";
                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        //document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                        error++;
                    }
                }
            }
        }

        var mes = document.getElementById("ExpireMonth").value;
        var annio = document.getElementById("ExpireYear").value;
        var date = new Date();
        if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

            $("#DateJs").css("display", "none");
        } else {
            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");
                    document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        error++;
                    }
                }
            }

        }
    }


</script>


<script>

    $('#customerCompany').prop('disabled', 'disabled');


    $('#AddNewCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido seleccionado
            $(".paywithcard").removeClass("displayNone");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $(".paywithcard").css("display", "block");
            $("#InfoCreditCard").html("");
            $(".shippingoptionSaveCard").removeClass("displayNone");
            $(".shippingoptionSaveCard").css("display", "");
        } else {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".shippingoptionSaveCard").css("display", "none");

        }
    });

    $('.infoCreditCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $("#CardholderName").css("border", "1px solid #ddd");
            $("#CardNumber").css("border", "1px solid #ddd");
            $("#CardCode").css("border", "1px solid #ddd");
            $("#ExpireMonth").css("border", "1px solid #ddd");
            $("#ExpireYear").css("border", "1px solid #ddd");
            $(".shippingoptionSaveCard").css("display", "none");
            $(".shippingoptionSaveCard").addClass("displayNone");

            $('#ExpireYear').css("border", "1px solid #ddd");
            $('#ExpireMonth').css("border", "1px solid #ddd");
            document.getElementById('myidfecha').innerHTML = "";

        }
    });

    var input = document.getElementById("ExpireMonth");
    input.addEventListener('change', ev => {
        if (ev.key === "Backspace" || ev.key === "Delete" || ev.key === 8 || ev.key === 46) {
            var ii;
        } else {
            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date  = new Date();

            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

                    } else {
                     //   document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                    }
                }
            }

        }

    });

    var input = document.getElementById("ExpireYear");
    input.addEventListener('change', ev => {
        if (ev.key === "Backspace" || ev.key === "Delete" || ev.key === 8 || ev.key === 46) {
            var ii;
        } else {
            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date = new Date();
            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    document.getElementById('myidfecha').innerHTML = '<div class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

                    } else {
                       // document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                    }
                }
            }

        }

    });

    $('.infoCreditCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $("#CardholderName").css("border", "1px solid #ddd");
            $("#CardNumber").css("border", "1px solid #ddd");
            $("#CardCode").css("border", "1px solid #ddd");
            $("#ExpireMonth").css("border", "1px solid #ddd");
            $("#ExpireYear").css("border", "1px solid #ddd");
            $(".shippingoptionSaveCard").css("display", "none");
            $("#myidfecha").addClass("displayNone");

            $(".message-error ").css("display", "none");
            $("#CardholderName-error").css("display", "none");
            $("#CardNameJs").css("display", "none");
            $("#CardNumberJs").css("display", "none");
            $("#DateJs").css("display", "none");
            $("#CardCodeJs").css("display", "none");
        }
    });

    $('#AddNewCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido seleccionado
            $(".paywithcard").removeClass("displayNone");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".paywithcard").css("display", "");
            $(".shippingoptionSaveCard").removeClass("displayNone");
            $(".shippingoptionSaveCard").css("display", "");
        } else {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".shippingoptionSaveCard").css("display", "none");
        }
    });

    //$(document).ready(function () {
    //    $('input[type=checkbox]').live('click', function () {
    //        var parent = $(this).parent().attr('id');
    //        $('#' + parent + ' input[type=checkbox]').removeAttr('checked');
    //        $(this).attr('checked', 'checked');
    //    });
    //});

    $('input[type="checkbox"]').on('change', function () {

        $('input[name="' + this.name + '"]').not(this).prop('checked', false);
    });




    function validateCardNumber() {
        var error = 0;
        if (document.getElementById('AddNewCard').checked) {


            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date = new Date();


            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");
                    document.getElementById('myidfecha').innerHTML = '<div class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {
                        document.getElementById('myidfecha').innerHTML = "";
                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        //document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                        error++;
                    }
                }
            }

            var mes = document.getElementById("ExpireMonth").value;
            var annio = document.getElementById("ExpireYear").value;
            var date = new Date();

            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");
                    document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {
                        document.getElementById('myidfecha').innerHTML = "";
                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        //document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                        error++;
                    }
                }
            }
            var CardholderName = document.getElementById("CardholderName").value;
            if (CardholderName == "") {
                error++;
                //$('#CardNumberJs').val(@T("EntercardNumber"));

            } else {
                //  $('#CardNumberJs').val();
            }

            var CardNumber = document.getElementById("CardNumber").value;
            if (CardNumber == "") {
                error++;
                $("#CardNumberJs").css("display", "block");
                //$('#CardNumber').val(@T("EntercardNumber"));

            } else {
                $("#CardNumberJs").css("display", "none");
                // $('#CardNumber').val();
            }

            var CardCode = document.getElementById("CardCode").value;
            if (CardCode == "") {
                error++;
                $("#CardCodeJs").css("display", "block");

            } else {
                $("#CardCodeJs").css("display", "none");
            }
        } else {

        }



        if (error == 0) {
            return true;
        } else {
            return false;
        }

    }

    function checkDigit(event){
        var  str = document.getElementById(event.id).value;
        for (var i = 0; i < str.length; i++) {
            if (isNaN(str.charAt(i))) { //is not number
                    document.getElementById(event.id).value = "";
            }
        }
    }

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    function validateCardNameKey() {
        var CardholderName = document.getElementById("CardholderName").value;
        if (CardholderName == "") {
            error++;
            $("#CardNameJs").css("display", "block");

        } else {
            $("#CardNameJs").css("display", "none");
            // $('#CardNumber').val();
        }
    }

    function validateCardNumberKey() {
        var error = 0;
        var CardNumber = document.getElementById("CardNumber").value;
        if (CardNumber == "") {
            error++;
            $("#CardNumberJs").css("display", "block");


        } else {
            $("#CardNumberJs").css("display", "none");
            // $('#CardNumber').val();
        }
    }

    function validateCardCodeKey() {
        var error = 0;
        var CardCode = document.getElementById("CardCode").value;
        if (CardCode == "") {
            error++;
            $("#CardCodeJs").css("display", "block");

        } else {
            $("#CardCodeJs").css("display", "none");
        }
    }

    function validateDate() {
        var error = 0;
        var mes = document.getElementById("ExpireMonth").value;
        var annio = document.getElementById("ExpireYear").value;
        var date = new Date();

        if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {


            $("#DateJs").css("display", "none");
        } else {
            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");

                } else {


                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {
                        document.getElementById('myidfecha').innerHTML = "";
                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        //document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr">Wrong Date</div>';
                        error++;
                    }
                }
            }
        }

        var mes = document.getElementById("ExpireMonth").value;
        var annio = document.getElementById("ExpireYear").value;
        var date = new Date();
        if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

            $("#DateJs").css("display", "none");
        } else {
            if (mes.length > 0 && annio.length > 0) {
                if ((annio > date.getFullYear())) {
                    $("#DateJs").css("display", "none");
                    document.getElementById('myidfecha').innerHTML = '<div style=" margin - top: 20px; color: red;" class="attr"></div>';
                } else {

                    if ((mes >= 1) && (mes > date.getMonth()) && (annio >= date.getFullYear())) {

                        $("#DateJs").css("display", "none");
                    } else {
                        $("#DateJs").css("display", "block");
                        error++;
                    }
                }
            }

        }
    }

    var discountTotal = 0;
    var partialPayment = @Model.partialPayment;
    $("#creditCardApply").val(partialPayment);
    calculateDiscount();

    var listTypeMemo = [];
    var listTypeDeposite = [];
    var listTypePayment = [];

    function calculateDiscount(div) {
        var listType = [];

        var creditmemo = 0;
        var customerPayment = 0;

       var checked = false;
        // Disabled apply all credits if one is selected
        @if (Model.applyaccountcreditCreditMemo != 0)
        {

            foreach (var item in Model.CreditMemos)
            {
                <text>
                    if ($("#checkItemCreditMemo_" + @item.Id).prop('checked')) {
                        checked = true;
                        $("#ApplyAccountCreditMemo").prop('disabled', false);
                        $("#ApplyAccountCreditMemo").prop('checked', false);
                    }
                </text>
            }


            <text>
                if ($('#ApplyAccountCreditMemo').prop('checked') && checked == false) {
                    listType.push(1);
                    $("#creditMemoValue").val($("#creditmemo").val());
                    creditmemo = @if (Model.applyaccountcreditCreditMemo != 0) { <text> parseFloat($("#creditmemo").val()); </text> } else { <text> 0; </text> }
                } else {

                    if ($('#ApplyAccountCreditMemo').prop('checked') == false && checked == false) {
                        $("#creditMemoValue").val(0);
                    } else {
                        creditmemo = parseFloat($("#creditMemoValue").val());
                    }
                }
            </text>
        }

        
        // Disabled apply all applyaccountcreditPayment if one is selected
        @if (Model.applyaccountcreditPayment != 0)
        {
            foreach (var item in Model.CustomerPayments)
            {
                <text>
                    if ($("#checkItemCreditPayment_" + @item.Id).prop('checked')) {
                        checked = true;
                    }
                </text>
            }

            foreach (var item in Model.CustomerPayments)
            {
                <text>
                    if ($('#ApplyAccountCustomerPayment').prop('checked') && checked == false){
                        $("#checkItemCreditPayment_" + @item.Id).prop('disabled', true);
                    }
                    else {
                        $("#checkItemCreditPayment_" + @item.Id).prop('disabled', false);
                    }
                </text>
            }
            <text>
            if ($('#ApplyAccountCustomerPayment').prop('checked') && checked == false) {
                listType.push(3);
                $("#creditPaymentValue").val($("#CustomerPayment").val());
                customerPayment = @if (Model.applyaccountcreditPayment != 0) { <text> parseFloat($("#CustomerPayment").val()); </text> } else { <text> 0; </text> }
            } else {
                if ($('#ApplyAccountCustomerPayment').prop('checked') == false && checked == false) {
                    $("#creditPaymentValue").val(0);
                } else {
                    customerPayment = parseFloat($("#creditPaymentValue").val());
                }
            }
            </text>
        }


        var discountTotal = creditmemo + customerPayment;
        var payWithCreditCard = partialPayment - discountTotal;


        if (payWithCreditCard < 0) {


            $("#CustomerApplyCredit").text("$" + Number.parseFloat(partialPayment).toFixed(2));
            var totalPay = Number.parseFloat(0).toFixed(2);
            $("#total-partial-payment-with-credit-card").text("$" + totalPay);

            document.getElementById("total-partial-payment-with-credit-card").innerHTML = "$" + totalPay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

            payWithCreditCard = -1;

            $("#discountApply").val(Number.parseFloat(partialPayment).toFixed(2));
            $("#creditCardApply").val(totalPay);

        } else {
            if (payWithCreditCard != 0) {
                if ($('#AddNewCard').prop('checked')) {
                    $("#discountApply").val(discountTotal);
                    $("#creditCardApply").val(payWithCreditCard);
                    $(".button-continue-checkuot").attr("disabled", false);
                    $("#MessageAddCreditCardInfo").addClass("displaynone");
                    //$("#message-pay-outrange").text("");
                } else {
                    $("#discountApply").val(discountTotal);
                    $("#creditCardApply").val(payWithCreditCard);
                    $(".button-continue-checkuot").attr("disabled", true);
                    $("#MessageAddCreditCardInfo").removeClass("displaynone");
                }
            } else {
                $("#discountApply").val(discountTotal);
                $("#creditCardApply").val(payWithCreditCard);
                $(".button-continue-checkuot").attr("disabled", false);
                $(".paywithcard").css("display", "none");
                $("#AddNewCard").removeAttr('checked');

                $("#MessageAddCreditCardInfo").addClass("displaynone");
            }

            $("#CustomerApplyCredit").text("$" + Number.parseFloat(discountTotal).toFixed(2));
            $("#total-partial-payment-with-credit-card").text("$" + Number.parseFloat(payWithCreditCard).toFixed(2));
            var totalPay = Number.parseFloat(payWithCreditCard).toFixed(2);

            document.getElementById("total-partial-payment-with-credit-card").innerHTML = "$" + totalPay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

        }

        if (payWithCreditCard <= 0) {
            $(".pay-target").hide();
            $(".pay-target").addClass("displaynone");
            $(".button-continue-checkuot").attr("disabled", false);

            $("#MessageAddCreditCardInfo").addClass("displaynone");
            disableCheck(div);
        } else {
            if ($('#AddNewCard').prop('checked')) {
                $(".pay-target").show();
                $(".pay-target").removeClass("displaynone");
                $(".button-continue-checkuot").attr("disabled", false);

                $("#MessageAddCreditCardInfo").addClass("displaynone");
                enableCheck(div);
            } else {
                $(".pay-target").show();
                $(".pay-target").removeClass("displaynone");
                $(".button-continue-checkuot").attr("disabled", true);

                $("#MessageAddCreditCardInfo").removeClass("displaynone");

                enableCheck(div);
            }
        }

        $("#listType").val(listType);

        creditCardSelected();
    }

    var listCreditMemo = [];
    var listCreditDeposite = [];
    var listCreditoPayment = [];

    var totalValueCreditMemo = 0;
    var totalValueCreditDeposite = 0;
    var totalValueCreditPayment = 0;

    function disableCheck(div) {

        if (div != "ApplyAccountCreditMemo") {
            $("#ApplyAccountCreditMemo").attr('disabled', true);
        }
        if (div != "ApplyAllCredit") {
            $("#ApplyAllCredit").attr('disabled', true);
        }
       
        if (div != "ApplyAccountCustomerPayment") {
            $("#ApplyAccountCustomerPayment").attr('disabled', true);
        }

        @{
            foreach (var item in Model.CreditMemos)
            {
                <text>
                    if (div != "checkItemCreditMemo_" + @item.Id) {
                        $("#checkItemCreditMemo_" + @item.Id).attr('disabled', true);
                    }
                </text>
            }
            

            foreach (var item in Model.CustomerPayments)
            {
                <text>
                    if (div != "checkItemCreditPayment_" + @item.Id) {
                        $("#checkItemCreditPayment_" + @item.Id).attr('disabled', true);
                    }
                </text>
            }
        }
    }

    function enableCheck() {

        $("#ApplyAllCredit").attr('disabled', false);
        $("#ApplyAccountCreditMemo").attr('disabled', false);
        $("#ApplyAccountCustomerPayment").attr('disabled', false);

        @{
            foreach (var item in Model.CreditMemos)
            {
                <text>
                    $("#checkItemCreditMemo_" + @item.Id).attr('disabled', false);
                </text>
            }
            

            foreach (var item in Model.CustomerPayments)
            {
                <text>
                    $("#checkItemCreditPayment_" + @item.Id).attr('disabled', false);
                </text>
            }
        }
    }


    function toggleDiv(divName) {
        $("#" + divName).toggle("slow");
    }

    function operationsCreditMemo(div) {
        $("#creditMemoValue").val(0);
        isChecked('ApplyAccountCreditMemo');
        calculateDiscount();
        var total = 0;
        listTypeMemo = [];

        @{
            foreach (var item in Model.CreditMemos)
            {
                <text>
                    if ($("#checkItemCreditMemo_" + @item.Id).prop('checked')) {
                        listTypeMemo.push(@item.Id);
                        total += parseFloat($("#itemCreditMemo_" + @item.Id).val());
                    }
                </text>
            }

            <text>
                $("#listTypeMemo").val(listTypeMemo);
                totalValueCreditMemo = total;
                $("#totalItemCreditMemo").val(totalValueCreditMemo);
            </text>
        }
        $("#creditMemoValue").val(totalValueCreditMemo);
        calculateDiscount(div);
    }

   
    function operationsCreditPayment(div) {
        $("#creditPaymentValue").val(0);
        isChecked('ApplyAccountCreditPayment');
        calculateDiscount(div);
        var total = 0;
        listTypePayment = [];
        @{
            foreach (var item in Model.CustomerPayments)
            {
                <text>
                    if ($("#checkItemCreditPayment_" + @item.Id).prop('checked')) {
                        listTypePayment.push(@item.Id);
                        total += parseFloat($("#itemCreditPayment_" + @item.Id).val());
                    }
                </text>
            }
            <text>
                $("#listTypePayment").val(listTypePayment);
                totalValueCreditPayment = total;
                $("#totalItemCreditPayment").val(totalValueCreditPayment);
            </text>
        }
        $("#creditPaymentValue").val(totalValueCreditPayment);
        calculateDiscount(div);
    }

    function isChecked(div) {
        if ($("#" + div).prop('checked')) {
            $("#" + div).removeClass("check-option-select-unchecked");
            $("#" + div).addClass("check-option-select-checked");
        } else {
            $("#" + div).removeClass("check-option-select-checked");
            $("#" + div).addClass("check-option-select-unchecked");
        }
    }

    function markAllCredits() {
        var listAllCredit = [];

        var paymentWithCreditCard = $("#creditCardApply").val();
        var valueTotalToPay = @(Model.applyaccountcreditCreditMemo + Model.applyaccountcreditDeposite + Model.applyaccountcreditPayment);

        if ($("#ApplyAllCredit").prop('checked')) {
            @{
                foreach (var item in Model.CreditMemos)
                {
                    <text>
                        listAllCredit.push(@item.Id);
                        $("#checkItemCreditMemo_@item.Id").removeClass("check-option-select-checked");
                        $("#checkItemCreditMemo_@item.Id").addClass("check-option-select-unchecked");
                        $("#checkItemCreditMemo_@item.Id").prop('disabled', true);
                    </text>
                }

                

                foreach (var item in Model.CustomerPayments)
                {
                    <text>
                        listAllCredit.push(@item.Id);
                    </text>

                    <text>
                        listAllCredit.push(@item.Id);
                        $("#checkItemCreditPayment_@item.Id").removeClass("check-option-select-checked");
                        $("#checkItemCreditPayment_@item.Id").addClass("check-option-select-unchecked");
                        $("#checkItemCreditPayment_@item.Id").prop('disabled', true);
                    </text>

                }
            }

            $("#ApplyAccountCreditMemo").prop('checked', false);
            $("#ApplyAccountCreditMemo").prop('disabled', true);
            $("#ApplyAccountCreditMemo").removeClass("check-option-select-checked");
            $("#ApplyAccountCreditMemo").addClass("check-option-select-unchecked");

           
            $("#ApplyAccountCustomerPayment").prop('checked', false);
            $("#ApplyAccountCustomerPayment").prop('disabled', true);
            $("#ApplyAccountCustomerPayment").removeClass("check-option-select-checked");
            $("#ApplyAccountCustomerPayment").addClass("check-option-select-unchecked");

            $("#listType").val("");

            @{
                <text>
                    var totalCreditsCreditMemo =  @Model.applyaccountcreditCreditMemo ;
                    var totalCreditsCreditPayment =  @Model.applyaccountcreditPayment ;
                </text>
            }

            var totalAllCredits = totalCreditsCreditMemo  + totalCreditsCreditPayment;

           
            if (valueTotalToPay > paymentWithCreditCard) {
                $(".pay-target").hide();
                $(".pay-target").addClass("displaynone");
                $(".button-continue-checkuot").attr("disabled", false);
                $("#MessageAddCreditCardInfo").addClass("displaynone");

                $("#CustomerApplyCredit").text("$" + Number.parseFloat(paymentWithCreditCard).toFixed(2));
                $("#total-partial-payment-with-credit-card").text("$" + Number.parseFloat(0).toFixed(2));

                var totalPay = Number.parseFloat(0).toFixed(2);

                document.getElementById("total-partial-payment-with-credit-card").innerHTML = "$" + totalPay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");


            } else {
                $(".pay-target").show();
                $(".pay-target").removeClass("displaynone");
                $("#MessageAddCreditCardInfo").removeClass("displaynone");

                $("#CustomerApplyCredit").text("$" + Number.parseFloat(totalAllCredits).toFixed(2));
                $("#total-partial-payment-with-credit-card").text("$" + Number.parseFloat((paymentWithCreditCard - totalAllCredits)).toFixed(2));

                var totalPay = Number.parseFloat(paymentWithCreditCard - totalAllCredits).toFixed(2);

                document.getElementById("total-partial-payment-with-credit-card").innerHTML = "$" + totalPay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

            }


        } else {

            @{
                foreach (var item in Model.CreditMemos)
                {
                    <text>
                        $("#checkItemCreditMemo_@item.Id").prop('checked', false);
                        $("#checkItemCreditMemo_@item.Id").prop('disabled', false);
                    </text>
                }

               
            }

            $(".pay-target").show();
            $(".pay-target").removeClass("displaynone");

            $("#ApplyAccountCreditMemo").prop('disabled', false);
            $("#ApplyAccountCustomerPayment").prop('disabled', false);

            $("#CustomerApplyCredit").text("$" + Number.parseFloat(0).toFixed(2));
            $("#total-partial-payment-with-credit-card").text("$" + Number.parseFloat(partialPayment).toFixed(2));

            var totalPay = Number.parseFloat(partialPayment).toFixed(2);
            document.getElementById("total-partial-payment-with-credit-card").innerHTML = "$" + totalPay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");


            $(".button-continue-checkuot").attr("disabled", true);

            $("#MessageAddCreditCardInfo").removeClass("displaynone");
        }

        $("#allCredit").val(listAllCredit);

    }

    $("#showDivCredits").hide();

    $("#showDivCreditMemo").show();
    $("#hideDivCreditMemo").hide();

    $("#showDivCreditDeposite").show();
    $("#hideDivCreditDeposite").hide();

    $("#showDivCreditPayment").show();
    $("#hideDivCreditPayment").hide();

    $("#showDivCustomerPayment").show();
    $("#hideDivCustomerPayment").hide();



    function hideDivCredits() {
        $("#hideDivCredits").hide();
        $("#showDivCredits").show();

        $(".second-level-nn").hide("slow");
    }

    function showDivCredits() {
        $("#hideDivCredits").show();
        $("#showDivCredits").hide();

        $(".second-level-nn").show("slow");
    }

    function hideDivCreditMemo() {
        $("#hideDivCreditMemo").hide();
        $("#showDivCreditMemo").show();

        $("#detailCreditMemo").hide("slow");
    }

    function showDivCreditMemo() {
        $("#hideDivCreditMemo").show();
        $("#showDivCreditMemo").hide();

        $("#detailCreditMemo").show("slow");
    }

    function hideDivCreditDeposite() {
        $("#hideDivCreditDeposite").hide();
        $("#showDivCreditDeposite").show();

        $("#detailCreditDeposite").hide("slow");
    }

    function showDivCreditDeposite() {
        $("#hideDivCreditDeposite").show();
        $("#showDivCreditDeposite").hide();

        $("#detailCreditDeposite").show("slow");
    }

    function hideDivCustomerPayment() {
        $("#hideDivCustomerPayment").hide();
        $("#showDivCustomerPayment").show();

        $("#detailCreditPayment").hide("slow");
    }

    function showDivCustomerPayment() {
        $("#hideDivCustomerPayment").show();
        $("#showDivCustomerPayment").hide();

        $("#detailCreditPayment").show("slow");
    }

    function hideDivCreditPayment() {
        $("#hideDivCreditPayment").hide();
        $("#showDivCreditPayment").show();

        $("#detailCreditPayment").hide("slow");
    }

    function showDivCreditPayment() {
        $("#hideDivCreditPayment").show();
        $("#showDivCreditPayment").hide();

        $("#detailCreditPayment").show("slow");
    }




</script>

<style>
    #discountApply,
    #creditCardApply,
    #allCredit,
    #listType,
    #listTypeMemo,
    #listTypeDeposite,
    #listTypePayment{
        display: none !important;
    }
</style>
<script>
    function validateFormAddAddress() {

        if ($("#CustomerPaymentInfoModel_Address1").val() != "" &&
            $("#CustomerPaymentInfoModel_City").val() != "" &&
            $("#CustomerPaymentInfoModel_StateProvinceId").val() != "" &&
            $("#CustomerPaymentInfoModel_ZipPostalCode").val() != "" &&
            $("#CountryId").val() != "" &&
            $("#CustomerPaymentInfoModel_PhoneNumber").val() != ""
        ) {

            $(".button-continue-checkuot").removeClass('disabled');

            $("#MessageAddCreditCardInfo").addClass("displaynone");
        } else {
            $(".button-continue-checkuot").addClass('disabled');

            $("#MessageAddCreditCardInfo").addClass("displaynone");
        }
    }

    function getCityByCountry(countryId) {
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.Action("GetStatesByCountryId", "Country"))",
            data: {
                "countryId": countryId
            },
            success: function (data, textStatus, jqXHR) {
                var cities = "";
                $('#CustomerPaymentInfoModel_StateProvinceId').html('');
                $.each(data, function (id, option) {
                    cities += "<option id='" + option.id + "'>" + option.name + "</option>";
                });
                $('#CustomerPaymentInfoModel_StateProvinceId').prepend(cities);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#CustomerPaymentInfoModel_StateProvinceId').html('');
            }
        });
    }

    function addCreditCardNumber(numberCC) {
        if ($("#" + numberCC).prop('checked')) {
            if ($("#creditcardnumber").val(numberCC) != 0) {
                $(".button-continue-checkuot").attr('disabled', false);
                $("#" + numberCC).addClass("check-option-select-checked");
                $("#MessageAddCreditCardInfo").addClass("displaynone");
            }
        }
        else {
            $("#creditcardnumber").val(0);
            $(".button-continue-checkuot").attr('disabled', true);
            $("#MessageAddCreditCardInfo").removeClass("displaynone");
        }
    }

    function creditCardSelected() {
        @{
            foreach (var creditCard in creditCardList)
            {
                <text>
                    if ($("#" + @creditCard).prop('checked')){
                        $("#MessageAddCreditCardInfo").addClass("displaynone");
                        $(".button-continue-checkuot").attr('disabled', false);
				    }
                </text>
            }
        }
    }
</script>
<style>
    .disabled {
        cursor: not-allowed;
        pointer-events: none;
    }

    .text-label-addnewbillingaddress {
        margin: 0px !important;
    }

    #total-zone-payment-information tr td{
        padding-left: 0px !important;
    }

    @@media (max-width: 800px) {
        .button-back-checkuot {
            font-size: 0.909rem !important;
            text-transform: capitalize;
            width: 100%;
            border: 1.18421px solid #E44436 !important;
            box-sizing: border-box !important;
            border-radius: 4.73684px !important;
            color: #E44436 !important;
            padding: 9.47368px 18.9474px !important;
            margin-bottom: 5px;
        }

        .message-error, .field-validation-error, .username-not-available-status, .poll-vote-error, .password-error {
            display: block;
            text-align: center;
            font-size: 13px;
            color: #e4434b;
            margin-top: 5px;
        }

        .page.order-details-page {
            margin: 25px 0px;
            border-top: 1px solid #000;
            padding-top: 35px;
        }

        .displayNone {
            display: none !important;
        }

        .zone-creditcard-myaccount .div-zone-creditcard-myaccount-mobile {
            margin: 20px 0px;
        }

        .zone-creditcard-myaccount #AddNewAddress {
           
        }

        #AddNewCard {
            top: 0px !important;
            right: 15px;
            margin-right: 0px !important;
        }

        #CardCode{
            width: 30% !important;
        }

        .PayLater-total, #CustomerApplyCredit {
            position: relative;
            left: 40px;
        }

        .credit-card-div{
            padding-right: 0px !important;
        }
    }
</style>
