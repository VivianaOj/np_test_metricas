@model CheckoutPaymentInfoModel


<div class="section payment-info">

    <div class="row justify-content-center">
        @*<div class="info">
        <div class="checkout-data">*@
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OpCheckoutPaymentInfoTop })

        @if (!Model.IsGuest)
        {
            
            if (Model.PaymentViewComponentName == "CheckMoneyOrder")
            {
                <div class="col-lg-6">
                    <div class="info paywithcard PayLaterInfo">
                        @await Component.InvokeAsync(Model.PaymentViewComponentName)
                    </div>
                    <input type="checkbox" name="AddNewCard" id="AddNewCard" class="displayNone" />

                    <style>
                        .checkout-page .payment-info {
                            height: 200px !important;
                        }
                    </style>
                    <script>
                        $(document).ready(function () {
                            $('#AddNewCard').trigger('click');
                        });
                    </script>
                </div>

            }
            else
            {
                <div class="col-md-8 wop">
                    <div class="row">
                        @if (Model.PaymentsCards?.profile != null)
                        {
                            if (Model.PaymentsCards.profile.paymentProfiles != null)
                            {

                                @foreach (var item in Model.PaymentsCards.profile.paymentProfiles)
                                {
                                    var expirationDate = item.payment.creditCard.expirationDate;
                                    var isExpired = false;
                                    if (expirationDate != "XXXX")
                                    {
                                        var expD = expirationDate.Split('-');
                                        if (expD[0] != null && expD[1] != null)
                                        {
                                            var year = Convert.ToInt32(expD[0]);
                                            var month = Convert.ToInt32(expD[1]);

                                            if (year < DateTime.Now.Year)
                                            {
                                                isExpired = true;
                                            }


                                            if (year < DateTime.Now.Year && month < DateTime.Now.Day)
                                            {
                                                isExpired = true;
                                            }
                                        }
                                    }

                                    <div class="col-md-6 input-customer wop" style="width: 100%;">
                                        <div class="form-control pay-target d-flex">

                                            @if (isExpired)
                                            {

                                            }
                                            else
                                            {
                                                <input type="checkbox" name="group1[]" class="infoCreditCard my-auto" value="@item.customerPaymentProfileId" style="float: left; top: 5px;position: relative;margin-right: 10px !important;" />
                                            }
                                            <div style="float: initial; text-align: left; margin-left: 5%;">
                                                @item.payment.creditCard.cardType - @item.payment.creditCard.cardNumber
                                            </div>
                                            @if (isExpired)
                                            {
                                                <div style="  font-style: normal; font-weight: normal;
                                                                     font-size: 0.795rem;  line-height: 1.023rem;  color: #E44436; margin:auto">@T("expirationDate.cc")</div>
                                                                }


                                        </div>
                                    </div>
                                }



                            }
                            else
                            {
                                <div class="col-md-6 input-customer">
                                    <p style="float: initial; margin-left: 5%;">No credit cards have been loaded</p>
                                </div>
                            }
                        }

                        @{
                            var classDisplay = "";
                            var Checked = "";
                            if (Model.PaymentsCards?.profile != null)
                            {
                                if (Model.PaymentsCards.profile.paymentProfiles.Count() > 0)
                                {
                                    classDisplay = "displayNone";

                                }
                            }
                            else
                            {
                                Checked = "checked";
                            }
                        }



                    </div>
                </div>

                <div class="col-md-8 input-customer">
                    <div class="form-control pay-target d-flex">
                        <input type="checkbox" name="group1[]" @Checked id="AddNewCard" value="AddNewCard" style="float: left;" class="my-auto" />
                        <p style="float: initial; margin-left: 2%; text-align: left;">Add new card</p>
                        <a href="javascript:;" style="float: right; margin-top: -34px;"></a>
                    </div>
                </div>
                <div class="col-md-8 input-customer">
                    <div class="row justify-content-center">
                        <div class="col-lg-10">
                            <div asp-validation-summary="ModelOnly" class="message-error"></div>
                            <div class="info paywithcard">
                                @await Component.InvokeAsync(Model.PaymentViewComponentName)

                                @if (!Model.IsGuest)
                                {
                                    <div class="row justify-content-center text-payment-info mt-2">
                                        <div class="col-lg-12">
                                            <div class="row shippingoptionSaveCard">
                                                <div class="col-auto d-flex">
                                                    <input type="checkbox" name="shippingoptionSaveCard" class="my-auto" />
                                                </div>
                                                <div class="col-auto d-flex p-0">
                                                    <label class="my-auto">Save for future payments </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                                @if (Model.ErrorMessage != null)
                                {
                                    <br />
                                    <div class="MessageLog">@Model.ErrorMessage</div>
                                }

                                <script>
                                    $(document).ready(function () {
                                        $('#AddNewCard').trigger('click');
                                    });
                                </script>


                            </div>
                            <br />


                        </div>
                    </div>
                </div>

            }
        }
        else
        {
            <div class="row">
                <div asp-validation-summary="ModelOnly" class="col-md-12 message-error"></div>
                <div class="info  paywithcard PayWithCardGuest">
                    @await Component.InvokeAsync(Model.PaymentViewComponentName)


                </div>
                <br />


                <div class="col-md-8 input-customer displayNone">
                    <div class="form-control pay-target">
                        <input type="checkbox" name="group1[]" id="AddNewCard" checked="checked" style="float: left; margin-top: -1px;" />
                        <p style="float: initial; margin-left: 11%; text-align: left;">Add new card</p>
                        <a href="javascript:;" style="float: right; margin-top: -34px;"></a>
                    </div>


                    @if (!Model.IsGuest)
                    {

                        <div class="row justify-content-center text-payment-info mt-2">
                            <div class="col-lg-12">
                                <div class="row shippingoptionSaveCard">
                                    <div class="col-auto d-flex">
                                        <input type="checkbox" name="shippingoptionSaveCard" class="my-auto" />
                                    </div>
                                    <div class="col-auto d-flex p-0">
                                        <label class="my-auto"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.ErrorMessage != null)
                    {
                        <br />
                        <div class="MessageLog">@Model.ErrorMessage</div>
                    }

                </div>
            </div>
        }

        

        @*</div>

        </div>*@
    </div>

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OpCheckoutPaymentInfoBottom })

    @if (Model.DisplayOrderTotals)
    {
        <div class="section order-summary">
            @await Component.InvokeAsync("OrderSummary")
        </div>
    }
</div>

<script>

    $('.infoCreditCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $("#CardholderName").css("border", "1px solid #ddd");
            $("#CardNumber").css("border", "1px solid #ddd");
            $("#CardCode").css("border", "1px solid #ddd");
            $("#ExpireMonth").css("border", "1px solid #ddd");
            $("#ExpireYear").css("border", "1px solid #ddd");
            $(".shippingoptionSaveCard").css("display", "none");
            $(".shippingoptionSaveCard").addClass("displayNone");

            $("#CardNameJs").css("display", "none");
            $("#CardNumberJs").css("display", "none");
            $("#DateJs").css("display", "none");
            $("#CardCodeJs").css("display", "none");



        }
    });
    $('#AddNewCard').on('click', function () {
        if ($(this).is(':checked')) {
            // Hacer algo si el checkbox ha sido seleccionado
            $(".paywithcard").removeClass("displayNone");
            $(".shippingoptionSaveCard").removeClass("displayNone");
            $(".shippingoptionSaveCard").css("display", "");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".paywithcard").css("display", "");
            $("#InfoCreditCard").html("");
            $(".validation-summary-errors").html("");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");

        } else {
            // Hacer algo si el checkbox ha sido deseleccionado
            $(".paywithcard").css("display", "none");
            $("#CardholderName").val("");
            $("#CardNumber").val("");
            $("#CardCode").val("");
            $(".shippingoptionSaveCard").css("display", "none");
            $("#ExpireMonth").val("01");
            $("#ExpireYear").val("2022");
            $("#DateJs").css("display", "none");


        }
    });



    $('input[type="checkbox"]').on('change', function () {

        $('input[name="' + this.name + '"]').not(this).prop('checked', false);
    });

    $(document).ready(function () {
        $('input[type=checkbox]').live('click', function () {
            var parent = $(this).parent().attr('id');
            $('#' + parent + ' input[type=checkbox]').removeAttr('checked');
            $(this).attr('checked', 'checked');
        });
    });

    


</script>
