@model NewsletterBoxModel

<div id="newsletter-mobile" style="display: none;">
    <div class="row">
        <div class="col-12 wop title-newsletter">
            @T("Newsletter.Title")
        </div>
        <div class="col-8 wop input-newsletter-home">
            <input style="width: 100%;" asp-for="NewsletterEmail" id="newsletter-email-mobile" class="text-newsletter newsletter-subscribe-text" placeholder=@T("Newsletter.Email.Placeholder") aria-label="@T("Newsletter.Subscribe")" />
        </div>
        <div class="col-4 wop">
            <input type="button" value="@T(Model.AllowToUnsubscribe ? "Newsletter.Options.Send" : "Newsletter.Options.Subscribe")" id="newsletter-subscribe-button-mobile" class="button-1 newsletter-subscribe-button" />
        </div>
        <div class="subscribe-subtitle newsletter-result" id="newsletter-result-block-mobile" style="text-align: center;margin-top: 10px;"></div>
    </div>

    @if (Model.AllowToUnsubscribe)
    {
        <div class="options">
            <span class="subscribe">
                <input id="newsletter_subscribe-mobile" type="radio" value="newsletter_subscribe-mobile" name="newsletter_block" checked="checked" />
                <label for="newsletter_subscribe">@T("Newsletter.Options.Subscribe")</label>
            </span>
            <span class="unsubscribe">
                <input id="newsletter_unsubscribe" type="radio" value="newsletter_unsubscribe" name="newsletter_block" />
                <label for="newsletter_unsubscribe">@T("Newsletter.Options.Unsubscribe")</label>
            </span>
        </div>
    }
    <div class="newsletter-validation">
        <span id="subscribe-loading-progress-mobile" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
        <span asp-validation-for="NewsletterEmail"></span>
    </div>
</div>



<script asp-location="Footer">
        function newsletter_subscribe_mobile(subscribe) {
            var subscribeProgress = $("#subscribe-loading-progress-mobile");
            subscribeProgress.show();
            var postData = {
                subscribe: subscribe,
                email: $("#newsletter-email-mobile").val()
            };
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.RouteUrl("SubscribeNewsletter"))",
                data: postData,
                success: function (data, textStatus, jqXHR) {
                    $("#newsletter-result-block-mobile").html(data.Result);
                    if (data.Success) {
                        $('#newsletter-subscribe-block-mobile').hide();
                        $(".titleMissed").css("margin-top", "0");
                        $('#newsletter-result-block-mobile').show();
                    } else {
                        $('#newsletter-result-block-mobile').fadeIn("slow").delay(2000).fadeOut("slow");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Failed to subscribe.');
                },
                complete: function (jqXHR, textStatus) {
                    subscribeProgress.hide();
                }
            });
        }

        $(document).ready(function () {
            $('#newsletter-subscribe-button-mobile').on('click', function () {
                @if (Model.AllowToUnsubscribe)
                {
                    <text>if ($('#newsletter_subscribe').is(':checked')) {
                    newsletter_subscribe_mobile('true');
                } else {
                    newsletter_subscribe_mobile('false');
                }</text>
                }
                else
                {
                    <text>newsletter_subscribe_mobile('true');</text>
                }
            });
            $("#newsletter-email-mobile").on("keydown", function (event) {
                if (event.keyCode == 13) {
                    $("#newsletter-subscribe-button-mobile").trigger("click");
                    return false;
                }
            });
        });
</script>