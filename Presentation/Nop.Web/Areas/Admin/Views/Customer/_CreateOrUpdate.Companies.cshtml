@using Nop.Services.Stores
@model CustomerModel
@inject IStoreService storeService
<div class="panel-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
        Name = "Company-grid",
        UrlRead = new DataUrl("CompanyList", "Customer", new RouteValueDictionary { [nameof(Model.CompanyModelSearchModel.customerId)] = Model.CompanyModelSearchModel.customerId }),
        Length = Model.CompanyModelSearchModel.PageSize,
        LengthMenu = Model.CompanyModelSearchModel.AvailablePageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
             new ColumnProperty(nameof(CompanyCustomerModel.Parent))
            {
                Title = T("Admin.Customers.Customers.company.NetsuitId").Text,
                Width = "200"
            },
           new ColumnProperty(nameof(CompanyCustomerModel.CompanyName))
            {
                Title = T("Admin.Customers.Customers.company.CompanyName").Text,
                Width = "200"
            },
            new ColumnProperty(nameof(CompanyCustomerModel.Id))
            {
                 Title = T("Admin.Common.View").Text,
                 Width = "100",
                 ClassName = NopColumnClassDefaults.Button,
                Render = new RenderButtonView(new DataUrl("~/Admin/Company/View/"))
            }
        }
    })
    <script>
        function renderColumnOrderStatus(data, type, row, meta) {
            var color; 
            switch (row.OrderStatusId) {
            case 10: color = 'yellow'; break;
            case 20: color = 'blue'; break;
            case 30: color = 'green'; break;
            case 40: color = 'red'; break;
            }
            return '<span class="grid-report-item ' + color + '">' + data + '</span >';
        }
    </script>
</div>
