@model FreightQuoteSearchModel

@inject IStoreService storeService
@using Nop.Services.Stores

@{
    //page title
    ViewBag.Title = T("Admin.Invoice").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Invoice");
}

@{
    const string hideSearchBlockAttributeName = "OrdersPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<form asp-controller="Report" asp-action="List" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.FreightQuoteReport")
        </h1>
        <div class="pull-right">
            <div class="btn-group">
               
               
               
            </div>
           
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.OrderListButtons })
        </div>
    </div>
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <nop-label asp-for="StartDate" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="StartDate" />
                                        </div>
                                    </div>
                                   
                                </div>
                                <div class="col-md-7">
                                  
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-md-offset-5">
                                    <button type="button" id="search-FreightQuotes" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        @{
                            var gridModel = new DataTablesModel
                            {
                                Name = "Orders-grid",
                                UrlRead = new DataUrl("FreightQuotesList", "Report", null),
                                SearchButtonId = "search-FreightQuotes",
                                Length = Model.PageSize,
                                LengthMenu = Model.AvailablePageSizes,
                                FooterCallback = !Model.IsLoggedInAsVendor ? "ordersfootercallback" : null,
                                FooterColumns = !Model.IsLoggedInAsVendor ? 2 : 0,
                                Filters = new List<FilterParameter>
                                {
                                    new FilterParameter(nameof(Model.StartDate))

                                }
                            };
                            gridModel.ColumnCollection = new List<ColumnProperty>
                                                            {
                                 new ColumnProperty(nameof(FreightQuoteTransactionModel.RequestDate))
                                {
                                    Title = T("Admin.Orders.Fields.RequestDate").Text,
                                    Width = "80"
                                },

                                new ColumnProperty(nameof(FreightQuoteTransactionModel.Name))
                                {
                                    Title = T("Admin.Orders.Fields.Name").Text,
                                    Width = "80"
                                },
                                new ColumnProperty(nameof(FreightQuoteTransactionModel.Email))
                                {
                                    Title = T("Admin.Orders.Fields.Email").Text,
                                    Width = "80"
                                }
                            };



                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(FreightQuoteTransactionModel.Phone))
                            {
                                Title = T("Admin.Orders.Fields.Phone").Text,
                                Width = "250",
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(FreightQuoteTransactionModel.Infomation))
                            {
                                Title = T("Admin.Orders.Fields.Infomation").Text,
                                Width = "250",
                            });


                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(FreightQuoteTransactionModel.BillingAddress))
                            {
                                Title = T("Admin.Orders.Fields.BillingAddress").Text,
                                Width = "250",
                            });

                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(FreightQuoteTransactionModel.Shippng_Address))
                            {
                                Title = T("Admin.Orders.Fields.Shippng_Address").Text,
                                Width = "250",
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(FreightQuoteTransactionModel.Items))
                            {
                                Title = T("Admin.Orders.Fields.Items").Text,
                                Width = "250",
                            });


                            var orderSummaryColumnNumber = 8;
                        }

                        @await Html.PartialAsync("Table", gridModel)

                        <script>
                            function renderColumnOrderStatus(data, type, row, meta) {
                                var color;
                                switch (row.OrderStatusId) {
                                case 10:
                                    color = 'yellow';
                                break;
                                case 60:
                                case 70:
                                case 80:
                                case 20:
                                    color = 'blue';
                                break;
                                case 80:
                                case 30:
                                    color = 'green';
                                    break;
                                case 40:
                                    color = 'red';
                                    break;
                                }
                                return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                            }

                            $(document).ready(function() {
                                $("#@Html.IdFor(model => model.GoDirectlyToCustomOrderNumber)").keydown(
                                    function(event) {
                                        if (event.keyCode === 13) {
                                            $("#go-to-order-by-number").click();
                                            return false;
                                        }
                                    });
                            });
                            function ordersfootercallback(tfoot, data, start, end, display) {
                                //update order totals summary
                                var postData = { };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ReportAggregates", "Order"))",
                                    data: postData,
                                    success: function (data, textStatus, jqXHR) {
                                        if (data) {
                                            for (var key in data) {
                                                var reportSummary = '<div><strong>@T("Admin.Orders.Report.Summary")</strong></div>' +
                                                    '<div>@T("Admin.Orders.Report.Profit") <span>' + data['aggregatorprofit'] +'</span></div>' +
                                                    '<div>@T("Admin.Orders.Report.Shipping") <span>' + data['aggregatorshipping'] + '</span></div>' +
                                                    '<div>@T("Admin.Orders.Report.Tax") <span>' +  data['aggregatortax'] + '</span></div>' +
                                                    '<div>@T("Admin.Orders.Report.Total") <span>' + data['aggregatortotal'] + '</span></div>'
                                                var orderTotalsColumn = $('#orders-grid').DataTable().column(@(orderSummaryColumnNumber));
                                                $(orderTotalsColumn.footer()).html(reportSummary);
                                            }
                                        }
                                    }
                                });
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
