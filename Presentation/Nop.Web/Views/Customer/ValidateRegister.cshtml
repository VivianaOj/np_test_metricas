@model RegisterModel
@inject Nop.Core.IWebHelper webHelper

@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
}

<div class="page registration-page">
    <div class="registration-page-title">
        <h1>@T("Account.Register")</h1>
    </div>
    <div class="page-body">
        <form asp-route="ValidateRegister" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            <div class="fieldset">
                <div class="registration-page-subtitle">
                    <strong>@T("account.register.title")</strong>
                </div>

                <div class="form-fields">
                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-md-7">
                            <div class="registration-page-form-label">
                                <label asp-for="Email" asp-postfix=":"></label>
                                <nop-required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-md-7">
                            <div class="inputs">
                                <input maxlength="100" asp-for="Email" class="registration-page-form-input" />
                                <span asp-validation-for="Email"></span>
                            </div>
                        </div>
                    </div>

                    @if (Model.EnteringEmailTwice)
                    {
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-7">
                                <div class="registration-page-form-label">
                                    <label asp-for="ConfirmEmail" asp-postfix=":"></label>
                                    <nop-required />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-7">
                                <div class="inputs">
                                    <input asp-for="ConfirmEmail" />
                                    <span asp-validation-for="ConfirmEmail"></span>
                                </div>
                            </div>
                        </div>
                    }

                    @if (Model.UsernamesEnabled)
                    {
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-7">
                                <div class="registration-page-form-label">
                                    <label asp-for="Username" asp-postfix=":"></label>
                                    <nop-required />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-7">
                                <div class="inputs">
                                    <input asp-for="Username" />
                                    <span asp-validation-for="Username"></span>
                                    @if (Model.CheckUsernameAvailabilityEnabled)
                                    {
                                        @await Html.PartialAsync("_CheckUsernameAvailability")
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    @if (Model.AccountAlreadyRegister)
                    {
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-7">
                                <div class="registration-page-form-message">
                                    @{ var returnUrl = webHelper.GetRawUrl(Context.Request); }
                                    <strong>@T("account.register.alreadymessage")</strong>&nbsp;<strong><a href="@Url.RouteUrl("Login", new { returnUrl })">@T("Account.Login")</a></strong>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-md-4"></div>
                            <div class="col-md-7">
                                <div class="registration-page-form-message">
                                    <strong>@T("account.register.message")</strong>
                                </div>
                            </div>
                        </div>
                    }

                    @*@if (Model.DisplayCaptcha)
                    {
                        <div class="captcha-box">
                            <nop-captcha />
                        </div>
                    }*@

                </div>
            </div>

            <div class="buttons">
                <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button" />
            </div>
        </form>
        <div class="external-authentication">
            @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        </div>
    </div>
</div>