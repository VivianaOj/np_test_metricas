@model MiniShoppingCartModel
<div id="flyout-cart" class="flyout-cart">
    <div class="mini-shopping-cart">
        <div class="count">
            @if (Model.TotalProducts == 0)
            {
                @T("ShoppingCart.Mini.NoItems")
            }
            else
            {
                @Html.Raw(string.Format(T("ShoppingCart.Mini.ItemsText").Text, $"<a href=\"{Url.RouteUrl("ShoppingCart")}\">{string.Format(T("ShoppingCart.Mini.Items").Text, Model.TotalProducts)}</a>"))
            }
        </div>
        @if (Model.TotalProducts > 0)
        {
            <div class="items">
                @for (var i = 0; i < Model.Items.Count; i++)
                {
                    var item = Model.Items[i];
                    <div class="item @(i == 0 ? "first" : null)">
                        @if (Model.ShowProductImages)
                        {
                            <div class="picture">
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title">
                                    <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                </a>
                            </div>
                        }
                        <div class="row product" style="margin-bottom: 20px;">
                            <div class="col-md-10">
                                <div class="name">
                                    <a class="name-item-shopping" href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                </div>
                                @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                {
                                    <div class="attributes">
                                        @Html.Raw(item.AttributeInfo)
                                    </div>
                                }
                            </div>
                            <div class="col-md-2">
                                <a href="#"><i class="glyphicon glyphicon-trash"></i></a><!--delete button-->
                            </div>
                            <div class="col-md-12" style="border-bottom: 1px solid #dddddd;margin-top: 10px;margin-bottom: 10px;"></div>
                            <div class="col-md-8">
                                <button style="float:left;border-radius: 50%; background: #E44436; color: white;width: 30px;height:30px;border: 0px;margin-left:10px">-</button>
                                <input class="form-control" value="@item.Quantity" style="float:left;width: 40px;margin-left:10px">
                                <button style="float:left;border-radius: 50%; background: #E44436; color: white;width: 30px;height:30px;border: 0px;margin-left:10px">+</button>
                            </div>
                            <div class="col-md-4">
                                <div class="price-shoping-card">@item.UnitPrice</div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="totals">@T("ShoppingCart.Totals.SubTotal"): <strong>@Model.SubTotal</strong></div>
            <div class="buttons" style="margin-top: 10px;">
                @if (Model.DisplayShoppingCartButton)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="btn-continue-shopping-1" >
                                <i class="glyphicon glyphicon-briefcase" style="color: #37AEF3; margin-right: 10px;"></i> 
                                Continue Shopping
                            </div>        
                        </div>
                        <div class="col-md-6">
                            <input type="button" value="Checkout" onclick="setLocation('@(Url.RouteUrl("ShoppingCart"))')" style="width: 100%;" />
                        </div>
                    </div>
                    
                    
                }
                @if (Model.DisplayCheckoutButton)
                {
                    var checkoutUrl = "";
                    if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                    {
                        checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                    }
                    else
                    {
                        checkoutUrl = Url.RouteUrl("Checkout");
                    }
                    <div class="row">
                        <div class="col-md-6">
                            <input type="button" value="Continue Shopping" class="btn btn-default" onclick="setLocation('@checkoutUrl')" />        
                        </div>
                        <div class="col-md-6">
                            <input type="button" value="Checkout" class="btn btn-info" onclick="setLocation('@checkoutUrl')" />        
                        </div>
                    </div>
                    
                }
            </div>
        }
    </div>
</div>
